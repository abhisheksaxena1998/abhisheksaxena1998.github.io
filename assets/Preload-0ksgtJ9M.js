import{_ as F0}from"./extends-dGVwEr9R.js";import{r as ze,g as B0}from"./index-Y5TUN0Pf.js";/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const $c="162",ux={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},hx={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},z0=0,Rf=1,k0=2,fx=3,H0=0,eu=1,ha=2,yi=3,rr=0,Un=1,Di=2,ir=0,ds=1,Pf=2,Lf=3,If=4,V0=5,br=100,G0=101,W0=102,Nf=103,Df=104,X0=200,q0=201,Y0=202,Z0=203,Xc=204,qc=205,J0=206,K0=207,j0=208,Q0=209,$0=210,e_=211,t_=212,n_=213,i_=214,r_=0,s_=1,o_=2,ga=3,a_=4,l_=5,c_=6,u_=7,Ba=0,h_=1,f_=2,Fi=0,d_=1,p_=2,m_=3,Md=4,g_=5,__=6,v_=7,Uf="attached",y_="detached",tu=300,sr=301,Lr=302,_a=303,va=304,wo=306,ya=1e3,An=1001,xa=1002,jt=1003,Yc=1004,dx=1004,os=1005,px=1005,kt=1006,fa=1007,mx=1007,Ui=1008,gx=1008,Bi=1009,x_=1010,S_=1011,nu=1012,Ed=1013,tr=1014,jn=1015,yo=1016,wd=1017,Td=1018,Cr=1020,M_=1021,Nn=1023,E_=1024,w_=1025,Rr=1026,_s=1027,Ad=1028,bd=1029,T_=1030,Cd=1031,Rd=1033,Fc=33776,Bc=33777,zc=33778,kc=33779,Of=35840,Ff=35841,Bf=35842,zf=35843,Pd=36196,kf=37492,Hf=37496,Vf=37808,Gf=37809,Wf=37810,Xf=37811,qf=37812,Yf=37813,Zf=37814,Jf=37815,Kf=37816,jf=37817,Qf=37818,$f=37819,ed=37820,td=37821,Hc=36492,nd=36494,id=36495,A_=36283,rd=36284,sd=36285,od=36286,b_=2200,C_=2201,R_=2202,Sa=2300,Ma=2301,Vc=2302,ls=2400,cs=2401,Ea=2402,iu=2500,Ld=2501,_x=0,vx=1,yx=2,P_=3200,L_=3201,Nr=0,I_=1,$i="",di="srgb",ar="srgb-linear",ru="display-p3",za="display-p3-linear",wa="linear",Dt="srgb",Ta="rec709",Aa="p3",xx=0,rs=7680,Sx=7681,Mx=7682,Ex=7683,wx=34055,Tx=34056,Ax=5386,bx=512,Cx=513,Rx=514,Px=515,Lx=516,Ix=517,Nx=518,ad=519,N_=512,D_=513,U_=514,Id=515,O_=516,F_=517,B_=518,z_=519,ba=35044,Dx=35048,Ux=35040,Ox=35045,Fx=35049,Bx=35041,zx=35046,kx=35050,Hx=35042,Vx="100",ld="300 es",Zc=1035,Oi=2e3,Ca=2001;class lr{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}}const En=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Wm=1234567;const ps=Math.PI/180,xo=180/Math.PI;function $n(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(En[r&255]+En[r>>8&255]+En[r>>16&255]+En[r>>24&255]+"-"+En[e&255]+En[e>>8&255]+"-"+En[e>>16&15|64]+En[e>>24&255]+"-"+En[t&63|128]+En[t>>8&255]+"-"+En[t>>16&255]+En[t>>24&255]+En[n&255]+En[n>>8&255]+En[n>>16&255]+En[n>>24&255]).toLowerCase()}function Yt(r,e,t){return Math.max(e,Math.min(t,r))}function Nd(r,e){return(r%e+e)%e}function Gx(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function Wx(r,e,t){return r!==e?(t-r)/(e-r):0}function da(r,e,t){return(1-t)*r+t*e}function Xx(r,e,t,n){return da(r,e,1-Math.exp(-t*n))}function qx(r,e=1){return e-Math.abs(Nd(r,e*2)-e)}function Yx(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function Zx(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function Jx(r,e){return r+Math.floor(Math.random()*(e-r+1))}function Kx(r,e){return r+Math.random()*(e-r)}function jx(r){return r*(.5-Math.random())}function Qx(r){r!==void 0&&(Wm=r);let e=Wm+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function $x(r){return r*ps}function eS(r){return r*xo}function cd(r){return(r&r-1)===0&&r!==0}function tS(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function Jc(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function nS(r,e,t,n,i){const s=Math.cos,l=Math.sin,c=s(t/2),u=l(t/2),h=s((e+n)/2),d=l((e+n)/2),p=s((e-n)/2),m=l((e-n)/2),_=s((n-e)/2),y=l((n-e)/2);switch(i){case"XYX":r.set(c*d,u*p,u*m,c*h);break;case"YZY":r.set(u*m,c*d,u*p,c*h);break;case"ZXZ":r.set(u*p,u*m,c*d,c*h);break;case"XZX":r.set(c*d,u*y,u*_,c*h);break;case"YXY":r.set(u*_,c*d,u*y,c*h);break;case"ZYZ":r.set(u*y,u*_,c*d,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Dn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function dt(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const iS={DEG2RAD:ps,RAD2DEG:xo,generateUUID:$n,clamp:Yt,euclideanModulo:Nd,mapLinear:Gx,inverseLerp:Wx,lerp:da,damp:Xx,pingpong:qx,smoothstep:Yx,smootherstep:Zx,randInt:Jx,randFloat:Kx,randFloatSpread:jx,seededRandom:Qx,degToRad:$x,radToDeg:eS,isPowerOfTwo:cd,ceilPowerOfTwo:tS,floorPowerOfTwo:Jc,setQuaternionFromProperEuler:nS,normalize:dt,denormalize:Dn};class he{constructor(e=0,t=0){he.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Yt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,l=this.y-e.y;return this.x=s*n-l*i+e.x,this.y=s*i+l*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ft{constructor(e,t,n,i,s,l,c,u,h){ft.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h)}set(e,t,n,i,s,l,c,u,h){const d=this.elements;return d[0]=e,d[1]=i,d[2]=c,d[3]=t,d[4]=s,d[5]=u,d[6]=n,d[7]=l,d[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[3],u=n[6],h=n[1],d=n[4],p=n[7],m=n[2],_=n[5],y=n[8],E=i[0],x=i[3],v=i[6],w=i[1],M=i[4],A=i[7],N=i[2],R=i[5],L=i[8];return s[0]=l*E+c*w+u*N,s[3]=l*x+c*M+u*R,s[6]=l*v+c*A+u*L,s[1]=h*E+d*w+p*N,s[4]=h*x+d*M+p*R,s[7]=h*v+d*A+p*L,s[2]=m*E+_*w+y*N,s[5]=m*x+_*M+y*R,s[8]=m*v+_*A+y*L,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8];return t*l*d-t*c*h-n*s*d+n*c*u+i*s*h-i*l*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=d*l-c*h,m=c*u-d*s,_=h*s-l*u,y=t*p+n*m+i*_;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const E=1/y;return e[0]=p*E,e[1]=(i*h-d*n)*E,e[2]=(c*n-i*l)*E,e[3]=m*E,e[4]=(d*t-i*u)*E,e[5]=(i*s-c*t)*E,e[6]=_*E,e[7]=(n*u-h*t)*E,e[8]=(l*t-n*s)*E,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,l,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*l+h*c)+l+e,-i*h,i*u,-i*(-h*l+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Dh.makeScale(e,t)),this}rotate(e){return this.premultiply(Dh.makeRotation(-e)),this}translate(e,t){return this.premultiply(Dh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Dh=new ft;function k_(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const rS={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function ho(r,e){return new rS[r](e)}function Ra(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function H_(){const r=Ra("canvas");return r.style.display="block",r}const Xm={};function V_(r){r in Xm||(Xm[r]=!0,console.warn(r))}const qm=new ft().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Ym=new ft().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Wl={[ar]:{transfer:wa,primaries:Ta,toReference:r=>r,fromReference:r=>r},[di]:{transfer:Dt,primaries:Ta,toReference:r=>r.convertSRGBToLinear(),fromReference:r=>r.convertLinearToSRGB()},[za]:{transfer:wa,primaries:Aa,toReference:r=>r.applyMatrix3(Ym),fromReference:r=>r.applyMatrix3(qm)},[ru]:{transfer:Dt,primaries:Aa,toReference:r=>r.convertSRGBToLinear().applyMatrix3(Ym),fromReference:r=>r.applyMatrix3(qm).convertLinearToSRGB()}},sS=new Set([ar,za]),Ct={enabled:!0,_workingColorSpace:ar,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(r){if(!sS.has(r))throw new Error(`Unsupported working color space, "${r}".`);this._workingColorSpace=r},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=Wl[e].toReference,i=Wl[t].fromReference;return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this._workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this._workingColorSpace)},getPrimaries:function(r){return Wl[r].primaries},getTransfer:function(r){return r===$i?wa:Wl[r].transfer}};function vo(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Uh(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let ks;class Dd{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{ks===void 0&&(ks=Ra("canvas")),ks.width=e.width,ks.height=e.height;const n=ks.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=ks}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Ra("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let l=0;l<s.length;l++)s[l]=vo(s[l]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(vo(t[n]/255)*255):t[n]=vo(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let oS=0;class us{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:oS++}),this.uuid=$n(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?s.push(Oh(i[l].image)):s.push(Oh(i[l]))}else s=Oh(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Oh(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Dd.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let aS=0;class Vt extends lr{constructor(e=Vt.DEFAULT_IMAGE,t=Vt.DEFAULT_MAPPING,n=An,i=An,s=kt,l=Ui,c=Nn,u=Bi,h=Vt.DEFAULT_ANISOTROPY,d=$i){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:aS++}),this.uuid=$n(),this.name="",this.source=new us(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=l,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new he(0,0),this.repeat=new he(1,1),this.center=new he(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ft,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=d,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==tu)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ya:e.x=e.x-Math.floor(e.x);break;case An:e.x=e.x<0?0:1;break;case xa:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ya:e.y=e.y-Math.floor(e.y);break;case An:e.y=e.y<0?0:1;break;case xa:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}Vt.DEFAULT_IMAGE=null;Vt.DEFAULT_MAPPING=tu;Vt.DEFAULT_ANISOTROPY=1;class Rt{constructor(e=0,t=0,n=0,i=1){Rt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,l=e.elements;return this.x=l[0]*t+l[4]*n+l[8]*i+l[12]*s,this.y=l[1]*t+l[5]*n+l[9]*i+l[13]*s,this.z=l[2]*t+l[6]*n+l[10]*i+l[14]*s,this.w=l[3]*t+l[7]*n+l[11]*i+l[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],d=u[4],p=u[8],m=u[1],_=u[5],y=u[9],E=u[2],x=u[6],v=u[10];if(Math.abs(d-m)<.01&&Math.abs(p-E)<.01&&Math.abs(y-x)<.01){if(Math.abs(d+m)<.1&&Math.abs(p+E)<.1&&Math.abs(y+x)<.1&&Math.abs(h+_+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const M=(h+1)/2,A=(_+1)/2,N=(v+1)/2,R=(d+m)/4,L=(p+E)/4,F=(y+x)/4;return M>A&&M>N?M<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(M),i=R/n,s=L/n):A>N?A<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(A),n=R/i,s=F/i):N<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(N),n=L/s,i=F/s),this.set(n,i,s,t),this}let w=Math.sqrt((x-y)*(x-y)+(p-E)*(p-E)+(m-d)*(m-d));return Math.abs(w)<.001&&(w=1),this.x=(x-y)/w,this.y=(p-E)/w,this.z=(m-d)/w,this.w=Math.acos((h+_+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class G_ extends lr{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Rt(0,0,e,t),this.scissorTest=!1,this.viewport=new Rt(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:kt,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0,count:1},n);const s=new Vt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=s.clone(),this.textures[c].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new us(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Si extends G_{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class su extends Vt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=jt,this.minFilter=jt,this.wrapR=An,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class lS extends Si{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new su(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Ud extends Vt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=jt,this.minFilter=jt,this.wrapR=An,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class cS extends Si{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Ud(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Vn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,l,c){let u=n[i+0],h=n[i+1],d=n[i+2],p=n[i+3];const m=s[l+0],_=s[l+1],y=s[l+2],E=s[l+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=_,e[t+2]=y,e[t+3]=E;return}if(p!==E||u!==m||h!==_||d!==y){let x=1-c;const v=u*m+h*_+d*y+p*E,w=v>=0?1:-1,M=1-v*v;if(M>Number.EPSILON){const N=Math.sqrt(M),R=Math.atan2(N,v*w);x=Math.sin(x*R)/N,c=Math.sin(c*R)/N}const A=c*w;if(u=u*x+m*A,h=h*x+_*A,d=d*x+y*A,p=p*x+E*A,x===1-c){const N=1/Math.sqrt(u*u+h*h+d*d+p*p);u*=N,h*=N,d*=N,p*=N}}e[t]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,l){const c=n[i],u=n[i+1],h=n[i+2],d=n[i+3],p=s[l],m=s[l+1],_=s[l+2],y=s[l+3];return e[t]=c*y+d*p+u*_-h*m,e[t+1]=u*y+d*m+h*p-c*_,e[t+2]=h*y+d*_+c*m-u*p,e[t+3]=d*y-c*p-u*m-h*_,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,s=e._z,l=e._order,c=Math.cos,u=Math.sin,h=c(n/2),d=c(i/2),p=c(s/2),m=u(n/2),_=u(i/2),y=u(s/2);switch(l){case"XYZ":this._x=m*d*p+h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p-m*_*y;break;case"YXZ":this._x=m*d*p+h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p+m*_*y;break;case"ZXY":this._x=m*d*p-h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p-m*_*y;break;case"ZYX":this._x=m*d*p-h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p+m*_*y;break;case"YZX":this._x=m*d*p+h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p-m*_*y;break;case"XZY":this._x=m*d*p-h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p+m*_*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],l=t[1],c=t[5],u=t[9],h=t[2],d=t[6],p=t[10],m=n+c+p;if(m>0){const _=.5/Math.sqrt(m+1);this._w=.25/_,this._x=(d-u)*_,this._y=(s-h)*_,this._z=(l-i)*_}else if(n>c&&n>p){const _=2*Math.sqrt(1+n-c-p);this._w=(d-u)/_,this._x=.25*_,this._y=(i+l)/_,this._z=(s+h)/_}else if(c>p){const _=2*Math.sqrt(1+c-n-p);this._w=(s-h)/_,this._x=(i+l)/_,this._y=.25*_,this._z=(u+d)/_}else{const _=2*Math.sqrt(1+p-n-c);this._w=(l-i)/_,this._x=(s+h)/_,this._y=(u+d)/_,this._z=.25*_}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Yt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,l=e._w,c=t._x,u=t._y,h=t._z,d=t._w;return this._x=n*d+l*c+i*h-s*u,this._y=i*d+l*u+s*c-n*h,this._z=s*d+l*h+n*u-i*c,this._w=l*d-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,l=this._w;let c=l*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const _=1-t;return this._w=_*l+t*this._w,this._x=_*n+t*this._x,this._y=_*i+t*this._y,this._z=_*s+t*this._z,this.normalize(),this}const h=Math.sqrt(u),d=Math.atan2(h,c),p=Math.sin((1-t)*d)/h,m=Math.sin(t*d)/h;return this._w=l*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class D{constructor(e=0,t=0,n=0){D.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Zm.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Zm.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,l=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*l,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*l,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*l,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,l=e.y,c=e.z,u=e.w,h=2*(l*i-c*n),d=2*(c*t-s*i),p=2*(s*n-l*t);return this.x=t+u*h+l*p-c*d,this.y=n+u*d+c*h-s*p,this.z=i+u*p+s*d-l*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,l=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*l-n*u,this.z=n*c-i*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Fh.copy(this).projectOnVector(e),this.sub(Fh)}reflect(e){return this.sub(Fh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Yt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Fh=new D,Zm=new Vn;class On{constructor(e=new D(1/0,1/0,1/0),t=new D(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(gi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(gi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=gi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let l=0,c=s.count;l<c;l++)e.isMesh===!0?e.getVertexPosition(l,gi):gi.fromBufferAttribute(s,l),gi.applyMatrix4(e.matrixWorld),this.expandByPoint(gi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Xl.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Xl.copy(n.boundingBox)),Xl.applyMatrix4(e.matrixWorld),this.union(Xl)}const i=e.children;for(let s=0,l=i.length;s<l;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,gi),gi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(jo),ql.subVectors(this.max,jo),Hs.subVectors(e.a,jo),Vs.subVectors(e.b,jo),Gs.subVectors(e.c,jo),vr.subVectors(Vs,Hs),yr.subVectors(Gs,Vs),qr.subVectors(Hs,Gs);let t=[0,-vr.z,vr.y,0,-yr.z,yr.y,0,-qr.z,qr.y,vr.z,0,-vr.x,yr.z,0,-yr.x,qr.z,0,-qr.x,-vr.y,vr.x,0,-yr.y,yr.x,0,-qr.y,qr.x,0];return!Bh(t,Hs,Vs,Gs,ql)||(t=[1,0,0,0,1,0,0,0,1],!Bh(t,Hs,Vs,Gs,ql))?!1:(Yl.crossVectors(vr,yr),t=[Yl.x,Yl.y,Yl.z],Bh(t,Hs,Vs,Gs,ql))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,gi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(gi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Yi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Yi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Yi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Yi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Yi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Yi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Yi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Yi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Yi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Yi=[new D,new D,new D,new D,new D,new D,new D,new D],gi=new D,Xl=new On,Hs=new D,Vs=new D,Gs=new D,vr=new D,yr=new D,qr=new D,jo=new D,ql=new D,Yl=new D,Yr=new D;function Bh(r,e,t,n,i){for(let s=0,l=r.length-3;s<=l;s+=3){Yr.fromArray(r,s);const c=i.x*Math.abs(Yr.x)+i.y*Math.abs(Yr.y)+i.z*Math.abs(Yr.z),u=e.dot(Yr),h=t.dot(Yr),d=n.dot(Yr);if(Math.max(-Math.max(u,h,d),Math.min(u,h,d))>c)return!1}return!0}const uS=new On,Qo=new D,zh=new D;class bn{constructor(e=new D,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):uS.setFromPoints(e).getCenter(n);let i=0;for(let s=0,l=e.length;s<l;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Qo.subVectors(e,this.center);const t=Qo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Qo,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(zh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Qo.copy(e.center).add(zh)),this.expandByPoint(Qo.copy(e.center).sub(zh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Zi=new D,kh=new D,Zl=new D,xr=new D,Hh=new D,Jl=new D,Vh=new D;class To{constructor(e=new D,t=new D(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Zi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Zi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Zi.copy(this.origin).addScaledVector(this.direction,t),Zi.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){kh.copy(e).add(t).multiplyScalar(.5),Zl.copy(t).sub(e).normalize(),xr.copy(this.origin).sub(kh);const s=e.distanceTo(t)*.5,l=-this.direction.dot(Zl),c=xr.dot(this.direction),u=-xr.dot(Zl),h=xr.lengthSq(),d=Math.abs(1-l*l);let p,m,_,y;if(d>0)if(p=l*u-c,m=l*c-u,y=s*d,p>=0)if(m>=-y)if(m<=y){const E=1/d;p*=E,m*=E,_=p*(p+l*m+2*c)+m*(l*p+m+2*u)+h}else m=s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-l*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),_=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),_=m*(m+2*u)+h):(p=Math.max(0,-(l*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),_=-p*p+m*(m+2*u)+h);else m=l>0?-s:s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(kh).addScaledVector(Zl,m),_}intersectSphere(e,t){Zi.subVectors(e.center,this.origin);const n=Zi.dot(this.direction),i=Zi.dot(Zi)-n*n,s=e.radius*e.radius;if(i>s)return null;const l=Math.sqrt(s-i),c=n-l,u=n+l;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,l,c,u;const h=1/this.direction.x,d=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),d>=0?(s=(e.min.y-m.y)*d,l=(e.max.y-m.y)*d):(s=(e.max.y-m.y)*d,l=(e.min.y-m.y)*d),n>l||s>i||((s>n||isNaN(n))&&(n=s),(l<i||isNaN(i))&&(i=l),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Zi)!==null}intersectTriangle(e,t,n,i,s){Hh.subVectors(t,e),Jl.subVectors(n,e),Vh.crossVectors(Hh,Jl);let l=this.direction.dot(Vh),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;xr.subVectors(this.origin,e);const u=c*this.direction.dot(Jl.crossVectors(xr,Jl));if(u<0)return null;const h=c*this.direction.dot(Hh.cross(xr));if(h<0||u+h>l)return null;const d=-c*xr.dot(Vh);return d<0?null:this.at(d/l,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class $e{constructor(e,t,n,i,s,l,c,u,h,d,p,m,_,y,E,x){$e.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h,d,p,m,_,y,E,x)}set(e,t,n,i,s,l,c,u,h,d,p,m,_,y,E,x){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=s,v[5]=l,v[9]=c,v[13]=u,v[2]=h,v[6]=d,v[10]=p,v[14]=m,v[3]=_,v[7]=y,v[11]=E,v[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new $e().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Ws.setFromMatrixColumn(e,0).length(),s=1/Ws.setFromMatrixColumn(e,1).length(),l=1/Ws.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*l,t[9]=n[9]*l,t[10]=n[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,l=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),d=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=l*d,_=l*p,y=c*d,E=c*p;t[0]=u*d,t[4]=-u*p,t[8]=h,t[1]=_+y*h,t[5]=m-E*h,t[9]=-c*u,t[2]=E-m*h,t[6]=y+_*h,t[10]=l*u}else if(e.order==="YXZ"){const m=u*d,_=u*p,y=h*d,E=h*p;t[0]=m+E*c,t[4]=y*c-_,t[8]=l*h,t[1]=l*p,t[5]=l*d,t[9]=-c,t[2]=_*c-y,t[6]=E+m*c,t[10]=l*u}else if(e.order==="ZXY"){const m=u*d,_=u*p,y=h*d,E=h*p;t[0]=m-E*c,t[4]=-l*p,t[8]=y+_*c,t[1]=_+y*c,t[5]=l*d,t[9]=E-m*c,t[2]=-l*h,t[6]=c,t[10]=l*u}else if(e.order==="ZYX"){const m=l*d,_=l*p,y=c*d,E=c*p;t[0]=u*d,t[4]=y*h-_,t[8]=m*h+E,t[1]=u*p,t[5]=E*h+m,t[9]=_*h-y,t[2]=-h,t[6]=c*u,t[10]=l*u}else if(e.order==="YZX"){const m=l*u,_=l*h,y=c*u,E=c*h;t[0]=u*d,t[4]=E-m*p,t[8]=y*p+_,t[1]=p,t[5]=l*d,t[9]=-c*d,t[2]=-h*d,t[6]=_*p+y,t[10]=m-E*p}else if(e.order==="XZY"){const m=l*u,_=l*h,y=c*u,E=c*h;t[0]=u*d,t[4]=-p,t[8]=h*d,t[1]=m*p+E,t[5]=l*d,t[9]=_*p-y,t[2]=y*p-_,t[6]=c*d,t[10]=E*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(hS,e,fS)}lookAt(e,t,n){const i=this.elements;return Jn.subVectors(e,t),Jn.lengthSq()===0&&(Jn.z=1),Jn.normalize(),Sr.crossVectors(n,Jn),Sr.lengthSq()===0&&(Math.abs(n.z)===1?Jn.x+=1e-4:Jn.z+=1e-4,Jn.normalize(),Sr.crossVectors(n,Jn)),Sr.normalize(),Kl.crossVectors(Jn,Sr),i[0]=Sr.x,i[4]=Kl.x,i[8]=Jn.x,i[1]=Sr.y,i[5]=Kl.y,i[9]=Jn.y,i[2]=Sr.z,i[6]=Kl.z,i[10]=Jn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[4],u=n[8],h=n[12],d=n[1],p=n[5],m=n[9],_=n[13],y=n[2],E=n[6],x=n[10],v=n[14],w=n[3],M=n[7],A=n[11],N=n[15],R=i[0],L=i[4],F=i[8],W=i[12],b=i[1],P=i[5],$=i[9],ae=i[13],z=i[2],ie=i[6],Z=i[10],ce=i[14],k=i[3],X=i[7],J=i[11],re=i[15];return s[0]=l*R+c*b+u*z+h*k,s[4]=l*L+c*P+u*ie+h*X,s[8]=l*F+c*$+u*Z+h*J,s[12]=l*W+c*ae+u*ce+h*re,s[1]=d*R+p*b+m*z+_*k,s[5]=d*L+p*P+m*ie+_*X,s[9]=d*F+p*$+m*Z+_*J,s[13]=d*W+p*ae+m*ce+_*re,s[2]=y*R+E*b+x*z+v*k,s[6]=y*L+E*P+x*ie+v*X,s[10]=y*F+E*$+x*Z+v*J,s[14]=y*W+E*ae+x*ce+v*re,s[3]=w*R+M*b+A*z+N*k,s[7]=w*L+M*P+A*ie+N*X,s[11]=w*F+M*$+A*Z+N*J,s[15]=w*W+M*ae+A*ce+N*re,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],l=e[1],c=e[5],u=e[9],h=e[13],d=e[2],p=e[6],m=e[10],_=e[14],y=e[3],E=e[7],x=e[11],v=e[15];return y*(+s*u*p-i*h*p-s*c*m+n*h*m+i*c*_-n*u*_)+E*(+t*u*_-t*h*m+s*l*m-i*l*_+i*h*d-s*u*d)+x*(+t*h*p-t*c*_-s*l*p+n*l*_+s*c*d-n*h*d)+v*(-i*c*d-t*u*p+t*c*m+i*l*p-n*l*m+n*u*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=e[9],m=e[10],_=e[11],y=e[12],E=e[13],x=e[14],v=e[15],w=p*x*h-E*m*h+E*u*_-c*x*_-p*u*v+c*m*v,M=y*m*h-d*x*h-y*u*_+l*x*_+d*u*v-l*m*v,A=d*E*h-y*p*h+y*c*_-l*E*_-d*c*v+l*p*v,N=y*p*u-d*E*u-y*c*m+l*E*m+d*c*x-l*p*x,R=t*w+n*M+i*A+s*N;if(R===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const L=1/R;return e[0]=w*L,e[1]=(E*m*s-p*x*s-E*i*_+n*x*_+p*i*v-n*m*v)*L,e[2]=(c*x*s-E*u*s+E*i*h-n*x*h-c*i*v+n*u*v)*L,e[3]=(p*u*s-c*m*s-p*i*h+n*m*h+c*i*_-n*u*_)*L,e[4]=M*L,e[5]=(d*x*s-y*m*s+y*i*_-t*x*_-d*i*v+t*m*v)*L,e[6]=(y*u*s-l*x*s-y*i*h+t*x*h+l*i*v-t*u*v)*L,e[7]=(l*m*s-d*u*s+d*i*h-t*m*h-l*i*_+t*u*_)*L,e[8]=A*L,e[9]=(y*p*s-d*E*s-y*n*_+t*E*_+d*n*v-t*p*v)*L,e[10]=(l*E*s-y*c*s+y*n*h-t*E*h-l*n*v+t*c*v)*L,e[11]=(d*c*s-l*p*s-d*n*h+t*p*h+l*n*_-t*c*_)*L,e[12]=N*L,e[13]=(d*E*i-y*p*i+y*n*m-t*E*m-d*n*x+t*p*x)*L,e[14]=(y*c*i-l*E*i-y*n*u+t*E*u+l*n*x-t*c*x)*L,e[15]=(l*p*i-d*c*i+d*n*u-t*p*u-l*n*m+t*c*m)*L,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,l=e.x,c=e.y,u=e.z,h=s*l,d=s*c;return this.set(h*l+n,h*c-i*u,h*u+i*c,0,h*c+i*u,d*c+n,d*u-i*l,0,h*u-i*c,d*u+i*l,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,l){return this.set(1,n,s,0,e,1,l,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,l=t._y,c=t._z,u=t._w,h=s+s,d=l+l,p=c+c,m=s*h,_=s*d,y=s*p,E=l*d,x=l*p,v=c*p,w=u*h,M=u*d,A=u*p,N=n.x,R=n.y,L=n.z;return i[0]=(1-(E+v))*N,i[1]=(_+A)*N,i[2]=(y-M)*N,i[3]=0,i[4]=(_-A)*R,i[5]=(1-(m+v))*R,i[6]=(x+w)*R,i[7]=0,i[8]=(y+M)*L,i[9]=(x-w)*L,i[10]=(1-(m+E))*L,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Ws.set(i[0],i[1],i[2]).length();const l=Ws.set(i[4],i[5],i[6]).length(),c=Ws.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],_i.copy(this);const h=1/s,d=1/l,p=1/c;return _i.elements[0]*=h,_i.elements[1]*=h,_i.elements[2]*=h,_i.elements[4]*=d,_i.elements[5]*=d,_i.elements[6]*=d,_i.elements[8]*=p,_i.elements[9]*=p,_i.elements[10]*=p,t.setFromRotationMatrix(_i),n.x=s,n.y=l,n.z=c,this}makePerspective(e,t,n,i,s,l,c=Oi){const u=this.elements,h=2*s/(t-e),d=2*s/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let _,y;if(c===Oi)_=-(l+s)/(l-s),y=-2*l*s/(l-s);else if(c===Ca)_=-l/(l-s),y=-l*s/(l-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=d,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=_,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,l,c=Oi){const u=this.elements,h=1/(t-e),d=1/(n-i),p=1/(l-s),m=(t+e)*h,_=(n+i)*d;let y,E;if(c===Oi)y=(l+s)*p,E=-2*p;else if(c===Ca)y=s*p,E=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*d,u[9]=0,u[13]=-_,u[2]=0,u[6]=0,u[10]=E,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Ws=new D,_i=new $e,hS=new D(0,0,0),fS=new D(1,1,1),Sr=new D,Kl=new D,Jn=new D,Jm=new $e,Km=new Vn;class ei{constructor(e=0,t=0,n=0,i=ei.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],l=i[4],c=i[8],u=i[1],h=i[5],d=i[9],p=i[2],m=i[6],_=i[10];switch(t){case"XYZ":this._y=Math.asin(Yt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,_),this._z=Math.atan2(-l,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Yt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,_),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(Yt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,_),this._z=Math.atan2(-l,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-Yt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,_),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-l,h));break;case"YZX":this._z=Math.asin(Yt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-d,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,_));break;case"XZY":this._z=Math.asin(-Yt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-d,_),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Jm.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Jm,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Km.setFromEuler(this),this.setFromQuaternion(Km,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ei.DEFAULT_ORDER="XYZ";class ms{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let dS=0;const jm=new D,Xs=new Vn,Ji=new $e,jl=new D,$o=new D,pS=new D,mS=new Vn,Qm=new D(1,0,0),$m=new D(0,1,0),eg=new D(0,0,1),gS={type:"added"},_S={type:"removed"},Gh={type:"childadded",child:null},Wh={type:"childremoved",child:null};class At extends lr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:dS++}),this.uuid=$n(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=At.DEFAULT_UP.clone();const e=new D,t=new ei,n=new Vn,i=new D(1,1,1);function s(){n.setFromEuler(t,!1)}function l(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new $e},normalMatrix:{value:new ft}}),this.matrix=new $e,this.matrixWorld=new $e,this.matrixAutoUpdate=At.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=At.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new ms,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Xs.setFromAxisAngle(e,t),this.quaternion.multiply(Xs),this}rotateOnWorldAxis(e,t){return Xs.setFromAxisAngle(e,t),this.quaternion.premultiply(Xs),this}rotateX(e){return this.rotateOnAxis(Qm,e)}rotateY(e){return this.rotateOnAxis($m,e)}rotateZ(e){return this.rotateOnAxis(eg,e)}translateOnAxis(e,t){return jm.copy(e).applyQuaternion(this.quaternion),this.position.add(jm.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Qm,e)}translateY(e){return this.translateOnAxis($m,e)}translateZ(e){return this.translateOnAxis(eg,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Ji.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?jl.copy(e):jl.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),$o.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ji.lookAt($o,jl,this.up):Ji.lookAt(jl,$o,this.up),this.quaternion.setFromRotationMatrix(Ji),i&&(Ji.extractRotation(i.matrixWorld),Xs.setFromRotationMatrix(Ji),this.quaternion.premultiply(Xs.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(gS),Gh.child=e,this.dispatchEvent(Gh),Gh.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(_S),Wh.child=e,this.dispatchEvent(Wh),Wh.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Ji.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ji.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ji),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let s=0,l=i.length;s<l;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose($o,e,pS),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose($o,mS,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,l=i.length;s<l;s++){const c=i[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),i.maxGeometryCount=this._maxGeometryCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,d=u.length;h<d;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=l(e.geometries),u=l(e.materials),h=l(e.textures),d=l(e.images),p=l(e.shapes),m=l(e.skeletons),_=l(e.animations),y=l(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),d.length>0&&(n.images=d),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),_.length>0&&(n.animations=_),y.length>0&&(n.nodes=y)}return n.object=i,n;function l(c){const u=[];for(const h in c){const d=c[h];delete d.metadata,u.push(d)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}At.DEFAULT_UP=new D(0,1,0);At.DEFAULT_MATRIX_AUTO_UPDATE=!0;At.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const vi=new D,Ki=new D,Xh=new D,ji=new D,qs=new D,Ys=new D,tg=new D,qh=new D,Yh=new D,Zh=new D;class Qn{constructor(e=new D,t=new D,n=new D){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),vi.subVectors(e,t),i.cross(vi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){vi.subVectors(i,t),Ki.subVectors(n,t),Xh.subVectors(e,t);const l=vi.dot(vi),c=vi.dot(Ki),u=vi.dot(Xh),h=Ki.dot(Ki),d=Ki.dot(Xh),p=l*h-c*c;if(p===0)return s.set(0,0,0),null;const m=1/p,_=(h*u-c*d)*m,y=(l*d-c*u)*m;return s.set(1-_-y,y,_)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,ji)===null?!1:ji.x>=0&&ji.y>=0&&ji.x+ji.y<=1}static getInterpolation(e,t,n,i,s,l,c,u){return this.getBarycoord(e,t,n,i,ji)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(s,ji.x),u.addScaledVector(l,ji.y),u.addScaledVector(c,ji.z),u)}static isFrontFacing(e,t,n,i){return vi.subVectors(n,t),Ki.subVectors(e,t),vi.cross(Ki).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return vi.subVectors(this.c,this.b),Ki.subVectors(this.a,this.b),vi.cross(Ki).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Qn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Qn.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,s){return Qn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Qn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Qn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let l,c;qs.subVectors(i,n),Ys.subVectors(s,n),qh.subVectors(e,n);const u=qs.dot(qh),h=Ys.dot(qh);if(u<=0&&h<=0)return t.copy(n);Yh.subVectors(e,i);const d=qs.dot(Yh),p=Ys.dot(Yh);if(d>=0&&p<=d)return t.copy(i);const m=u*p-d*h;if(m<=0&&u>=0&&d<=0)return l=u/(u-d),t.copy(n).addScaledVector(qs,l);Zh.subVectors(e,s);const _=qs.dot(Zh),y=Ys.dot(Zh);if(y>=0&&_<=y)return t.copy(s);const E=_*h-u*y;if(E<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(Ys,c);const x=d*y-_*p;if(x<=0&&p-d>=0&&_-y>=0)return tg.subVectors(s,i),c=(p-d)/(p-d+(_-y)),t.copy(i).addScaledVector(tg,c);const v=1/(x+E+m);return l=E*v,c=m*v,t.copy(n).addScaledVector(qs,l).addScaledVector(Ys,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const W_={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Mr={h:0,s:0,l:0},Ql={h:0,s:0,l:0};function Jh(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Ne{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=di){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Ct.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Ct.workingColorSpace){return this.r=e,this.g=t,this.b=n,Ct.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Ct.workingColorSpace){if(e=Nd(e,1),t=Yt(t,0,1),n=Yt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,l=2*n-s;this.r=Jh(l,s,e+1/3),this.g=Jh(l,s,e),this.b=Jh(l,s,e-1/3)}return Ct.toWorkingColorSpace(this,i),this}setStyle(e,t=di){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],l=s.length;if(l===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=di){const n=W_[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=vo(e.r),this.g=vo(e.g),this.b=vo(e.b),this}copyLinearToSRGB(e){return this.r=Uh(e.r),this.g=Uh(e.g),this.b=Uh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=di){return Ct.fromWorkingColorSpace(wn.copy(this),e),Math.round(Yt(wn.r*255,0,255))*65536+Math.round(Yt(wn.g*255,0,255))*256+Math.round(Yt(wn.b*255,0,255))}getHexString(e=di){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Ct.workingColorSpace){Ct.fromWorkingColorSpace(wn.copy(this),t);const n=wn.r,i=wn.g,s=wn.b,l=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const d=(c+l)/2;if(c===l)u=0,h=0;else{const p=l-c;switch(h=d<=.5?p/(l+c):p/(2-l-c),l){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=d,e}getRGB(e,t=Ct.workingColorSpace){return Ct.fromWorkingColorSpace(wn.copy(this),t),e.r=wn.r,e.g=wn.g,e.b=wn.b,e}getStyle(e=di){Ct.fromWorkingColorSpace(wn.copy(this),e);const t=wn.r,n=wn.g,i=wn.b;return e!==di?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Mr),this.setHSL(Mr.h+e,Mr.s+t,Mr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Mr),e.getHSL(Ql);const n=da(Mr.h,Ql.h,t),i=da(Mr.s,Ql.s,t),s=da(Mr.l,Ql.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const wn=new Ne;Ne.NAMES=W_;let vS=0;class vn extends lr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:vS++}),this.uuid=$n(),this.name="",this.type="Material",this.blending=ds,this.side=rr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Xc,this.blendDst=qc,this.blendEquation=br,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ne(0,0,0),this.blendAlpha=0,this.depthFunc=ga,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ad,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=rs,this.stencilZFail=rs,this.stencilZPass=rs,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ds&&(n.blending=this.blending),this.side!==rr&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Xc&&(n.blendSrc=this.blendSrc),this.blendDst!==qc&&(n.blendDst=this.blendDst),this.blendEquation!==br&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==ga&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==ad&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==rs&&(n.stencilFail=this.stencilFail),this.stencilZFail!==rs&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==rs&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const l=[];for(const c in s){const u=s[c];delete u.metadata,l.push(u)}return l}if(t){const s=i(e.textures),l=i(e.images);s.length>0&&(n.textures=s),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Dr extends vn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ne(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ei,this.combine=Ba,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const er=yS();function yS(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,d=0;for(;!(h&8388608);)h<<=1,d-=8388608;h&=-8388609,d+=947912704,s[u]=h|d}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)l[u]=u<<23;l[31]=1199570944,l[32]=2147483648;for(let u=33;u<63;++u)l[u]=2147483648+(u-32<<23);l[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:l,offsetTable:c}}function Hn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=Yt(r,-65504,65504),er.floatView[0]=r;const e=er.uint32View[0],t=e>>23&511;return er.baseTable[t]+((e&8388607)>>er.shiftTable[t])}function ua(r){const e=r>>10;return er.uint32View[0]=er.mantissaTable[er.offsetTable[e]+(r&1023)]+er.exponentTable[e],er.floatView[0]}const xS={toHalfFloat:Hn,fromHalfFloat:ua},tn=new D,$l=new he;class Lt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=ba,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=jn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return V_("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)$l.fromBufferAttribute(this,t),$l.applyMatrix3(e),this.setXY(t,$l.x,$l.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)tn.fromBufferAttribute(this,t),tn.applyMatrix3(e),this.setXYZ(t,tn.x,tn.y,tn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)tn.fromBufferAttribute(this,t),tn.applyMatrix4(e),this.setXYZ(t,tn.x,tn.y,tn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)tn.fromBufferAttribute(this,t),tn.applyNormalMatrix(e),this.setXYZ(t,tn.x,tn.y,tn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)tn.fromBufferAttribute(this,t),tn.transformDirection(e),this.setXYZ(t,tn.x,tn.y,tn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Dn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=dt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Dn(t,this.array)),t}setX(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Dn(t,this.array)),t}setY(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Dn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Dn(t,this.array)),t}setW(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array),i=dt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array),i=dt(i,this.array),s=dt(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==ba&&(e.usage=this.usage),e}}class SS extends Lt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class MS extends Lt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class ES extends Lt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class wS extends Lt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Od extends Lt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class TS extends Lt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Fd extends Lt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class AS extends Lt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=ua(this.array[e*this.itemSize]);return this.normalized&&(t=Dn(t,this.array)),t}setX(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize]=Hn(t),this}getY(e){let t=ua(this.array[e*this.itemSize+1]);return this.normalized&&(t=Dn(t,this.array)),t}setY(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize+1]=Hn(t),this}getZ(e){let t=ua(this.array[e*this.itemSize+2]);return this.normalized&&(t=Dn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize+2]=Hn(t),this}getW(e){let t=ua(this.array[e*this.itemSize+3]);return this.normalized&&(t=Dn(t,this.array)),t}setW(e,t){return this.normalized&&(t=dt(t,this.array)),this.array[e*this.itemSize+3]=Hn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array)),this.array[e+0]=Hn(t),this.array[e+1]=Hn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array),i=dt(i,this.array)),this.array[e+0]=Hn(t),this.array[e+1]=Hn(n),this.array[e+2]=Hn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array),i=dt(i,this.array),s=dt(s,this.array)),this.array[e+0]=Hn(t),this.array[e+1]=Hn(n),this.array[e+2]=Hn(i),this.array[e+3]=Hn(s),this}}class Ve extends Lt{constructor(e,t,n){super(new Float32Array(e),t,n)}}let bS=0;const fi=new $e,Kh=new At,Zs=new D,Kn=new On,ea=new On,fn=new D;class gt extends lr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:bS++}),this.uuid=$n(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(k_(e)?Fd:Od)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new ft().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return fi.makeRotationFromQuaternion(e),this.applyMatrix4(fi),this}rotateX(e){return fi.makeRotationX(e),this.applyMatrix4(fi),this}rotateY(e){return fi.makeRotationY(e),this.applyMatrix4(fi),this}rotateZ(e){return fi.makeRotationZ(e),this.applyMatrix4(fi),this}translate(e,t,n){return fi.makeTranslation(e,t,n),this.applyMatrix4(fi),this}scale(e,t,n){return fi.makeScale(e,t,n),this.applyMatrix4(fi),this}lookAt(e){return Kh.lookAt(e),Kh.updateMatrix(),this.applyMatrix4(Kh.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Zs).negate(),this.translate(Zs.x,Zs.y,Zs.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Ve(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new On);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];Kn.setFromBufferAttribute(s),this.morphTargetsRelative?(fn.addVectors(this.boundingBox.min,Kn.min),this.boundingBox.expandByPoint(fn),fn.addVectors(this.boundingBox.max,Kn.max),this.boundingBox.expandByPoint(fn)):(this.boundingBox.expandByPoint(Kn.min),this.boundingBox.expandByPoint(Kn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new bn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new D,1/0);return}if(e){const n=this.boundingSphere.center;if(Kn.setFromBufferAttribute(e),t)for(let s=0,l=t.length;s<l;s++){const c=t[s];ea.setFromBufferAttribute(c),this.morphTargetsRelative?(fn.addVectors(Kn.min,ea.min),Kn.expandByPoint(fn),fn.addVectors(Kn.max,ea.max),Kn.expandByPoint(fn)):(Kn.expandByPoint(ea.min),Kn.expandByPoint(ea.max))}Kn.getCenter(n);let i=0;for(let s=0,l=e.count;s<l;s++)fn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(fn));if(t)for(let s=0,l=t.length;s<l;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,d=c.count;h<d;h++)fn.fromBufferAttribute(c,h),u&&(Zs.fromBufferAttribute(e,h),fn.add(Zs)),i=Math.max(i,n.distanceToSquared(fn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Lt(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],u=[];for(let F=0;F<n.count;F++)c[F]=new D,u[F]=new D;const h=new D,d=new D,p=new D,m=new he,_=new he,y=new he,E=new D,x=new D;function v(F,W,b){h.fromBufferAttribute(n,F),d.fromBufferAttribute(n,W),p.fromBufferAttribute(n,b),m.fromBufferAttribute(s,F),_.fromBufferAttribute(s,W),y.fromBufferAttribute(s,b),d.sub(h),p.sub(h),_.sub(m),y.sub(m);const P=1/(_.x*y.y-y.x*_.y);isFinite(P)&&(E.copy(d).multiplyScalar(y.y).addScaledVector(p,-_.y).multiplyScalar(P),x.copy(p).multiplyScalar(_.x).addScaledVector(d,-y.x).multiplyScalar(P),c[F].add(E),c[W].add(E),c[b].add(E),u[F].add(x),u[W].add(x),u[b].add(x))}let w=this.groups;w.length===0&&(w=[{start:0,count:e.count}]);for(let F=0,W=w.length;F<W;++F){const b=w[F],P=b.start,$=b.count;for(let ae=P,z=P+$;ae<z;ae+=3)v(e.getX(ae+0),e.getX(ae+1),e.getX(ae+2))}const M=new D,A=new D,N=new D,R=new D;function L(F){N.fromBufferAttribute(i,F),R.copy(N);const W=c[F];M.copy(W),M.sub(N.multiplyScalar(N.dot(W))).normalize(),A.crossVectors(R,W);const P=A.dot(u[F])<0?-1:1;l.setXYZW(F,M.x,M.y,M.z,P)}for(let F=0,W=w.length;F<W;++F){const b=w[F],P=b.start,$=b.count;for(let ae=P,z=P+$;ae<z;ae+=3)L(e.getX(ae+0)),L(e.getX(ae+1)),L(e.getX(ae+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Lt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,_=n.count;m<_;m++)n.setXYZ(m,0,0,0);const i=new D,s=new D,l=new D,c=new D,u=new D,h=new D,d=new D,p=new D;if(e)for(let m=0,_=e.count;m<_;m+=3){const y=e.getX(m+0),E=e.getX(m+1),x=e.getX(m+2);i.fromBufferAttribute(t,y),s.fromBufferAttribute(t,E),l.fromBufferAttribute(t,x),d.subVectors(l,s),p.subVectors(i,s),d.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,E),h.fromBufferAttribute(n,x),c.add(d),u.add(d),h.add(d),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(E,u.x,u.y,u.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let m=0,_=t.count;m<_;m+=3)i.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),l.fromBufferAttribute(t,m+2),d.subVectors(l,s),p.subVectors(i,s),d.cross(p),n.setXYZ(m+0,d.x,d.y,d.z),n.setXYZ(m+1,d.x,d.y,d.z),n.setXYZ(m+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)fn.fromBufferAttribute(e,t),fn.normalize(),e.setXYZ(t,fn.x,fn.y,fn.z)}toNonIndexed(){function e(c,u){const h=c.array,d=c.itemSize,p=c.normalized,m=new h.constructor(u.length*d);let _=0,y=0;for(let E=0,x=u.length;E<x;E++){c.isInterleavedBufferAttribute?_=u[E]*c.data.stride+c.offset:_=u[E]*d;for(let v=0;v<d;v++)m[y++]=h[_++]}return new Lt(m,d,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new gt,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let d=0,p=h.length;d<p;d++){const m=h[d],_=e(m,n);u.push(_)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const h=l[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],d=[];for(let p=0,m=h.length;p<m;p++){const _=h[p];d.push(_.toJSON(e.data))}d.length>0&&(i[u]=d,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const d=i[h];this.setAttribute(h,d.clone(t))}const s=e.morphAttributes;for(const h in s){const d=[],p=s[h];for(let m=0,_=p.length;m<_;m++)d.push(p[m].clone(t));this.morphAttributes[h]=d}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let h=0,d=l.length;h<d;h++){const p=l[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const ng=new $e,Zr=new To,ec=new bn,ig=new D,Js=new D,Ks=new D,js=new D,jh=new D,tc=new D,nc=new he,ic=new he,rc=new he,rg=new D,sg=new D,og=new D,sc=new D,oc=new D;class nn extends At{constructor(e=new gt,t=new Dr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,l=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){tc.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const d=c[u],p=s[u];d!==0&&(jh.fromBufferAttribute(p,e),l?tc.addScaledVector(jh,d):tc.addScaledVector(jh.sub(t),d))}t.add(tc)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),ec.copy(n.boundingSphere),ec.applyMatrix4(s),Zr.copy(e.ray).recast(e.near),!(ec.containsPoint(Zr.origin)===!1&&(Zr.intersectSphere(ec,ig)===null||Zr.origin.distanceToSquared(ig)>(e.far-e.near)**2))&&(ng.copy(s).invert(),Zr.copy(e.ray).applyMatrix4(ng),!(n.boundingBox!==null&&Zr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Zr)))}_computeIntersections(e,t,n){let i;const s=this.geometry,l=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,d=s.attributes.uv1,p=s.attributes.normal,m=s.groups,_=s.drawRange;if(c!==null)if(Array.isArray(l))for(let y=0,E=m.length;y<E;y++){const x=m[y],v=l[x.materialIndex],w=Math.max(x.start,_.start),M=Math.min(c.count,Math.min(x.start+x.count,_.start+_.count));for(let A=w,N=M;A<N;A+=3){const R=c.getX(A),L=c.getX(A+1),F=c.getX(A+2);i=ac(this,v,e,n,h,d,p,R,L,F),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,_.start),E=Math.min(c.count,_.start+_.count);for(let x=y,v=E;x<v;x+=3){const w=c.getX(x),M=c.getX(x+1),A=c.getX(x+2);i=ac(this,l,e,n,h,d,p,w,M,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(l))for(let y=0,E=m.length;y<E;y++){const x=m[y],v=l[x.materialIndex],w=Math.max(x.start,_.start),M=Math.min(u.count,Math.min(x.start+x.count,_.start+_.count));for(let A=w,N=M;A<N;A+=3){const R=A,L=A+1,F=A+2;i=ac(this,v,e,n,h,d,p,R,L,F),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,_.start),E=Math.min(u.count,_.start+_.count);for(let x=y,v=E;x<v;x+=3){const w=x,M=x+1,A=x+2;i=ac(this,l,e,n,h,d,p,w,M,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function CS(r,e,t,n,i,s,l,c){let u;if(e.side===Un?u=n.intersectTriangle(l,s,i,!0,c):u=n.intersectTriangle(i,s,l,e.side===rr,c),u===null)return null;oc.copy(c),oc.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(oc);return h<t.near||h>t.far?null:{distance:h,point:oc.clone(),object:r}}function ac(r,e,t,n,i,s,l,c,u,h){r.getVertexPosition(c,Js),r.getVertexPosition(u,Ks),r.getVertexPosition(h,js);const d=CS(r,e,t,n,Js,Ks,js,sc);if(d){i&&(nc.fromBufferAttribute(i,c),ic.fromBufferAttribute(i,u),rc.fromBufferAttribute(i,h),d.uv=Qn.getInterpolation(sc,Js,Ks,js,nc,ic,rc,new he)),s&&(nc.fromBufferAttribute(s,c),ic.fromBufferAttribute(s,u),rc.fromBufferAttribute(s,h),d.uv1=Qn.getInterpolation(sc,Js,Ks,js,nc,ic,rc,new he)),l&&(rg.fromBufferAttribute(l,c),sg.fromBufferAttribute(l,u),og.fromBufferAttribute(l,h),d.normal=Qn.getInterpolation(sc,Js,Ks,js,rg,sg,og,new D),d.normal.dot(n.direction)>0&&d.normal.multiplyScalar(-1));const p={a:c,b:u,c:h,normal:new D,materialIndex:0};Qn.getNormal(Js,Ks,js,p.normal),d.face=p}return d}class xs extends gt{constructor(e=1,t=1,n=1,i=1,s=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:l};const c=this;i=Math.floor(i),s=Math.floor(s),l=Math.floor(l);const u=[],h=[],d=[],p=[];let m=0,_=0;y("z","y","x",-1,-1,n,t,e,l,s,0),y("z","y","x",1,-1,n,t,-e,l,s,1),y("x","z","y",1,1,e,n,t,i,l,2),y("x","z","y",1,-1,e,n,-t,i,l,3),y("x","y","z",1,-1,e,t,n,i,s,4),y("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new Ve(h,3)),this.setAttribute("normal",new Ve(d,3)),this.setAttribute("uv",new Ve(p,2));function y(E,x,v,w,M,A,N,R,L,F,W){const b=A/L,P=N/F,$=A/2,ae=N/2,z=R/2,ie=L+1,Z=F+1;let ce=0,k=0;const X=new D;for(let J=0;J<Z;J++){const re=J*P-ae;for(let me=0;me<ie;me++){const Re=me*b-$;X[E]=Re*w,X[x]=re*M,X[v]=z,h.push(X.x,X.y,X.z),X[E]=0,X[x]=0,X[v]=R>0?1:-1,d.push(X.x,X.y,X.z),p.push(me/L),p.push(1-J/F),ce+=1}}for(let J=0;J<F;J++)for(let re=0;re<L;re++){const me=m+re+ie*J,Re=m+re+ie*(J+1),j=m+(re+1)+ie*(J+1),de=m+(re+1)+ie*J;u.push(me,Re,de),u.push(Re,j,de),k+=6}c.addGroup(_,k,W),_+=k,m+=ce}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xs(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function So(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function In(r){const e={};for(let t=0;t<r.length;t++){const n=So(r[t]);for(const i in n)e[i]=n[i]}return e}function RS(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function X_(r){return r.getRenderTarget()===null?r.outputColorSpace:Ct.workingColorSpace}const q_={clone:So,merge:In};var PS=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,LS=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Mi extends vn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=PS,this.fragmentShader=LS,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1,clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=So(e.uniforms),this.uniformsGroups=RS(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?t.uniforms[i]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[i]={type:"m4",value:l.toArray()}:t.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class ka extends At{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new $e,this.projectionMatrix=new $e,this.projectionMatrixInverse=new $e,this.coordinateSystem=Oi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Er=new D,ag=new he,lg=new he;class dn extends ka{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=xo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(ps*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return xo*2*Math.atan(Math.tan(ps*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Er.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Er.x,Er.y).multiplyScalar(-e/Er.z),Er.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Er.x,Er.y).multiplyScalar(-e/Er.z)}getViewSize(e,t){return this.getViewBounds(e,ag,lg),t.subVectors(lg,ag)}setViewOffset(e,t,n,i,s,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(ps*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,h=l.fullHeight;s+=l.offsetX*i/u,t-=l.offsetY*n/h,i*=l.width/u,n*=l.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Qs=-90,$s=1;class Bd extends At{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new dn(Qs,$s,e,t);i.layers=this.layers,this.add(i);const s=new dn(Qs,$s,e,t);s.layers=this.layers,this.add(s);const l=new dn(Qs,$s,e,t);l.layers=this.layers,this.add(l);const c=new dn(Qs,$s,e,t);c.layers=this.layers,this.add(c);const u=new dn(Qs,$s,e,t);u.layers=this.layers,this.add(u);const h=new dn(Qs,$s,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,l,c,u]=t;for(const h of t)this.remove(h);if(e===Oi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===Ca)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,l,c,u,h,d]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),_=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const E=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,l),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=E,e.setRenderTarget(n,5,i),e.render(t,d),e.setRenderTarget(p,m,_),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class Ha extends Vt{constructor(e,t,n,i,s,l,c,u,h,d){e=e!==void 0?e:[],t=t!==void 0?t:sr,super(e,t,n,i,s,l,c,u,h,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class zd extends Si{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Ha(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:kt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new xs(5,5,5),s=new Mi({name:"CubemapFromEquirect",uniforms:So(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Un,blending:ir});s.uniforms.tEquirect.value=t;const l=new nn(i,s),c=t.minFilter;return t.minFilter===Ui&&(t.minFilter=kt),new Bd(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,n,i);e.setRenderTarget(s)}}const Qh=new D,IS=new D,NS=new ft;class Ar{constructor(e=new D(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Qh.subVectors(n,t).cross(IS.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Qh),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||NS.getNormalMatrix(e),i=this.coplanarPoint(Qh).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Jr=new bn,lc=new D;class Va{constructor(e=new Ar,t=new Ar,n=new Ar,i=new Ar,s=new Ar,l=new Ar){this.planes=[e,t,n,i,s,l]}set(e,t,n,i,s,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(l),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Oi){const n=this.planes,i=e.elements,s=i[0],l=i[1],c=i[2],u=i[3],h=i[4],d=i[5],p=i[6],m=i[7],_=i[8],y=i[9],E=i[10],x=i[11],v=i[12],w=i[13],M=i[14],A=i[15];if(n[0].setComponents(u-s,m-h,x-_,A-v).normalize(),n[1].setComponents(u+s,m+h,x+_,A+v).normalize(),n[2].setComponents(u+l,m+d,x+y,A+w).normalize(),n[3].setComponents(u-l,m-d,x-y,A-w).normalize(),n[4].setComponents(u-c,m-p,x-E,A-M).normalize(),t===Oi)n[5].setComponents(u+c,m+p,x+E,A+M).normalize();else if(t===Ca)n[5].setComponents(c,p,E,M).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Jr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Jr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Jr)}intersectsSprite(e){return Jr.center.set(0,0,0),Jr.radius=.7071067811865476,Jr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Jr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(lc.x=i.normal.x>0?e.max.x:e.min.x,lc.y=i.normal.y>0?e.max.y:e.min.y,lc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(lc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Y_(){let r=null,e=!1,t=null,n=null;function i(s,l){t(s,l),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function DS(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,d){const p=h.array,m=h.usage,_=p.byteLength,y=r.createBuffer();r.bindBuffer(d,y),r.bufferData(d,p,m),h.onUploadCallback();let E;if(p instanceof Float32Array)E=r.FLOAT;else if(p instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)E=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else E=r.UNSIGNED_SHORT;else if(p instanceof Int16Array)E=r.SHORT;else if(p instanceof Uint32Array)E=r.UNSIGNED_INT;else if(p instanceof Int32Array)E=r.INT;else if(p instanceof Int8Array)E=r.BYTE;else if(p instanceof Uint8Array)E=r.UNSIGNED_BYTE;else if(p instanceof Uint8ClampedArray)E=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+p);return{buffer:y,type:E,bytesPerElement:p.BYTES_PER_ELEMENT,version:h.version,size:_}}function s(h,d,p){const m=d.array,_=d._updateRange,y=d.updateRanges;if(r.bindBuffer(p,h),_.count===-1&&y.length===0&&r.bufferSubData(p,0,m),y.length!==0){for(let E=0,x=y.length;E<x;E++){const v=y[E];t?r.bufferSubData(p,v.start*m.BYTES_PER_ELEMENT,m,v.start,v.count):r.bufferSubData(p,v.start*m.BYTES_PER_ELEMENT,m.subarray(v.start,v.start+v.count))}d.clearUpdateRanges()}_.count!==-1&&(t?r.bufferSubData(p,_.offset*m.BYTES_PER_ELEMENT,m,_.offset,_.count):r.bufferSubData(p,_.offset*m.BYTES_PER_ELEMENT,m.subarray(_.offset,_.offset+_.count)),_.count=-1),d.onUploadCallback()}function l(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function c(h){h.isInterleavedBufferAttribute&&(h=h.data);const d=n.get(h);d&&(r.deleteBuffer(d.buffer),n.delete(h))}function u(h,d){if(h.isGLBufferAttribute){const m=n.get(h);(!m||m.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const p=n.get(h);if(p===void 0)n.set(h,i(h,d));else if(p.version<h.version){if(p.size!==h.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");s(p.buffer,h,d),p.version=h.version}}return{get:l,remove:c,update:u}}class Ao extends gt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,l=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,d=u+1,p=e/c,m=t/u,_=[],y=[],E=[],x=[];for(let v=0;v<d;v++){const w=v*m-l;for(let M=0;M<h;M++){const A=M*p-s;y.push(A,-w,0),E.push(0,0,1),x.push(M/c),x.push(1-v/u)}}for(let v=0;v<u;v++)for(let w=0;w<c;w++){const M=w+h*v,A=w+h*(v+1),N=w+1+h*(v+1),R=w+1+h*v;_.push(M,A,R),_.push(A,N,R)}this.setIndex(_),this.setAttribute("position",new Ve(y,3)),this.setAttribute("normal",new Ve(E,3)),this.setAttribute("uv",new Ve(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ao(e.width,e.height,e.widthSegments,e.heightSegments)}}var US=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,OS=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,FS=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,BS=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,zS=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,kS=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,HS=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,VS=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,GS=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,WS=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,XS=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,qS=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,YS=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,ZS=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,JS=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,KS=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,jS=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,QS=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,$S=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,eM=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,tM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,nM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,iM=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,rM=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,sM=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,oM=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,aM=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,lM=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,cM=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,uM=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,hM="gl_FragColor = linearToOutputTexel( gl_FragColor );",fM=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,dM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,pM=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,mM=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,gM=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,_M=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,vM=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,yM=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,xM=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,SM=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,MM=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,EM=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,wM=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,TM=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,AM=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,bM=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,CM=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,RM=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,PM=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,LM=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,IM=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,NM=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,DM=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,UM=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,OM=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,FM=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,BM=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,zM=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,kM=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,HM=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,VM=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,GM=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,WM=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,XM=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,qM=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,YM=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,ZM=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[MORPHTARGETS_COUNT];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,JM=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,KM=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,jM=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
	#endif
	#ifdef MORPHTARGETS_TEXTURE
		#ifndef USE_INSTANCING_MORPH
			uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		#endif
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,QM=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,$M=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,eE=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,tE=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,nE=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,iE=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,rE=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,sE=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,oE=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,aE=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,lE=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,cE=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,uE=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,hE=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,fE=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,dE=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,pE=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,mE=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,gE=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,_E=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,vE=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,yE=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,xE=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,SE=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,ME=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,EE=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,wE=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,TE=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,AE=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,bE=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,CE=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	float startCompression = 0.8 - 0.04;
	float desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min(color.r, min(color.g, color.b));
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max(color.r, max(color.g, color.b));
	if (peak < startCompression) return color;
	float d = 1. - startCompression;
	float newPeak = 1. - d * d / (peak + d - startCompression);
	color *= newPeak / peak;
	float g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);
	return mix(color, vec3(1, 1, 1), g);
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,RE=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,PE=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,LE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,IE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,NE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,DE=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const UE=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,OE=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,FE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,BE=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,zE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,kE=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,HE=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,VE=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,GE=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,WE=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,XE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,qE=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,YE=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,ZE=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,JE=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,KE=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,jE=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,QE=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,$E=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,e1=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,t1=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,n1=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,i1=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,r1=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,s1=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,o1=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,a1=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,l1=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,c1=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,u1=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,h1=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,f1=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,d1=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,p1=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,mt={alphahash_fragment:US,alphahash_pars_fragment:OS,alphamap_fragment:FS,alphamap_pars_fragment:BS,alphatest_fragment:zS,alphatest_pars_fragment:kS,aomap_fragment:HS,aomap_pars_fragment:VS,batching_pars_vertex:GS,batching_vertex:WS,begin_vertex:XS,beginnormal_vertex:qS,bsdfs:YS,iridescence_fragment:ZS,bumpmap_pars_fragment:JS,clipping_planes_fragment:KS,clipping_planes_pars_fragment:jS,clipping_planes_pars_vertex:QS,clipping_planes_vertex:$S,color_fragment:eM,color_pars_fragment:tM,color_pars_vertex:nM,color_vertex:iM,common:rM,cube_uv_reflection_fragment:sM,defaultnormal_vertex:oM,displacementmap_pars_vertex:aM,displacementmap_vertex:lM,emissivemap_fragment:cM,emissivemap_pars_fragment:uM,colorspace_fragment:hM,colorspace_pars_fragment:fM,envmap_fragment:dM,envmap_common_pars_fragment:pM,envmap_pars_fragment:mM,envmap_pars_vertex:gM,envmap_physical_pars_fragment:CM,envmap_vertex:_M,fog_vertex:vM,fog_pars_vertex:yM,fog_fragment:xM,fog_pars_fragment:SM,gradientmap_pars_fragment:MM,lightmap_fragment:EM,lightmap_pars_fragment:wM,lights_lambert_fragment:TM,lights_lambert_pars_fragment:AM,lights_pars_begin:bM,lights_toon_fragment:RM,lights_toon_pars_fragment:PM,lights_phong_fragment:LM,lights_phong_pars_fragment:IM,lights_physical_fragment:NM,lights_physical_pars_fragment:DM,lights_fragment_begin:UM,lights_fragment_maps:OM,lights_fragment_end:FM,logdepthbuf_fragment:BM,logdepthbuf_pars_fragment:zM,logdepthbuf_pars_vertex:kM,logdepthbuf_vertex:HM,map_fragment:VM,map_pars_fragment:GM,map_particle_fragment:WM,map_particle_pars_fragment:XM,metalnessmap_fragment:qM,metalnessmap_pars_fragment:YM,morphinstance_vertex:ZM,morphcolor_vertex:JM,morphnormal_vertex:KM,morphtarget_pars_vertex:jM,morphtarget_vertex:QM,normal_fragment_begin:$M,normal_fragment_maps:eE,normal_pars_fragment:tE,normal_pars_vertex:nE,normal_vertex:iE,normalmap_pars_fragment:rE,clearcoat_normal_fragment_begin:sE,clearcoat_normal_fragment_maps:oE,clearcoat_pars_fragment:aE,iridescence_pars_fragment:lE,opaque_fragment:cE,packing:uE,premultiplied_alpha_fragment:hE,project_vertex:fE,dithering_fragment:dE,dithering_pars_fragment:pE,roughnessmap_fragment:mE,roughnessmap_pars_fragment:gE,shadowmap_pars_fragment:_E,shadowmap_pars_vertex:vE,shadowmap_vertex:yE,shadowmask_pars_fragment:xE,skinbase_vertex:SE,skinning_pars_vertex:ME,skinning_vertex:EE,skinnormal_vertex:wE,specularmap_fragment:TE,specularmap_pars_fragment:AE,tonemapping_fragment:bE,tonemapping_pars_fragment:CE,transmission_fragment:RE,transmission_pars_fragment:PE,uv_pars_fragment:LE,uv_pars_vertex:IE,uv_vertex:NE,worldpos_vertex:DE,background_vert:UE,background_frag:OE,backgroundCube_vert:FE,backgroundCube_frag:BE,cube_vert:zE,cube_frag:kE,depth_vert:HE,depth_frag:VE,distanceRGBA_vert:GE,distanceRGBA_frag:WE,equirect_vert:XE,equirect_frag:qE,linedashed_vert:YE,linedashed_frag:ZE,meshbasic_vert:JE,meshbasic_frag:KE,meshlambert_vert:jE,meshlambert_frag:QE,meshmatcap_vert:$E,meshmatcap_frag:e1,meshnormal_vert:t1,meshnormal_frag:n1,meshphong_vert:i1,meshphong_frag:r1,meshphysical_vert:s1,meshphysical_frag:o1,meshtoon_vert:a1,meshtoon_frag:l1,points_vert:c1,points_frag:u1,shadow_vert:h1,shadow_frag:f1,sprite_vert:d1,sprite_frag:p1},Ee={common:{diffuse:{value:new Ne(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ft},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ft}},envmap:{envMap:{value:null},envMapRotation:{value:new ft},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ft}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ft}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ft},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ft},normalScale:{value:new he(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ft},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ft}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ft}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ft}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ne(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ne(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0},uvTransform:{value:new ft}},sprite:{diffuse:{value:new Ne(16777215)},opacity:{value:1},center:{value:new he(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ft},alphaMap:{value:null},alphaMapTransform:{value:new ft},alphaTest:{value:0}}},xi={basic:{uniforms:In([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.fog]),vertexShader:mt.meshbasic_vert,fragmentShader:mt.meshbasic_frag},lambert:{uniforms:In([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,Ee.lights,{emissive:{value:new Ne(0)}}]),vertexShader:mt.meshlambert_vert,fragmentShader:mt.meshlambert_frag},phong:{uniforms:In([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,Ee.lights,{emissive:{value:new Ne(0)},specular:{value:new Ne(1118481)},shininess:{value:30}}]),vertexShader:mt.meshphong_vert,fragmentShader:mt.meshphong_frag},standard:{uniforms:In([Ee.common,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.roughnessmap,Ee.metalnessmap,Ee.fog,Ee.lights,{emissive:{value:new Ne(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:mt.meshphysical_vert,fragmentShader:mt.meshphysical_frag},toon:{uniforms:In([Ee.common,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.gradientmap,Ee.fog,Ee.lights,{emissive:{value:new Ne(0)}}]),vertexShader:mt.meshtoon_vert,fragmentShader:mt.meshtoon_frag},matcap:{uniforms:In([Ee.common,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,{matcap:{value:null}}]),vertexShader:mt.meshmatcap_vert,fragmentShader:mt.meshmatcap_frag},points:{uniforms:In([Ee.points,Ee.fog]),vertexShader:mt.points_vert,fragmentShader:mt.points_frag},dashed:{uniforms:In([Ee.common,Ee.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:mt.linedashed_vert,fragmentShader:mt.linedashed_frag},depth:{uniforms:In([Ee.common,Ee.displacementmap]),vertexShader:mt.depth_vert,fragmentShader:mt.depth_frag},normal:{uniforms:In([Ee.common,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,{opacity:{value:1}}]),vertexShader:mt.meshnormal_vert,fragmentShader:mt.meshnormal_frag},sprite:{uniforms:In([Ee.sprite,Ee.fog]),vertexShader:mt.sprite_vert,fragmentShader:mt.sprite_frag},background:{uniforms:{uvTransform:{value:new ft},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:mt.background_vert,fragmentShader:mt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new ft}},vertexShader:mt.backgroundCube_vert,fragmentShader:mt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:mt.cube_vert,fragmentShader:mt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:mt.equirect_vert,fragmentShader:mt.equirect_frag},distanceRGBA:{uniforms:In([Ee.common,Ee.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:mt.distanceRGBA_vert,fragmentShader:mt.distanceRGBA_frag},shadow:{uniforms:In([Ee.lights,Ee.fog,{color:{value:new Ne(0)},opacity:{value:1}}]),vertexShader:mt.shadow_vert,fragmentShader:mt.shadow_frag}};xi.physical={uniforms:In([xi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ft},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ft},clearcoatNormalScale:{value:new he(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ft},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ft},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ft},sheen:{value:0},sheenColor:{value:new Ne(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ft},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ft},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ft},transmissionSamplerSize:{value:new he},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ft},attenuationDistance:{value:0},attenuationColor:{value:new Ne(0)},specularColor:{value:new Ne(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ft},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ft},anisotropyVector:{value:new he},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ft}}]),vertexShader:mt.meshphysical_vert,fragmentShader:mt.meshphysical_frag};const cc={r:0,b:0,g:0},Kr=new ei,m1=new $e;function g1(r,e,t,n,i,s,l){const c=new Ne(0);let u=s===!0?0:1,h,d,p=null,m=0,_=null;function y(x,v){let w=!1,M=v.isScene===!0?v.background:null;M&&M.isTexture&&(M=(v.backgroundBlurriness>0?t:e).get(M)),M===null?E(c,u):M&&M.isColor&&(E(M,1),w=!0);const A=r.xr.getEnvironmentBlendMode();A==="additive"?n.buffers.color.setClear(0,0,0,1,l):A==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(r.autoClear||w)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),M&&(M.isCubeTexture||M.mapping===wo)?(d===void 0&&(d=new nn(new xs(1,1,1),new Mi({name:"BackgroundCubeMaterial",uniforms:So(xi.backgroundCube.uniforms),vertexShader:xi.backgroundCube.vertexShader,fragmentShader:xi.backgroundCube.fragmentShader,side:Un,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(N,R,L){this.matrixWorld.copyPosition(L.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(d)),Kr.copy(v.backgroundRotation),Kr.x*=-1,Kr.y*=-1,Kr.z*=-1,M.isCubeTexture&&M.isRenderTargetTexture===!1&&(Kr.y*=-1,Kr.z*=-1),d.material.uniforms.envMap.value=M,d.material.uniforms.flipEnvMap.value=M.isCubeTexture&&M.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=v.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,d.material.uniforms.backgroundRotation.value.setFromMatrix4(m1.makeRotationFromEuler(Kr)),d.material.toneMapped=Ct.getTransfer(M.colorSpace)!==Dt,(p!==M||m!==M.version||_!==r.toneMapping)&&(d.material.needsUpdate=!0,p=M,m=M.version,_=r.toneMapping),d.layers.enableAll(),x.unshift(d,d.geometry,d.material,0,0,null)):M&&M.isTexture&&(h===void 0&&(h=new nn(new Ao(2,2),new Mi({name:"BackgroundMaterial",uniforms:So(xi.background.uniforms),vertexShader:xi.background.vertexShader,fragmentShader:xi.background.fragmentShader,side:rr,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=M,h.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,h.material.toneMapped=Ct.getTransfer(M.colorSpace)!==Dt,M.matrixAutoUpdate===!0&&M.updateMatrix(),h.material.uniforms.uvTransform.value.copy(M.matrix),(p!==M||m!==M.version||_!==r.toneMapping)&&(h.material.needsUpdate=!0,p=M,m=M.version,_=r.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null))}function E(x,v){x.getRGB(cc,X_(r)),n.buffers.color.setClear(cc.r,cc.g,cc.b,v,l)}return{getClearColor:function(){return c},setClearColor:function(x,v=1){c.set(x),u=v,E(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(x){u=x,E(c,u)},render:y}}function _1(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),l=n.isWebGL2||s!==null,c={},u=x(null);let h=u,d=!1;function p(z,ie,Z,ce,k){let X=!1;if(l){const J=E(ce,Z,ie);h!==J&&(h=J,_(h.object)),X=v(z,ce,Z,k),X&&w(z,ce,Z,k)}else{const J=ie.wireframe===!0;(h.geometry!==ce.id||h.program!==Z.id||h.wireframe!==J)&&(h.geometry=ce.id,h.program=Z.id,h.wireframe=J,X=!0)}k!==null&&t.update(k,r.ELEMENT_ARRAY_BUFFER),(X||d)&&(d=!1,F(z,ie,Z,ce),k!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(k).buffer))}function m(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function _(z){return n.isWebGL2?r.bindVertexArray(z):s.bindVertexArrayOES(z)}function y(z){return n.isWebGL2?r.deleteVertexArray(z):s.deleteVertexArrayOES(z)}function E(z,ie,Z){const ce=Z.wireframe===!0;let k=c[z.id];k===void 0&&(k={},c[z.id]=k);let X=k[ie.id];X===void 0&&(X={},k[ie.id]=X);let J=X[ce];return J===void 0&&(J=x(m()),X[ce]=J),J}function x(z){const ie=[],Z=[],ce=[];for(let k=0;k<i;k++)ie[k]=0,Z[k]=0,ce[k]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:ie,enabledAttributes:Z,attributeDivisors:ce,object:z,attributes:{},index:null}}function v(z,ie,Z,ce){const k=h.attributes,X=ie.attributes;let J=0;const re=Z.getAttributes();for(const me in re)if(re[me].location>=0){const j=k[me];let de=X[me];if(de===void 0&&(me==="instanceMatrix"&&z.instanceMatrix&&(de=z.instanceMatrix),me==="instanceColor"&&z.instanceColor&&(de=z.instanceColor)),j===void 0||j.attribute!==de||de&&j.data!==de.data)return!0;J++}return h.attributesNum!==J||h.index!==ce}function w(z,ie,Z,ce){const k={},X=ie.attributes;let J=0;const re=Z.getAttributes();for(const me in re)if(re[me].location>=0){let j=X[me];j===void 0&&(me==="instanceMatrix"&&z.instanceMatrix&&(j=z.instanceMatrix),me==="instanceColor"&&z.instanceColor&&(j=z.instanceColor));const de={};de.attribute=j,j&&j.data&&(de.data=j.data),k[me]=de,J++}h.attributes=k,h.attributesNum=J,h.index=ce}function M(){const z=h.newAttributes;for(let ie=0,Z=z.length;ie<Z;ie++)z[ie]=0}function A(z){N(z,0)}function N(z,ie){const Z=h.newAttributes,ce=h.enabledAttributes,k=h.attributeDivisors;Z[z]=1,ce[z]===0&&(r.enableVertexAttribArray(z),ce[z]=1),k[z]!==ie&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](z,ie),k[z]=ie)}function R(){const z=h.newAttributes,ie=h.enabledAttributes;for(let Z=0,ce=ie.length;Z<ce;Z++)ie[Z]!==z[Z]&&(r.disableVertexAttribArray(Z),ie[Z]=0)}function L(z,ie,Z,ce,k,X,J){J===!0?r.vertexAttribIPointer(z,ie,Z,k,X):r.vertexAttribPointer(z,ie,Z,ce,k,X)}function F(z,ie,Z,ce){if(n.isWebGL2===!1&&(z.isInstancedMesh||ce.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;M();const k=ce.attributes,X=Z.getAttributes(),J=ie.defaultAttributeValues;for(const re in X){const me=X[re];if(me.location>=0){let Re=k[re];if(Re===void 0&&(re==="instanceMatrix"&&z.instanceMatrix&&(Re=z.instanceMatrix),re==="instanceColor"&&z.instanceColor&&(Re=z.instanceColor)),Re!==void 0){const j=Re.normalized,de=Re.itemSize,we=t.get(Re);if(we===void 0)continue;const He=we.buffer,Ge=we.type,Oe=we.bytesPerElement,at=n.isWebGL2===!0&&(Ge===r.INT||Ge===r.UNSIGNED_INT||Re.gpuType===Ed);if(Re.isInterleavedBufferAttribute){const Fe=Re.data,B=Fe.stride,ge=Re.offset;if(Fe.isInstancedInterleavedBuffer){for(let ue=0;ue<me.locationSize;ue++)N(me.location+ue,Fe.meshPerAttribute);z.isInstancedMesh!==!0&&ce._maxInstanceCount===void 0&&(ce._maxInstanceCount=Fe.meshPerAttribute*Fe.count)}else for(let ue=0;ue<me.locationSize;ue++)A(me.location+ue);r.bindBuffer(r.ARRAY_BUFFER,He);for(let ue=0;ue<me.locationSize;ue++)L(me.location+ue,de/me.locationSize,Ge,j,B*Oe,(ge+de/me.locationSize*ue)*Oe,at)}else{if(Re.isInstancedBufferAttribute){for(let Fe=0;Fe<me.locationSize;Fe++)N(me.location+Fe,Re.meshPerAttribute);z.isInstancedMesh!==!0&&ce._maxInstanceCount===void 0&&(ce._maxInstanceCount=Re.meshPerAttribute*Re.count)}else for(let Fe=0;Fe<me.locationSize;Fe++)A(me.location+Fe);r.bindBuffer(r.ARRAY_BUFFER,He);for(let Fe=0;Fe<me.locationSize;Fe++)L(me.location+Fe,de/me.locationSize,Ge,j,de*Oe,de/me.locationSize*Fe*Oe,at)}}else if(J!==void 0){const j=J[re];if(j!==void 0)switch(j.length){case 2:r.vertexAttrib2fv(me.location,j);break;case 3:r.vertexAttrib3fv(me.location,j);break;case 4:r.vertexAttrib4fv(me.location,j);break;default:r.vertexAttrib1fv(me.location,j)}}}}R()}function W(){$();for(const z in c){const ie=c[z];for(const Z in ie){const ce=ie[Z];for(const k in ce)y(ce[k].object),delete ce[k];delete ie[Z]}delete c[z]}}function b(z){if(c[z.id]===void 0)return;const ie=c[z.id];for(const Z in ie){const ce=ie[Z];for(const k in ce)y(ce[k].object),delete ce[k];delete ie[Z]}delete c[z.id]}function P(z){for(const ie in c){const Z=c[ie];if(Z[z.id]===void 0)continue;const ce=Z[z.id];for(const k in ce)y(ce[k].object),delete ce[k];delete Z[z.id]}}function $(){ae(),d=!0,h!==u&&(h=u,_(h.object))}function ae(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:p,reset:$,resetDefaultState:ae,dispose:W,releaseStatesOfGeometry:b,releaseStatesOfProgram:P,initAttributes:M,enableAttribute:A,disableUnusedAttributes:R}}function v1(r,e,t,n){const i=n.isWebGL2;let s;function l(d){s=d}function c(d,p){r.drawArrays(s,d,p),t.update(p,s,1)}function u(d,p,m){if(m===0)return;let _,y;if(i)_=r,y="drawArraysInstanced";else if(_=e.get("ANGLE_instanced_arrays"),y="drawArraysInstancedANGLE",_===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}_[y](s,d,p,m),t.update(p,s,m)}function h(d,p,m){if(m===0)return;const _=e.get("WEBGL_multi_draw");if(_===null)for(let y=0;y<m;y++)this.render(d[y],p[y]);else{_.multiDrawArraysWEBGL(s,d,0,p,0,m);let y=0;for(let E=0;E<m;E++)y+=p[E];t.update(y,s,1)}}this.setMode=l,this.render=c,this.renderInstances=u,this.renderMultiDraw=h}function y1(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const L=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(L){if(L==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";L="mediump"}return L==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const l=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let c=t.precision!==void 0?t.precision:"highp";const u=s(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=l||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,p=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=r.getParameter(r.MAX_TEXTURE_SIZE),y=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),E=r.getParameter(r.MAX_VERTEX_ATTRIBS),x=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),v=r.getParameter(r.MAX_VARYING_VECTORS),w=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),M=m>0,A=l||e.has("OES_texture_float"),N=M&&A,R=l?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:l,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:c,logarithmicDepthBuffer:d,maxTextures:p,maxVertexTextures:m,maxTextureSize:_,maxCubemapSize:y,maxAttributes:E,maxVertexUniforms:x,maxVaryings:v,maxFragmentUniforms:w,vertexTextures:M,floatFragmentTextures:A,floatVertexTextures:N,maxSamples:R}}function x1(r){const e=this;let t=null,n=0,i=!1,s=!1;const l=new Ar,c=new ft,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const _=p.length!==0||m||n!==0||i;return i=m,n=p.length,_},this.beginShadows=function(){s=!0,d(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=d(p,m,0)},this.setState=function(p,m,_){const y=p.clippingPlanes,E=p.clipIntersection,x=p.clipShadows,v=r.get(p);if(!i||y===null||y.length===0||s&&!x)s?d(null):h();else{const w=s?0:n,M=w*4;let A=v.clippingState||null;u.value=A,A=d(y,m,M,_);for(let N=0;N!==M;++N)A[N]=t[N];v.clippingState=A,this.numIntersection=E?this.numPlanes:0,this.numPlanes+=w}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(p,m,_,y){const E=p!==null?p.length:0;let x=null;if(E!==0){if(x=u.value,y!==!0||x===null){const v=_+E*4,w=m.matrixWorldInverse;c.getNormalMatrix(w),(x===null||x.length<v)&&(x=new Float32Array(v));for(let M=0,A=_;M!==E;++M,A+=4)l.copy(p[M]).applyMatrix4(w,c),l.normal.toArray(x,A),x[A+3]=l.constant}u.value=x,u.needsUpdate=!0}return e.numPlanes=E,e.numIntersection=0,x}}function S1(r){let e=new WeakMap;function t(l,c){return c===_a?l.mapping=sr:c===va&&(l.mapping=Lr),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===_a||c===va)if(e.has(l)){const u=e.get(l).texture;return t(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const h=new zd(u.height);return h.fromEquirectangularTexture(r,l),e.set(l,h),l.addEventListener("dispose",i),t(h.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Ga extends ka{constructor(e=-1,t=1,n=1,i=-1,s=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,l=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,l=s+h*this.view.width,c-=d*this.view.offsetY,u=c-d*this.view.height}this.projectionMatrix.makeOrthographic(s,l,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const fo=4,cg=[.125,.215,.35,.446,.526,.582],as=20,$h=new Ga,ug=new Ne;let ef=null,tf=0,nf=0;const ss=(1+Math.sqrt(5))/2,eo=1/ss,hg=[new D(1,1,1),new D(-1,1,1),new D(1,1,-1),new D(-1,1,-1),new D(0,ss,eo),new D(0,ss,-eo),new D(eo,0,ss),new D(-eo,0,ss),new D(ss,eo,0),new D(-ss,eo,0)];class ud{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){ef=this._renderer.getRenderTarget(),tf=this._renderer.getActiveCubeFace(),nf=this._renderer.getActiveMipmapLevel(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=pg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=dg(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(ef,tf,nf),e.scissorTest=!1,uc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===sr||e.mapping===Lr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),ef=this._renderer.getRenderTarget(),tf=this._renderer.getActiveCubeFace(),nf=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:kt,minFilter:kt,generateMipmaps:!1,type:yo,format:Nn,colorSpace:ar,depthBuffer:!1},i=fg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=fg(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=M1(s)),this._blurMaterial=E1(s,e,t)}return i}_compileMaterial(e){const t=new nn(this._lodPlanes[0],e);this._renderer.compile(t,$h)}_sceneToCubeUV(e,t,n,i){const c=new dn(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,p=d.autoClear,m=d.toneMapping;d.getClearColor(ug),d.toneMapping=Fi,d.autoClear=!1;const _=new Dr({name:"PMREM.Background",side:Un,depthWrite:!1,depthTest:!1}),y=new nn(new xs,_);let E=!1;const x=e.background;x?x.isColor&&(_.color.copy(x),e.background=null,E=!0):(_.color.copy(ug),E=!0);for(let v=0;v<6;v++){const w=v%3;w===0?(c.up.set(0,u[v],0),c.lookAt(h[v],0,0)):w===1?(c.up.set(0,0,u[v]),c.lookAt(0,h[v],0)):(c.up.set(0,u[v],0),c.lookAt(0,0,h[v]));const M=this._cubeSize;uc(i,w*M,v>2?M:0,M,M),d.setRenderTarget(i),E&&d.render(y,c),d.render(e,c)}y.geometry.dispose(),y.material.dispose(),d.toneMapping=m,d.autoClear=p,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===sr||e.mapping===Lr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=pg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=dg());const s=i?this._cubemapMaterial:this._equirectMaterial,l=new nn(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;uc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(l,$h)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),l=hg[(i-1)%hg.length];this._blur(e,i-1,i,s,l)}t.autoClear=n}_blur(e,t,n,i,s){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,n,i,"latitudinal",s),this._halfBlur(l,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,l,c){const u=this._renderer,h=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,p=new nn(this._lodPlanes[i],h),m=h.uniforms,_=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*_):2*Math.PI/(2*as-1),E=s/y,x=isFinite(s)?1+Math.floor(d*E):as;x>as&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${as}`);const v=[];let w=0;for(let L=0;L<as;++L){const F=L/E,W=Math.exp(-F*F/2);v.push(W),L===0?w+=W:L<x&&(w+=2*W)}for(let L=0;L<v.length;L++)v[L]=v[L]/w;m.envMap.value=e.texture,m.samples.value=x,m.weights.value=v,m.latitudinal.value=l==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:M}=this;m.dTheta.value=y,m.mipInt.value=M-n;const A=this._sizeLods[i],N=3*A*(i>M-fo?i-M+fo:0),R=4*(this._cubeSize-A);uc(t,N,R,3*A,2*A),u.setRenderTarget(t),u.render(p,$h)}}function M1(r){const e=[],t=[],n=[];let i=r;const s=r-fo+1+cg.length;for(let l=0;l<s;l++){const c=Math.pow(2,i);t.push(c);let u=1/c;l>r-fo?u=cg[l-r+fo-1]:l===0&&(u=0),n.push(u);const h=1/(c-2),d=-h,p=1+h,m=[d,d,p,d,p,p,d,d,p,p,d,p],_=6,y=6,E=3,x=2,v=1,w=new Float32Array(E*y*_),M=new Float32Array(x*y*_),A=new Float32Array(v*y*_);for(let R=0;R<_;R++){const L=R%3*2/3-1,F=R>2?0:-1,W=[L,F,0,L+2/3,F,0,L+2/3,F+1,0,L,F,0,L+2/3,F+1,0,L,F+1,0];w.set(W,E*y*R),M.set(m,x*y*R);const b=[R,R,R,R,R,R];A.set(b,v*y*R)}const N=new gt;N.setAttribute("position",new Lt(w,E)),N.setAttribute("uv",new Lt(M,x)),N.setAttribute("faceIndex",new Lt(A,v)),e.push(N),i>fo&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function fg(r,e,t){const n=new Si(r,e,t);return n.texture.mapping=wo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function uc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function E1(r,e,t){const n=new Float32Array(as),i=new D(0,1,0);return new Mi({name:"SphericalGaussianBlur",defines:{n:as,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:kd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:ir,depthTest:!1,depthWrite:!1})}function dg(){return new Mi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:kd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:ir,depthTest:!1,depthWrite:!1})}function pg(){return new Mi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:kd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:ir,depthTest:!1,depthWrite:!1})}function kd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function w1(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===_a||u===va,d=u===sr||u===Lr;if(h||d)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let p=e.get(c);return t===null&&(t=new ud(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),e.set(c,p),p.texture}else{if(e.has(c))return e.get(c).texture;{const p=c.image;if(h&&p&&p.height>0||d&&p&&i(p)){t===null&&(t=new ud(r));const m=h?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,m),c.addEventListener("dispose",s),m.texture}else return null}}}return c}function i(c){let u=0;const h=6;for(let d=0;d<h;d++)c[d]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:l}}function T1(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?(t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance")):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function A1(r,e,t,n){const i={},s=new WeakMap;function l(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);for(const y in m.morphAttributes){const E=m.morphAttributes[y];for(let x=0,v=E.length;x<v;x++)e.remove(E[x])}m.removeEventListener("dispose",l),delete i[m.id];const _=s.get(m);_&&(e.remove(_),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",l),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],r.ARRAY_BUFFER);const _=p.morphAttributes;for(const y in _){const E=_[y];for(let x=0,v=E.length;x<v;x++)e.update(E[x],r.ARRAY_BUFFER)}}function h(p){const m=[],_=p.index,y=p.attributes.position;let E=0;if(_!==null){const w=_.array;E=_.version;for(let M=0,A=w.length;M<A;M+=3){const N=w[M+0],R=w[M+1],L=w[M+2];m.push(N,R,R,L,L,N)}}else if(y!==void 0){const w=y.array;E=y.version;for(let M=0,A=w.length/3-1;M<A;M+=3){const N=M+0,R=M+1,L=M+2;m.push(N,R,R,L,L,N)}}else return;const x=new(k_(m)?Fd:Od)(m,1);x.version=E;const v=s.get(p);v&&e.remove(v),s.set(p,x)}function d(p){const m=s.get(p);if(m){const _=p.index;_!==null&&m.version<_.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:d}}function b1(r,e,t,n){const i=n.isWebGL2;let s;function l(_){s=_}let c,u;function h(_){c=_.type,u=_.bytesPerElement}function d(_,y){r.drawElements(s,y,c,_*u),t.update(y,s,1)}function p(_,y,E){if(E===0)return;let x,v;if(i)x=r,v="drawElementsInstanced";else if(x=e.get("ANGLE_instanced_arrays"),v="drawElementsInstancedANGLE",x===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}x[v](s,y,c,_*u,E),t.update(y,s,E)}function m(_,y,E){if(E===0)return;const x=e.get("WEBGL_multi_draw");if(x===null)for(let v=0;v<E;v++)this.render(_[v]/u,y[v]);else{x.multiDrawElementsWEBGL(s,y,0,c,_,0,E);let v=0;for(let w=0;w<E;w++)v+=y[w];t.update(v,s,1)}}this.setMode=l,this.setIndex=h,this.render=d,this.renderInstances=p,this.renderMultiDraw=m}function C1(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,l,c){switch(t.calls++,l){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function R1(r,e){return r[0]-e[0]}function P1(r,e){return Math.abs(e[1])-Math.abs(r[1])}function L1(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,l=new Rt,c=[];for(let h=0;h<8;h++)c[h]=[h,0];function u(h,d,p){const m=h.morphTargetInfluences;if(e.isWebGL2===!0){const _=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,y=_!==void 0?_.length:0;let E=s.get(d);if(E===void 0||E.count!==y){let $=function(){b.dispose(),s.delete(d),d.removeEventListener("dispose",$)};E!==void 0&&E.texture.dispose();const x=d.morphAttributes.position!==void 0,v=d.morphAttributes.normal!==void 0,w=d.morphAttributes.color!==void 0,M=d.morphAttributes.position||[],A=d.morphAttributes.normal||[],N=d.morphAttributes.color||[];let R=0;x===!0&&(R=1),v===!0&&(R=2),w===!0&&(R=3);let L=d.attributes.position.count*R,F=1;L>e.maxTextureSize&&(F=Math.ceil(L/e.maxTextureSize),L=e.maxTextureSize);const W=new Float32Array(L*F*4*y),b=new su(W,L,F,y);b.type=jn,b.needsUpdate=!0;const P=R*4;for(let ae=0;ae<y;ae++){const z=M[ae],ie=A[ae],Z=N[ae],ce=L*F*4*ae;for(let k=0;k<z.count;k++){const X=k*P;x===!0&&(l.fromBufferAttribute(z,k),W[ce+X+0]=l.x,W[ce+X+1]=l.y,W[ce+X+2]=l.z,W[ce+X+3]=0),v===!0&&(l.fromBufferAttribute(ie,k),W[ce+X+4]=l.x,W[ce+X+5]=l.y,W[ce+X+6]=l.z,W[ce+X+7]=0),w===!0&&(l.fromBufferAttribute(Z,k),W[ce+X+8]=l.x,W[ce+X+9]=l.y,W[ce+X+10]=l.z,W[ce+X+11]=Z.itemSize===4?l.w:1)}}E={count:y,texture:b,size:new he(L,F)},s.set(d,E),d.addEventListener("dispose",$)}if(h.isInstancedMesh===!0&&h.morphTexture!==null)p.getUniforms().setValue(r,"morphTexture",h.morphTexture,t);else{let x=0;for(let w=0;w<m.length;w++)x+=m[w];const v=d.morphTargetsRelative?1:1-x;p.getUniforms().setValue(r,"morphTargetBaseInfluence",v),p.getUniforms().setValue(r,"morphTargetInfluences",m)}p.getUniforms().setValue(r,"morphTargetsTexture",E.texture,t),p.getUniforms().setValue(r,"morphTargetsTextureSize",E.size)}else{const _=m===void 0?0:m.length;let y=n[d.id];if(y===void 0||y.length!==_){y=[];for(let M=0;M<_;M++)y[M]=[M,0];n[d.id]=y}for(let M=0;M<_;M++){const A=y[M];A[0]=M,A[1]=m[M]}y.sort(P1);for(let M=0;M<8;M++)M<_&&y[M][1]?(c[M][0]=y[M][0],c[M][1]=y[M][1]):(c[M][0]=Number.MAX_SAFE_INTEGER,c[M][1]=0);c.sort(R1);const E=d.morphAttributes.position,x=d.morphAttributes.normal;let v=0;for(let M=0;M<8;M++){const A=c[M],N=A[0],R=A[1];N!==Number.MAX_SAFE_INTEGER&&R?(E&&d.getAttribute("morphTarget"+M)!==E[N]&&d.setAttribute("morphTarget"+M,E[N]),x&&d.getAttribute("morphNormal"+M)!==x[N]&&d.setAttribute("morphNormal"+M,x[N]),i[M]=R,v+=R):(E&&d.hasAttribute("morphTarget"+M)===!0&&d.deleteAttribute("morphTarget"+M),x&&d.hasAttribute("morphNormal"+M)===!0&&d.deleteAttribute("morphNormal"+M),i[M]=0)}const w=d.morphTargetsRelative?1:1-v;p.getUniforms().setValue(r,"morphTargetBaseInfluence",w),p.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:u}}function I1(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,d=u.geometry,p=e.get(u,d);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==h&&(t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER),i.set(u,h))),u.isSkinnedMesh){const m=u.skeleton;i.get(m)!==h&&(m.update(),i.set(m,h))}return p}function l(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:l}}class Hd extends Vt{constructor(e,t,n,i,s,l,c,u,h,d){if(d=d!==void 0?d:Rr,d!==Rr&&d!==_s)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&d===Rr&&(n=tr),n===void 0&&d===_s&&(n=Cr),super(null,i,s,l,c,u,d,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:jt,this.minFilter=u!==void 0?u:jt,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const Z_=new Vt,J_=new Hd(1,1);J_.compareFunction=Id;const K_=new su,j_=new Ud,Q_=new Ha,mg=[],gg=[],_g=new Float32Array(16),vg=new Float32Array(9),yg=new Float32Array(4);function bo(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=mg[i];if(s===void 0&&(s=new Float32Array(i),mg[i]=s),e!==0){n.toArray(s,0);for(let l=1,c=0;l!==e;++l)c+=t,r[l].toArray(s,c)}return s}function sn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function on(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function ou(r,e){let t=gg[e];t===void 0&&(t=new Int32Array(e),gg[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function N1(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function D1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(sn(t,e))return;r.uniform2fv(this.addr,e),on(t,e)}}function U1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(sn(t,e))return;r.uniform3fv(this.addr,e),on(t,e)}}function O1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(sn(t,e))return;r.uniform4fv(this.addr,e),on(t,e)}}function F1(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(sn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),on(t,e)}else{if(sn(t,n))return;yg.set(n),r.uniformMatrix2fv(this.addr,!1,yg),on(t,n)}}function B1(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(sn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),on(t,e)}else{if(sn(t,n))return;vg.set(n),r.uniformMatrix3fv(this.addr,!1,vg),on(t,n)}}function z1(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(sn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),on(t,e)}else{if(sn(t,n))return;_g.set(n),r.uniformMatrix4fv(this.addr,!1,_g),on(t,n)}}function k1(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function H1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(sn(t,e))return;r.uniform2iv(this.addr,e),on(t,e)}}function V1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(sn(t,e))return;r.uniform3iv(this.addr,e),on(t,e)}}function G1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(sn(t,e))return;r.uniform4iv(this.addr,e),on(t,e)}}function W1(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function X1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(sn(t,e))return;r.uniform2uiv(this.addr,e),on(t,e)}}function q1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(sn(t,e))return;r.uniform3uiv(this.addr,e),on(t,e)}}function Y1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(sn(t,e))return;r.uniform4uiv(this.addr,e),on(t,e)}}function Z1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i);const s=this.type===r.SAMPLER_2D_SHADOW?J_:Z_;t.setTexture2D(e||s,i)}function J1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||j_,i)}function K1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Q_,i)}function j1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||K_,i)}function Q1(r){switch(r){case 5126:return N1;case 35664:return D1;case 35665:return U1;case 35666:return O1;case 35674:return F1;case 35675:return B1;case 35676:return z1;case 5124:case 35670:return k1;case 35667:case 35671:return H1;case 35668:case 35672:return V1;case 35669:case 35673:return G1;case 5125:return W1;case 36294:return X1;case 36295:return q1;case 36296:return Y1;case 35678:case 36198:case 36298:case 36306:case 35682:return Z1;case 35679:case 36299:case 36307:return J1;case 35680:case 36300:case 36308:case 36293:return K1;case 36289:case 36303:case 36311:case 36292:return j1}}function $1(r,e){r.uniform1fv(this.addr,e)}function ew(r,e){const t=bo(e,this.size,2);r.uniform2fv(this.addr,t)}function tw(r,e){const t=bo(e,this.size,3);r.uniform3fv(this.addr,t)}function nw(r,e){const t=bo(e,this.size,4);r.uniform4fv(this.addr,t)}function iw(r,e){const t=bo(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function rw(r,e){const t=bo(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function sw(r,e){const t=bo(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function ow(r,e){r.uniform1iv(this.addr,e)}function aw(r,e){r.uniform2iv(this.addr,e)}function lw(r,e){r.uniform3iv(this.addr,e)}function cw(r,e){r.uniform4iv(this.addr,e)}function uw(r,e){r.uniform1uiv(this.addr,e)}function hw(r,e){r.uniform2uiv(this.addr,e)}function fw(r,e){r.uniform3uiv(this.addr,e)}function dw(r,e){r.uniform4uiv(this.addr,e)}function pw(r,e,t){const n=this.cache,i=e.length,s=ou(t,i);sn(n,s)||(r.uniform1iv(this.addr,s),on(n,s));for(let l=0;l!==i;++l)t.setTexture2D(e[l]||Z_,s[l])}function mw(r,e,t){const n=this.cache,i=e.length,s=ou(t,i);sn(n,s)||(r.uniform1iv(this.addr,s),on(n,s));for(let l=0;l!==i;++l)t.setTexture3D(e[l]||j_,s[l])}function gw(r,e,t){const n=this.cache,i=e.length,s=ou(t,i);sn(n,s)||(r.uniform1iv(this.addr,s),on(n,s));for(let l=0;l!==i;++l)t.setTextureCube(e[l]||Q_,s[l])}function _w(r,e,t){const n=this.cache,i=e.length,s=ou(t,i);sn(n,s)||(r.uniform1iv(this.addr,s),on(n,s));for(let l=0;l!==i;++l)t.setTexture2DArray(e[l]||K_,s[l])}function vw(r){switch(r){case 5126:return $1;case 35664:return ew;case 35665:return tw;case 35666:return nw;case 35674:return iw;case 35675:return rw;case 35676:return sw;case 5124:case 35670:return ow;case 35667:case 35671:return aw;case 35668:case 35672:return lw;case 35669:case 35673:return cw;case 5125:return uw;case 36294:return hw;case 36295:return fw;case 36296:return dw;case 35678:case 36198:case 36298:case 36306:case 35682:return pw;case 35679:case 36299:case 36307:return mw;case 35680:case 36300:case 36308:case 36293:return gw;case 36289:case 36303:case 36311:case 36292:return _w}}class yw{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=Q1(t.type)}}class xw{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=vw(t.type)}}class Sw{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,l=i.length;s!==l;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const rf=/(\w+)(\])?(\[|\.)?/g;function xg(r,e){r.seq.push(e),r.map[e.id]=e}function Mw(r,e,t){const n=r.name,i=n.length;for(rf.lastIndex=0;;){const s=rf.exec(n),l=rf.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&l+2===i){xg(t,h===void 0?new yw(c,r,e):new xw(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new Sw(c),xg(t,p)),t=p}}}class Gc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),l=e.getUniformLocation(t,s.name);Mw(s,l,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,l=t.length;s!==l;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const l=e[i];l.id in t&&n.push(l)}return n}}function Sg(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}const Ew=37297;let ww=0;function Tw(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let l=i;l<s;l++){const c=l+1;n.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return n.join(`
`)}function Aw(r){const e=Ct.getPrimaries(Ct.workingColorSpace),t=Ct.getPrimaries(r);let n;switch(e===t?n="":e===Aa&&t===Ta?n="LinearDisplayP3ToLinearSRGB":e===Ta&&t===Aa&&(n="LinearSRGBToLinearDisplayP3"),r){case ar:case za:return[n,"LinearTransferOETF"];case di:case ru:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),[n,"LinearTransferOETF"]}}function Mg(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const l=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+Tw(r.getShaderSource(e),l)}else return i}function bw(r,e){const t=Aw(e);return`vec4 ${r}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function Cw(r,e){let t;switch(e){case d_:t="Linear";break;case p_:t="Reinhard";break;case m_:t="OptimizedCineon";break;case Md:t="ACESFilmic";break;case __:t="AgX";break;case v_:t="Neutral";break;case g_:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function Rw(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||r.alphaToCoverage||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(po).join(`
`)}function Pw(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(po).join(`
`)}function Lw(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function Iw(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),l=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[l]={type:s.type,location:r.getAttribLocation(e,l),locationSize:c}}return t}function po(r){return r!==""}function Eg(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function wg(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Nw=/^[ \t]*#include +<([\w\d./]+)>/gm;function hd(r){return r.replace(Nw,Uw)}const Dw=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function Uw(r,e){let t=mt[e];if(t===void 0){const n=Dw.get(e);if(n!==void 0)t=mt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return hd(t)}const Ow=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Tg(r){return r.replace(Ow,Fw)}function Fw(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Ag(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	`;return r.isWebGL2&&(e+=`precision ${r.precision} sampler3D;
		precision ${r.precision} sampler2DArray;
		precision ${r.precision} sampler2DShadow;
		precision ${r.precision} samplerCubeShadow;
		precision ${r.precision} sampler2DArrayShadow;
		precision ${r.precision} isampler2D;
		precision ${r.precision} isampler3D;
		precision ${r.precision} isamplerCube;
		precision ${r.precision} isampler2DArray;
		precision ${r.precision} usampler2D;
		precision ${r.precision} usampler3D;
		precision ${r.precision} usamplerCube;
		precision ${r.precision} usampler2DArray;
		`),r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Bw(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===eu?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===ha?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===yi&&(e="SHADOWMAP_TYPE_VSM"),e}function zw(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case sr:case Lr:e="ENVMAP_TYPE_CUBE";break;case wo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function kw(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Lr:e="ENVMAP_MODE_REFRACTION";break}return e}function Hw(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Ba:e="ENVMAP_BLENDING_MULTIPLY";break;case h_:e="ENVMAP_BLENDING_MIX";break;case f_:e="ENVMAP_BLENDING_ADD";break}return e}function Vw(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function Gw(r,e,t,n){const i=r.getContext(),s=t.defines;let l=t.vertexShader,c=t.fragmentShader;const u=Bw(t),h=zw(t),d=kw(t),p=Hw(t),m=Vw(t),_=t.isWebGL2?"":Rw(t),y=Pw(t),E=Lw(s),x=i.createProgram();let v,w,M=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(v=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,E].filter(po).join(`
`),v.length>0&&(v+=`
`),w=[_,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,E].filter(po).join(`
`),w.length>0&&(w+=`
`)):(v=[Ag(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,E,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(po).join(`
`),w=[_,Ag(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,E,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Fi?"#define TONE_MAPPING":"",t.toneMapping!==Fi?mt.tonemapping_pars_fragment:"",t.toneMapping!==Fi?Cw("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",mt.colorspace_pars_fragment,bw("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(po).join(`
`)),l=hd(l),l=Eg(l,t),l=wg(l,t),c=hd(c),c=Eg(c,t),c=wg(c,t),l=Tg(l),c=Tg(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(M=`#version 300 es
`,v=[y,"precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+v,w=["precision mediump sampler2DArray;","#define varying in",t.glslVersion===ld?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===ld?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+w);const A=M+v+l,N=M+w+c,R=Sg(i,i.VERTEX_SHADER,A),L=Sg(i,i.FRAGMENT_SHADER,N);i.attachShader(x,R),i.attachShader(x,L),t.index0AttributeName!==void 0?i.bindAttribLocation(x,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(x,0,"position"),i.linkProgram(x);function F($){if(r.debug.checkShaderErrors){const ae=i.getProgramInfoLog(x).trim(),z=i.getShaderInfoLog(R).trim(),ie=i.getShaderInfoLog(L).trim();let Z=!0,ce=!0;if(i.getProgramParameter(x,i.LINK_STATUS)===!1)if(Z=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,x,R,L);else{const k=Mg(i,R,"vertex"),X=Mg(i,L,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(x,i.VALIDATE_STATUS)+`

Material Name: `+$.name+`
Material Type: `+$.type+`

Program Info Log: `+ae+`
`+k+`
`+X)}else ae!==""?console.warn("THREE.WebGLProgram: Program Info Log:",ae):(z===""||ie==="")&&(ce=!1);ce&&($.diagnostics={runnable:Z,programLog:ae,vertexShader:{log:z,prefix:v},fragmentShader:{log:ie,prefix:w}})}i.deleteShader(R),i.deleteShader(L),W=new Gc(i,x),b=Iw(i,x)}let W;this.getUniforms=function(){return W===void 0&&F(this),W};let b;this.getAttributes=function(){return b===void 0&&F(this),b};let P=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return P===!1&&(P=i.getProgramParameter(x,Ew)),P},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(x),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=ww++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=R,this.fragmentShader=L,this}let Ww=0;class Xw{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),l=this._getShaderCacheForMaterial(e);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(s)===!1&&(l.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new qw(e),t.set(e,n)),n}}class qw{constructor(e){this.id=Ww++,this.code=e,this.usedTimes=0}}function Yw(r,e,t,n,i,s,l){const c=new ms,u=new Xw,h=new Set,d=[],p=i.isWebGL2,m=i.logarithmicDepthBuffer,_=i.vertexTextures;let y=i.precision;const E={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function x(b){return h.add(b),b===0?"uv":`uv${b}`}function v(b,P,$,ae,z){const ie=ae.fog,Z=z.geometry,ce=b.isMeshStandardMaterial?ae.environment:null,k=(b.isMeshStandardMaterial?t:e).get(b.envMap||ce),X=k&&k.mapping===wo?k.image.height:null,J=E[b.type];b.precision!==null&&(y=i.getMaxPrecision(b.precision),y!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",y,"instead."));const re=Z.morphAttributes.position||Z.morphAttributes.normal||Z.morphAttributes.color,me=re!==void 0?re.length:0;let Re=0;Z.morphAttributes.position!==void 0&&(Re=1),Z.morphAttributes.normal!==void 0&&(Re=2),Z.morphAttributes.color!==void 0&&(Re=3);let j,de,we,He;if(J){const bt=xi[J];j=bt.vertexShader,de=bt.fragmentShader}else j=b.vertexShader,de=b.fragmentShader,u.update(b),we=u.getVertexShaderID(b),He=u.getFragmentShaderID(b);const Ge=r.getRenderTarget(),Oe=z.isInstancedMesh===!0,at=z.isBatchedMesh===!0,Fe=!!b.map,B=!!b.matcap,ge=!!k,ue=!!b.aoMap,ye=!!b.lightMap,fe=!!b.bumpMap,De=!!b.normalMap,Le=!!b.displacementMap,ke=!!b.emissiveMap,lt=!!b.metalnessMap,U=!!b.roughnessMap,C=b.anisotropy>0,se=b.clearcoat>0,le=b.iridescence>0,_e=b.sheen>0,pe=b.transmission>0,it=C&&!!b.anisotropyMap,je=se&&!!b.clearcoatMap,Me=se&&!!b.clearcoatNormalMap,Te=se&&!!b.clearcoatRoughnessMap,rt=le&&!!b.iridescenceMap,xe=le&&!!b.iridescenceThicknessMap,Gt=_e&&!!b.sheenColorMap,vt=_e&&!!b.sheenRoughnessMap,Je=!!b.specularMap,We=!!b.specularColorMap,Xe=!!b.specularIntensityMap,St=pe&&!!b.transmissionMap,ct=pe&&!!b.thicknessMap,Nt=!!b.gradientMap,V=!!b.alphaMap,Ae=b.alphaTest>0,Q=!!b.alphaHash,Se=!!b.extensions;let be=Fi;b.toneMapped&&(Ge===null||Ge.isXRRenderTarget===!0)&&(be=r.toneMapping);const xt={isWebGL2:p,shaderID:J,shaderType:b.type,shaderName:b.name,vertexShader:j,fragmentShader:de,defines:b.defines,customVertexShaderID:we,customFragmentShaderID:He,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:y,batching:at,instancing:Oe,instancingColor:Oe&&z.instanceColor!==null,instancingMorph:Oe&&z.morphTexture!==null,supportsVertexTextures:_,outputColorSpace:Ge===null?r.outputColorSpace:Ge.isXRRenderTarget===!0?Ge.texture.colorSpace:ar,alphaToCoverage:!!b.alphaToCoverage,map:Fe,matcap:B,envMap:ge,envMapMode:ge&&k.mapping,envMapCubeUVHeight:X,aoMap:ue,lightMap:ye,bumpMap:fe,normalMap:De,displacementMap:_&&Le,emissiveMap:ke,normalMapObjectSpace:De&&b.normalMapType===I_,normalMapTangentSpace:De&&b.normalMapType===Nr,metalnessMap:lt,roughnessMap:U,anisotropy:C,anisotropyMap:it,clearcoat:se,clearcoatMap:je,clearcoatNormalMap:Me,clearcoatRoughnessMap:Te,iridescence:le,iridescenceMap:rt,iridescenceThicknessMap:xe,sheen:_e,sheenColorMap:Gt,sheenRoughnessMap:vt,specularMap:Je,specularColorMap:We,specularIntensityMap:Xe,transmission:pe,transmissionMap:St,thicknessMap:ct,gradientMap:Nt,opaque:b.transparent===!1&&b.blending===ds&&b.alphaToCoverage===!1,alphaMap:V,alphaTest:Ae,alphaHash:Q,combine:b.combine,mapUv:Fe&&x(b.map.channel),aoMapUv:ue&&x(b.aoMap.channel),lightMapUv:ye&&x(b.lightMap.channel),bumpMapUv:fe&&x(b.bumpMap.channel),normalMapUv:De&&x(b.normalMap.channel),displacementMapUv:Le&&x(b.displacementMap.channel),emissiveMapUv:ke&&x(b.emissiveMap.channel),metalnessMapUv:lt&&x(b.metalnessMap.channel),roughnessMapUv:U&&x(b.roughnessMap.channel),anisotropyMapUv:it&&x(b.anisotropyMap.channel),clearcoatMapUv:je&&x(b.clearcoatMap.channel),clearcoatNormalMapUv:Me&&x(b.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Te&&x(b.clearcoatRoughnessMap.channel),iridescenceMapUv:rt&&x(b.iridescenceMap.channel),iridescenceThicknessMapUv:xe&&x(b.iridescenceThicknessMap.channel),sheenColorMapUv:Gt&&x(b.sheenColorMap.channel),sheenRoughnessMapUv:vt&&x(b.sheenRoughnessMap.channel),specularMapUv:Je&&x(b.specularMap.channel),specularColorMapUv:We&&x(b.specularColorMap.channel),specularIntensityMapUv:Xe&&x(b.specularIntensityMap.channel),transmissionMapUv:St&&x(b.transmissionMap.channel),thicknessMapUv:ct&&x(b.thicknessMap.channel),alphaMapUv:V&&x(b.alphaMap.channel),vertexTangents:!!Z.attributes.tangent&&(De||C),vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!Z.attributes.color&&Z.attributes.color.itemSize===4,pointsUvs:z.isPoints===!0&&!!Z.attributes.uv&&(Fe||V),fog:!!ie,useFog:b.fog===!0,fogExp2:!!ie&&ie.isFogExp2,flatShading:b.flatShading===!0,sizeAttenuation:b.sizeAttenuation===!0,logarithmicDepthBuffer:m,skinning:z.isSkinnedMesh===!0,morphTargets:Z.morphAttributes.position!==void 0,morphNormals:Z.morphAttributes.normal!==void 0,morphColors:Z.morphAttributes.color!==void 0,morphTargetsCount:me,morphTextureStride:Re,numDirLights:P.directional.length,numPointLights:P.point.length,numSpotLights:P.spot.length,numSpotLightMaps:P.spotLightMap.length,numRectAreaLights:P.rectArea.length,numHemiLights:P.hemi.length,numDirLightShadows:P.directionalShadowMap.length,numPointLightShadows:P.pointShadowMap.length,numSpotLightShadows:P.spotShadowMap.length,numSpotLightShadowsWithMaps:P.numSpotLightShadowsWithMaps,numLightProbes:P.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:b.dithering,shadowMapEnabled:r.shadowMap.enabled&&$.length>0,shadowMapType:r.shadowMap.type,toneMapping:be,useLegacyLights:r._useLegacyLights,decodeVideoTexture:Fe&&b.map.isVideoTexture===!0&&Ct.getTransfer(b.map.colorSpace)===Dt,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===Di,flipSided:b.side===Un,useDepthPacking:b.depthPacking>=0,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:Se&&b.extensions.derivatives===!0,extensionFragDepth:Se&&b.extensions.fragDepth===!0,extensionDrawBuffers:Se&&b.extensions.drawBuffers===!0,extensionShaderTextureLOD:Se&&b.extensions.shaderTextureLOD===!0,extensionClipCullDistance:Se&&b.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:Se&&b.extensions.multiDraw===!0&&n.has("WEBGL_multi_draw"),rendererExtensionFragDepth:p||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:p||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:p||n.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:b.customProgramCacheKey()};return xt.vertexUv1s=h.has(1),xt.vertexUv2s=h.has(2),xt.vertexUv3s=h.has(3),h.clear(),xt}function w(b){const P=[];if(b.shaderID?P.push(b.shaderID):(P.push(b.customVertexShaderID),P.push(b.customFragmentShaderID)),b.defines!==void 0)for(const $ in b.defines)P.push($),P.push(b.defines[$]);return b.isRawShaderMaterial===!1&&(M(P,b),A(P,b),P.push(r.outputColorSpace)),P.push(b.customProgramCacheKey),P.join()}function M(b,P){b.push(P.precision),b.push(P.outputColorSpace),b.push(P.envMapMode),b.push(P.envMapCubeUVHeight),b.push(P.mapUv),b.push(P.alphaMapUv),b.push(P.lightMapUv),b.push(P.aoMapUv),b.push(P.bumpMapUv),b.push(P.normalMapUv),b.push(P.displacementMapUv),b.push(P.emissiveMapUv),b.push(P.metalnessMapUv),b.push(P.roughnessMapUv),b.push(P.anisotropyMapUv),b.push(P.clearcoatMapUv),b.push(P.clearcoatNormalMapUv),b.push(P.clearcoatRoughnessMapUv),b.push(P.iridescenceMapUv),b.push(P.iridescenceThicknessMapUv),b.push(P.sheenColorMapUv),b.push(P.sheenRoughnessMapUv),b.push(P.specularMapUv),b.push(P.specularColorMapUv),b.push(P.specularIntensityMapUv),b.push(P.transmissionMapUv),b.push(P.thicknessMapUv),b.push(P.combine),b.push(P.fogExp2),b.push(P.sizeAttenuation),b.push(P.morphTargetsCount),b.push(P.morphAttributeCount),b.push(P.numDirLights),b.push(P.numPointLights),b.push(P.numSpotLights),b.push(P.numSpotLightMaps),b.push(P.numHemiLights),b.push(P.numRectAreaLights),b.push(P.numDirLightShadows),b.push(P.numPointLightShadows),b.push(P.numSpotLightShadows),b.push(P.numSpotLightShadowsWithMaps),b.push(P.numLightProbes),b.push(P.shadowMapType),b.push(P.toneMapping),b.push(P.numClippingPlanes),b.push(P.numClipIntersection),b.push(P.depthPacking)}function A(b,P){c.disableAll(),P.isWebGL2&&c.enable(0),P.supportsVertexTextures&&c.enable(1),P.instancing&&c.enable(2),P.instancingColor&&c.enable(3),P.instancingMorph&&c.enable(4),P.matcap&&c.enable(5),P.envMap&&c.enable(6),P.normalMapObjectSpace&&c.enable(7),P.normalMapTangentSpace&&c.enable(8),P.clearcoat&&c.enable(9),P.iridescence&&c.enable(10),P.alphaTest&&c.enable(11),P.vertexColors&&c.enable(12),P.vertexAlphas&&c.enable(13),P.vertexUv1s&&c.enable(14),P.vertexUv2s&&c.enable(15),P.vertexUv3s&&c.enable(16),P.vertexTangents&&c.enable(17),P.anisotropy&&c.enable(18),P.alphaHash&&c.enable(19),P.batching&&c.enable(20),b.push(c.mask),c.disableAll(),P.fog&&c.enable(0),P.useFog&&c.enable(1),P.flatShading&&c.enable(2),P.logarithmicDepthBuffer&&c.enable(3),P.skinning&&c.enable(4),P.morphTargets&&c.enable(5),P.morphNormals&&c.enable(6),P.morphColors&&c.enable(7),P.premultipliedAlpha&&c.enable(8),P.shadowMapEnabled&&c.enable(9),P.useLegacyLights&&c.enable(10),P.doubleSided&&c.enable(11),P.flipSided&&c.enable(12),P.useDepthPacking&&c.enable(13),P.dithering&&c.enable(14),P.transmission&&c.enable(15),P.sheen&&c.enable(16),P.opaque&&c.enable(17),P.pointsUvs&&c.enable(18),P.decodeVideoTexture&&c.enable(19),P.alphaToCoverage&&c.enable(20),b.push(c.mask)}function N(b){const P=E[b.type];let $;if(P){const ae=xi[P];$=q_.clone(ae.uniforms)}else $=b.uniforms;return $}function R(b,P){let $;for(let ae=0,z=d.length;ae<z;ae++){const ie=d[ae];if(ie.cacheKey===P){$=ie,++$.usedTimes;break}}return $===void 0&&($=new Gw(r,P,b,s),d.push($)),$}function L(b){if(--b.usedTimes===0){const P=d.indexOf(b);d[P]=d[d.length-1],d.pop(),b.destroy()}}function F(b){u.remove(b)}function W(){u.dispose()}return{getParameters:v,getProgramCacheKey:w,getUniforms:N,acquireProgram:R,releaseProgram:L,releaseShaderCache:F,programs:d,dispose:W}}function Zw(){let r=new WeakMap;function e(s){let l=r.get(s);return l===void 0&&(l={},r.set(s,l)),l}function t(s){r.delete(s)}function n(s,l,c){r.get(s)[l]=c}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function Jw(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function bg(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Cg(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function l(p,m,_,y,E,x){let v=r[e];return v===void 0?(v={id:p.id,object:p,geometry:m,material:_,groupOrder:y,renderOrder:p.renderOrder,z:E,group:x},r[e]=v):(v.id=p.id,v.object=p,v.geometry=m,v.material=_,v.groupOrder=y,v.renderOrder=p.renderOrder,v.z=E,v.group=x),e++,v}function c(p,m,_,y,E,x){const v=l(p,m,_,y,E,x);_.transmission>0?n.push(v):_.transparent===!0?i.push(v):t.push(v)}function u(p,m,_,y,E,x){const v=l(p,m,_,y,E,x);_.transmission>0?n.unshift(v):_.transparent===!0?i.unshift(v):t.unshift(v)}function h(p,m){t.length>1&&t.sort(p||Jw),n.length>1&&n.sort(m||bg),i.length>1&&i.sort(m||bg)}function d(){for(let p=e,m=r.length;p<m;p++){const _=r[p];if(_.id===null)break;_.id=null,_.object=null,_.geometry=null,_.material=null,_.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:d,sort:h}}function Kw(){let r=new WeakMap;function e(n,i){const s=r.get(n);let l;return s===void 0?(l=new Cg,r.set(n,[l])):i>=s.length?(l=new Cg,s.push(l)):l=s[i],l}function t(){r=new WeakMap}return{get:e,dispose:t}}function jw(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new D,color:new Ne};break;case"SpotLight":t={position:new D,direction:new D,color:new Ne,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new D,color:new Ne,distance:0,decay:0};break;case"HemisphereLight":t={direction:new D,skyColor:new Ne,groundColor:new Ne};break;case"RectAreaLight":t={color:new Ne,position:new D,halfWidth:new D,halfHeight:new D};break}return r[e.id]=t,t}}}function Qw(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new he};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new he};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new he,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let $w=0;function eT(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function tT(r,e){const t=new jw,n=Qw(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let d=0;d<9;d++)i.probe.push(new D);const s=new D,l=new $e,c=new $e;function u(d,p){let m=0,_=0,y=0;for(let $=0;$<9;$++)i.probe[$].set(0,0,0);let E=0,x=0,v=0,w=0,M=0,A=0,N=0,R=0,L=0,F=0,W=0;d.sort(eT);const b=p===!0?Math.PI:1;for(let $=0,ae=d.length;$<ae;$++){const z=d[$],ie=z.color,Z=z.intensity,ce=z.distance,k=z.shadow&&z.shadow.map?z.shadow.map.texture:null;if(z.isAmbientLight)m+=ie.r*Z*b,_+=ie.g*Z*b,y+=ie.b*Z*b;else if(z.isLightProbe){for(let X=0;X<9;X++)i.probe[X].addScaledVector(z.sh.coefficients[X],Z);W++}else if(z.isDirectionalLight){const X=t.get(z);if(X.color.copy(z.color).multiplyScalar(z.intensity*b),z.castShadow){const J=z.shadow,re=n.get(z);re.shadowBias=J.bias,re.shadowNormalBias=J.normalBias,re.shadowRadius=J.radius,re.shadowMapSize=J.mapSize,i.directionalShadow[E]=re,i.directionalShadowMap[E]=k,i.directionalShadowMatrix[E]=z.shadow.matrix,A++}i.directional[E]=X,E++}else if(z.isSpotLight){const X=t.get(z);X.position.setFromMatrixPosition(z.matrixWorld),X.color.copy(ie).multiplyScalar(Z*b),X.distance=ce,X.coneCos=Math.cos(z.angle),X.penumbraCos=Math.cos(z.angle*(1-z.penumbra)),X.decay=z.decay,i.spot[v]=X;const J=z.shadow;if(z.map&&(i.spotLightMap[L]=z.map,L++,J.updateMatrices(z),z.castShadow&&F++),i.spotLightMatrix[v]=J.matrix,z.castShadow){const re=n.get(z);re.shadowBias=J.bias,re.shadowNormalBias=J.normalBias,re.shadowRadius=J.radius,re.shadowMapSize=J.mapSize,i.spotShadow[v]=re,i.spotShadowMap[v]=k,R++}v++}else if(z.isRectAreaLight){const X=t.get(z);X.color.copy(ie).multiplyScalar(Z),X.halfWidth.set(z.width*.5,0,0),X.halfHeight.set(0,z.height*.5,0),i.rectArea[w]=X,w++}else if(z.isPointLight){const X=t.get(z);if(X.color.copy(z.color).multiplyScalar(z.intensity*b),X.distance=z.distance,X.decay=z.decay,z.castShadow){const J=z.shadow,re=n.get(z);re.shadowBias=J.bias,re.shadowNormalBias=J.normalBias,re.shadowRadius=J.radius,re.shadowMapSize=J.mapSize,re.shadowCameraNear=J.camera.near,re.shadowCameraFar=J.camera.far,i.pointShadow[x]=re,i.pointShadowMap[x]=k,i.pointShadowMatrix[x]=z.shadow.matrix,N++}i.point[x]=X,x++}else if(z.isHemisphereLight){const X=t.get(z);X.skyColor.copy(z.color).multiplyScalar(Z*b),X.groundColor.copy(z.groundColor).multiplyScalar(Z*b),i.hemi[M]=X,M++}}w>0&&(e.isWebGL2?r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Ee.LTC_FLOAT_1,i.rectAreaLTC2=Ee.LTC_FLOAT_2):(i.rectAreaLTC1=Ee.LTC_HALF_1,i.rectAreaLTC2=Ee.LTC_HALF_2):r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Ee.LTC_FLOAT_1,i.rectAreaLTC2=Ee.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Ee.LTC_HALF_1,i.rectAreaLTC2=Ee.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=m,i.ambient[1]=_,i.ambient[2]=y;const P=i.hash;(P.directionalLength!==E||P.pointLength!==x||P.spotLength!==v||P.rectAreaLength!==w||P.hemiLength!==M||P.numDirectionalShadows!==A||P.numPointShadows!==N||P.numSpotShadows!==R||P.numSpotMaps!==L||P.numLightProbes!==W)&&(i.directional.length=E,i.spot.length=v,i.rectArea.length=w,i.point.length=x,i.hemi.length=M,i.directionalShadow.length=A,i.directionalShadowMap.length=A,i.pointShadow.length=N,i.pointShadowMap.length=N,i.spotShadow.length=R,i.spotShadowMap.length=R,i.directionalShadowMatrix.length=A,i.pointShadowMatrix.length=N,i.spotLightMatrix.length=R+L-F,i.spotLightMap.length=L,i.numSpotLightShadowsWithMaps=F,i.numLightProbes=W,P.directionalLength=E,P.pointLength=x,P.spotLength=v,P.rectAreaLength=w,P.hemiLength=M,P.numDirectionalShadows=A,P.numPointShadows=N,P.numSpotShadows=R,P.numSpotMaps=L,P.numLightProbes=W,i.version=$w++)}function h(d,p){let m=0,_=0,y=0,E=0,x=0;const v=p.matrixWorldInverse;for(let w=0,M=d.length;w<M;w++){const A=d[w];if(A.isDirectionalLight){const N=i.directional[m];N.direction.setFromMatrixPosition(A.matrixWorld),s.setFromMatrixPosition(A.target.matrixWorld),N.direction.sub(s),N.direction.transformDirection(v),m++}else if(A.isSpotLight){const N=i.spot[y];N.position.setFromMatrixPosition(A.matrixWorld),N.position.applyMatrix4(v),N.direction.setFromMatrixPosition(A.matrixWorld),s.setFromMatrixPosition(A.target.matrixWorld),N.direction.sub(s),N.direction.transformDirection(v),y++}else if(A.isRectAreaLight){const N=i.rectArea[E];N.position.setFromMatrixPosition(A.matrixWorld),N.position.applyMatrix4(v),c.identity(),l.copy(A.matrixWorld),l.premultiply(v),c.extractRotation(l),N.halfWidth.set(A.width*.5,0,0),N.halfHeight.set(0,A.height*.5,0),N.halfWidth.applyMatrix4(c),N.halfHeight.applyMatrix4(c),E++}else if(A.isPointLight){const N=i.point[_];N.position.setFromMatrixPosition(A.matrixWorld),N.position.applyMatrix4(v),_++}else if(A.isHemisphereLight){const N=i.hemi[x];N.direction.setFromMatrixPosition(A.matrixWorld),N.direction.transformDirection(v),x++}}}return{setup:u,setupView:h,state:i}}function Rg(r,e){const t=new tT(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function l(p){n.push(p)}function c(p){i.push(p)}function u(p){t.setup(n,p)}function h(p){t.setupView(n,p)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:l,pushShadow:c}}function nT(r,e){let t=new WeakMap;function n(s,l=0){const c=t.get(s);let u;return c===void 0?(u=new Rg(r,e),t.set(s,[u])):l>=c.length?(u=new Rg(r,e),c.push(u)):u=c[l],u}function i(){t=new WeakMap}return{get:n,dispose:i}}class Vd extends vn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=P_,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Gd extends vn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const iT=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,rT=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function sT(r,e,t){let n=new Va;const i=new he,s=new he,l=new Rt,c=new Vd({depthPacking:L_}),u=new Gd,h={},d=t.maxTextureSize,p={[rr]:Un,[Un]:rr,[Di]:Di},m=new Mi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new he},radius:{value:4}},vertexShader:iT,fragmentShader:rT}),_=m.clone();_.defines.HORIZONTAL_PASS=1;const y=new gt;y.setAttribute("position",new Lt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const E=new nn(y,m),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=eu;let v=this.type;this.render=function(R,L,F){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||R.length===0)return;const W=r.getRenderTarget(),b=r.getActiveCubeFace(),P=r.getActiveMipmapLevel(),$=r.state;$.setBlending(ir),$.buffers.color.setClear(1,1,1,1),$.buffers.depth.setTest(!0),$.setScissorTest(!1);const ae=v!==yi&&this.type===yi,z=v===yi&&this.type!==yi;for(let ie=0,Z=R.length;ie<Z;ie++){const ce=R[ie],k=ce.shadow;if(k===void 0){console.warn("THREE.WebGLShadowMap:",ce,"has no shadow.");continue}if(k.autoUpdate===!1&&k.needsUpdate===!1)continue;i.copy(k.mapSize);const X=k.getFrameExtents();if(i.multiply(X),s.copy(k.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(s.x=Math.floor(d/X.x),i.x=s.x*X.x,k.mapSize.x=s.x),i.y>d&&(s.y=Math.floor(d/X.y),i.y=s.y*X.y,k.mapSize.y=s.y)),k.map===null||ae===!0||z===!0){const re=this.type!==yi?{minFilter:jt,magFilter:jt}:{};k.map!==null&&k.map.dispose(),k.map=new Si(i.x,i.y,re),k.map.texture.name=ce.name+".shadowMap",k.camera.updateProjectionMatrix()}r.setRenderTarget(k.map),r.clear();const J=k.getViewportCount();for(let re=0;re<J;re++){const me=k.getViewport(re);l.set(s.x*me.x,s.y*me.y,s.x*me.z,s.y*me.w),$.viewport(l),k.updateMatrices(ce,re),n=k.getFrustum(),A(L,F,k.camera,ce,this.type)}k.isPointLightShadow!==!0&&this.type===yi&&w(k,F),k.needsUpdate=!1}v=this.type,x.needsUpdate=!1,r.setRenderTarget(W,b,P)};function w(R,L){const F=e.update(E);m.defines.VSM_SAMPLES!==R.blurSamples&&(m.defines.VSM_SAMPLES=R.blurSamples,_.defines.VSM_SAMPLES=R.blurSamples,m.needsUpdate=!0,_.needsUpdate=!0),R.mapPass===null&&(R.mapPass=new Si(i.x,i.y)),m.uniforms.shadow_pass.value=R.map.texture,m.uniforms.resolution.value=R.mapSize,m.uniforms.radius.value=R.radius,r.setRenderTarget(R.mapPass),r.clear(),r.renderBufferDirect(L,null,F,m,E,null),_.uniforms.shadow_pass.value=R.mapPass.texture,_.uniforms.resolution.value=R.mapSize,_.uniforms.radius.value=R.radius,r.setRenderTarget(R.map),r.clear(),r.renderBufferDirect(L,null,F,_,E,null)}function M(R,L,F,W){let b=null;const P=F.isPointLight===!0?R.customDistanceMaterial:R.customDepthMaterial;if(P!==void 0)b=P;else if(b=F.isPointLight===!0?u:c,r.localClippingEnabled&&L.clipShadows===!0&&Array.isArray(L.clippingPlanes)&&L.clippingPlanes.length!==0||L.displacementMap&&L.displacementScale!==0||L.alphaMap&&L.alphaTest>0||L.map&&L.alphaTest>0){const $=b.uuid,ae=L.uuid;let z=h[$];z===void 0&&(z={},h[$]=z);let ie=z[ae];ie===void 0&&(ie=b.clone(),z[ae]=ie,L.addEventListener("dispose",N)),b=ie}if(b.visible=L.visible,b.wireframe=L.wireframe,W===yi?b.side=L.shadowSide!==null?L.shadowSide:L.side:b.side=L.shadowSide!==null?L.shadowSide:p[L.side],b.alphaMap=L.alphaMap,b.alphaTest=L.alphaTest,b.map=L.map,b.clipShadows=L.clipShadows,b.clippingPlanes=L.clippingPlanes,b.clipIntersection=L.clipIntersection,b.displacementMap=L.displacementMap,b.displacementScale=L.displacementScale,b.displacementBias=L.displacementBias,b.wireframeLinewidth=L.wireframeLinewidth,b.linewidth=L.linewidth,F.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const $=r.properties.get(b);$.light=F}return b}function A(R,L,F,W,b){if(R.visible===!1)return;if(R.layers.test(L.layers)&&(R.isMesh||R.isLine||R.isPoints)&&(R.castShadow||R.receiveShadow&&b===yi)&&(!R.frustumCulled||n.intersectsObject(R))){R.modelViewMatrix.multiplyMatrices(F.matrixWorldInverse,R.matrixWorld);const ae=e.update(R),z=R.material;if(Array.isArray(z)){const ie=ae.groups;for(let Z=0,ce=ie.length;Z<ce;Z++){const k=ie[Z],X=z[k.materialIndex];if(X&&X.visible){const J=M(R,X,W,b);R.onBeforeShadow(r,R,L,F,ae,J,k),r.renderBufferDirect(F,null,ae,J,R,k),R.onAfterShadow(r,R,L,F,ae,J,k)}}}else if(z.visible){const ie=M(R,z,W,b);R.onBeforeShadow(r,R,L,F,ae,ie,null),r.renderBufferDirect(F,null,ae,ie,R,null),R.onAfterShadow(r,R,L,F,ae,ie,null)}}const $=R.children;for(let ae=0,z=$.length;ae<z;ae++)A($[ae],L,F,W,b)}function N(R){R.target.removeEventListener("dispose",N);for(const F in h){const W=h[F],b=R.target.uuid;b in W&&(W[b].dispose(),delete W[b])}}}function oT(r,e,t){const n=t.isWebGL2;function i(){let V=!1;const Ae=new Rt;let Q=null;const Se=new Rt(0,0,0,0);return{setMask:function(be){Q!==be&&!V&&(r.colorMask(be,be,be,be),Q=be)},setLocked:function(be){V=be},setClear:function(be,xt,bt,Qt,Cn){Cn===!0&&(be*=Qt,xt*=Qt,bt*=Qt),Ae.set(be,xt,bt,Qt),Se.equals(Ae)===!1&&(r.clearColor(be,xt,bt,Qt),Se.copy(Ae))},reset:function(){V=!1,Q=null,Se.set(-1,0,0,0)}}}function s(){let V=!1,Ae=null,Q=null,Se=null;return{setTest:function(be){be?Oe(r.DEPTH_TEST):at(r.DEPTH_TEST)},setMask:function(be){Ae!==be&&!V&&(r.depthMask(be),Ae=be)},setFunc:function(be){if(Q!==be){switch(be){case r_:r.depthFunc(r.NEVER);break;case s_:r.depthFunc(r.ALWAYS);break;case o_:r.depthFunc(r.LESS);break;case ga:r.depthFunc(r.LEQUAL);break;case a_:r.depthFunc(r.EQUAL);break;case l_:r.depthFunc(r.GEQUAL);break;case c_:r.depthFunc(r.GREATER);break;case u_:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}Q=be}},setLocked:function(be){V=be},setClear:function(be){Se!==be&&(r.clearDepth(be),Se=be)},reset:function(){V=!1,Ae=null,Q=null,Se=null}}}function l(){let V=!1,Ae=null,Q=null,Se=null,be=null,xt=null,bt=null,Qt=null,Cn=null;return{setTest:function(Pt){V||(Pt?Oe(r.STENCIL_TEST):at(r.STENCIL_TEST))},setMask:function(Pt){Ae!==Pt&&!V&&(r.stencilMask(Pt),Ae=Pt)},setFunc:function(Pt,pn,ti){(Q!==Pt||Se!==pn||be!==ti)&&(r.stencilFunc(Pt,pn,ti),Q=Pt,Se=pn,be=ti)},setOp:function(Pt,pn,ti){(xt!==Pt||bt!==pn||Qt!==ti)&&(r.stencilOp(Pt,pn,ti),xt=Pt,bt=pn,Qt=ti)},setLocked:function(Pt){V=Pt},setClear:function(Pt){Cn!==Pt&&(r.clearStencil(Pt),Cn=Pt)},reset:function(){V=!1,Ae=null,Q=null,Se=null,be=null,xt=null,bt=null,Qt=null,Cn=null}}}const c=new i,u=new s,h=new l,d=new WeakMap,p=new WeakMap;let m={},_={},y=new WeakMap,E=[],x=null,v=!1,w=null,M=null,A=null,N=null,R=null,L=null,F=null,W=new Ne(0,0,0),b=0,P=!1,$=null,ae=null,z=null,ie=null,Z=null;const ce=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let k=!1,X=0;const J=r.getParameter(r.VERSION);J.indexOf("WebGL")!==-1?(X=parseFloat(/^WebGL (\d)/.exec(J)[1]),k=X>=1):J.indexOf("OpenGL ES")!==-1&&(X=parseFloat(/^OpenGL ES (\d)/.exec(J)[1]),k=X>=2);let re=null,me={};const Re=r.getParameter(r.SCISSOR_BOX),j=r.getParameter(r.VIEWPORT),de=new Rt().fromArray(Re),we=new Rt().fromArray(j);function He(V,Ae,Q,Se){const be=new Uint8Array(4),xt=r.createTexture();r.bindTexture(V,xt),r.texParameteri(V,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(V,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let bt=0;bt<Q;bt++)n&&(V===r.TEXTURE_3D||V===r.TEXTURE_2D_ARRAY)?r.texImage3D(Ae,0,r.RGBA,1,1,Se,0,r.RGBA,r.UNSIGNED_BYTE,be):r.texImage2D(Ae+bt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,be);return xt}const Ge={};Ge[r.TEXTURE_2D]=He(r.TEXTURE_2D,r.TEXTURE_2D,1),Ge[r.TEXTURE_CUBE_MAP]=He(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(Ge[r.TEXTURE_2D_ARRAY]=He(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Ge[r.TEXTURE_3D]=He(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),c.setClear(0,0,0,1),u.setClear(1),h.setClear(0),Oe(r.DEPTH_TEST),u.setFunc(ga),Le(!1),ke(Rf),Oe(r.CULL_FACE),fe(ir);function Oe(V){m[V]!==!0&&(r.enable(V),m[V]=!0)}function at(V){m[V]!==!1&&(r.disable(V),m[V]=!1)}function Fe(V,Ae){return _[V]!==Ae?(r.bindFramebuffer(V,Ae),_[V]=Ae,n&&(V===r.DRAW_FRAMEBUFFER&&(_[r.FRAMEBUFFER]=Ae),V===r.FRAMEBUFFER&&(_[r.DRAW_FRAMEBUFFER]=Ae)),!0):!1}function B(V,Ae){let Q=E,Se=!1;if(V){Q=y.get(Ae),Q===void 0&&(Q=[],y.set(Ae,Q));const be=V.textures;if(Q.length!==be.length||Q[0]!==r.COLOR_ATTACHMENT0){for(let xt=0,bt=be.length;xt<bt;xt++)Q[xt]=r.COLOR_ATTACHMENT0+xt;Q.length=be.length,Se=!0}}else Q[0]!==r.BACK&&(Q[0]=r.BACK,Se=!0);if(Se)if(t.isWebGL2)r.drawBuffers(Q);else if(e.has("WEBGL_draw_buffers")===!0)e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Q);else throw new Error("THREE.WebGLState: Usage of gl.drawBuffers() require WebGL2 or WEBGL_draw_buffers extension")}function ge(V){return x!==V?(r.useProgram(V),x=V,!0):!1}const ue={[br]:r.FUNC_ADD,[G0]:r.FUNC_SUBTRACT,[W0]:r.FUNC_REVERSE_SUBTRACT};if(n)ue[Nf]=r.MIN,ue[Df]=r.MAX;else{const V=e.get("EXT_blend_minmax");V!==null&&(ue[Nf]=V.MIN_EXT,ue[Df]=V.MAX_EXT)}const ye={[X0]:r.ZERO,[q0]:r.ONE,[Y0]:r.SRC_COLOR,[Xc]:r.SRC_ALPHA,[$0]:r.SRC_ALPHA_SATURATE,[j0]:r.DST_COLOR,[J0]:r.DST_ALPHA,[Z0]:r.ONE_MINUS_SRC_COLOR,[qc]:r.ONE_MINUS_SRC_ALPHA,[Q0]:r.ONE_MINUS_DST_COLOR,[K0]:r.ONE_MINUS_DST_ALPHA,[e_]:r.CONSTANT_COLOR,[t_]:r.ONE_MINUS_CONSTANT_COLOR,[n_]:r.CONSTANT_ALPHA,[i_]:r.ONE_MINUS_CONSTANT_ALPHA};function fe(V,Ae,Q,Se,be,xt,bt,Qt,Cn,Pt){if(V===ir){v===!0&&(at(r.BLEND),v=!1);return}if(v===!1&&(Oe(r.BLEND),v=!0),V!==V0){if(V!==w||Pt!==P){if((M!==br||R!==br)&&(r.blendEquation(r.FUNC_ADD),M=br,R=br),Pt)switch(V){case ds:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Pf:r.blendFunc(r.ONE,r.ONE);break;case Lf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case If:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}else switch(V){case ds:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Pf:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case Lf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case If:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}A=null,N=null,L=null,F=null,W.set(0,0,0),b=0,w=V,P=Pt}return}be=be||Ae,xt=xt||Q,bt=bt||Se,(Ae!==M||be!==R)&&(r.blendEquationSeparate(ue[Ae],ue[be]),M=Ae,R=be),(Q!==A||Se!==N||xt!==L||bt!==F)&&(r.blendFuncSeparate(ye[Q],ye[Se],ye[xt],ye[bt]),A=Q,N=Se,L=xt,F=bt),(Qt.equals(W)===!1||Cn!==b)&&(r.blendColor(Qt.r,Qt.g,Qt.b,Cn),W.copy(Qt),b=Cn),w=V,P=!1}function De(V,Ae){V.side===Di?at(r.CULL_FACE):Oe(r.CULL_FACE);let Q=V.side===Un;Ae&&(Q=!Q),Le(Q),V.blending===ds&&V.transparent===!1?fe(ir):fe(V.blending,V.blendEquation,V.blendSrc,V.blendDst,V.blendEquationAlpha,V.blendSrcAlpha,V.blendDstAlpha,V.blendColor,V.blendAlpha,V.premultipliedAlpha),u.setFunc(V.depthFunc),u.setTest(V.depthTest),u.setMask(V.depthWrite),c.setMask(V.colorWrite);const Se=V.stencilWrite;h.setTest(Se),Se&&(h.setMask(V.stencilWriteMask),h.setFunc(V.stencilFunc,V.stencilRef,V.stencilFuncMask),h.setOp(V.stencilFail,V.stencilZFail,V.stencilZPass)),U(V.polygonOffset,V.polygonOffsetFactor,V.polygonOffsetUnits),V.alphaToCoverage===!0?Oe(r.SAMPLE_ALPHA_TO_COVERAGE):at(r.SAMPLE_ALPHA_TO_COVERAGE)}function Le(V){$!==V&&(V?r.frontFace(r.CW):r.frontFace(r.CCW),$=V)}function ke(V){V!==z0?(Oe(r.CULL_FACE),V!==ae&&(V===Rf?r.cullFace(r.BACK):V===k0?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):at(r.CULL_FACE),ae=V}function lt(V){V!==z&&(k&&r.lineWidth(V),z=V)}function U(V,Ae,Q){V?(Oe(r.POLYGON_OFFSET_FILL),(ie!==Ae||Z!==Q)&&(r.polygonOffset(Ae,Q),ie=Ae,Z=Q)):at(r.POLYGON_OFFSET_FILL)}function C(V){V?Oe(r.SCISSOR_TEST):at(r.SCISSOR_TEST)}function se(V){V===void 0&&(V=r.TEXTURE0+ce-1),re!==V&&(r.activeTexture(V),re=V)}function le(V,Ae,Q){Q===void 0&&(re===null?Q=r.TEXTURE0+ce-1:Q=re);let Se=me[Q];Se===void 0&&(Se={type:void 0,texture:void 0},me[Q]=Se),(Se.type!==V||Se.texture!==Ae)&&(re!==Q&&(r.activeTexture(Q),re=Q),r.bindTexture(V,Ae||Ge[V]),Se.type=V,Se.texture=Ae)}function _e(){const V=me[re];V!==void 0&&V.type!==void 0&&(r.bindTexture(V.type,null),V.type=void 0,V.texture=void 0)}function pe(){try{r.compressedTexImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function it(){try{r.compressedTexImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function je(){try{r.texSubImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Me(){try{r.texSubImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Te(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function rt(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function xe(){try{r.texStorage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Gt(){try{r.texStorage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function vt(){try{r.texImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Je(){try{r.texImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function We(V){de.equals(V)===!1&&(r.scissor(V.x,V.y,V.z,V.w),de.copy(V))}function Xe(V){we.equals(V)===!1&&(r.viewport(V.x,V.y,V.z,V.w),we.copy(V))}function St(V,Ae){let Q=p.get(Ae);Q===void 0&&(Q=new WeakMap,p.set(Ae,Q));let Se=Q.get(V);Se===void 0&&(Se=r.getUniformBlockIndex(Ae,V.name),Q.set(V,Se))}function ct(V,Ae){const Se=p.get(Ae).get(V);d.get(Ae)!==Se&&(r.uniformBlockBinding(Ae,Se,V.__bindingPointIndex),d.set(Ae,Se))}function Nt(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),m={},re=null,me={},_={},y=new WeakMap,E=[],x=null,v=!1,w=null,M=null,A=null,N=null,R=null,L=null,F=null,W=new Ne(0,0,0),b=0,P=!1,$=null,ae=null,z=null,ie=null,Z=null,de.set(0,0,r.canvas.width,r.canvas.height),we.set(0,0,r.canvas.width,r.canvas.height),c.reset(),u.reset(),h.reset()}return{buffers:{color:c,depth:u,stencil:h},enable:Oe,disable:at,bindFramebuffer:Fe,drawBuffers:B,useProgram:ge,setBlending:fe,setMaterial:De,setFlipSided:Le,setCullFace:ke,setLineWidth:lt,setPolygonOffset:U,setScissorTest:C,activeTexture:se,bindTexture:le,unbindTexture:_e,compressedTexImage2D:pe,compressedTexImage3D:it,texImage2D:vt,texImage3D:Je,updateUBOMapping:St,uniformBlockBinding:ct,texStorage2D:xe,texStorage3D:Gt,texSubImage2D:je,texSubImage3D:Me,compressedTexSubImage2D:Te,compressedTexSubImage3D:rt,scissor:We,viewport:Xe,reset:Nt}}function aT(r,e,t,n,i,s,l){const c=i.isWebGL2,u=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,h=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),d=new he,p=new WeakMap;let m;const _=new WeakMap;let y=!1;try{y=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function E(U,C){return y?new OffscreenCanvas(U,C):Ra("canvas")}function x(U,C,se,le){let _e=1;const pe=lt(U);if((pe.width>le||pe.height>le)&&(_e=le/Math.max(pe.width,pe.height)),_e<1||C===!0)if(typeof HTMLImageElement<"u"&&U instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&U instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&U instanceof ImageBitmap||typeof VideoFrame<"u"&&U instanceof VideoFrame){const it=C?Jc:Math.floor,je=it(_e*pe.width),Me=it(_e*pe.height);m===void 0&&(m=E(je,Me));const Te=se?E(je,Me):m;return Te.width=je,Te.height=Me,Te.getContext("2d").drawImage(U,0,0,je,Me),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+pe.width+"x"+pe.height+") to ("+je+"x"+Me+")."),Te}else return"data"in U&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+pe.width+"x"+pe.height+")."),U;return U}function v(U){const C=lt(U);return cd(C.width)&&cd(C.height)}function w(U){return c?!1:U.wrapS!==An||U.wrapT!==An||U.minFilter!==jt&&U.minFilter!==kt}function M(U,C){return U.generateMipmaps&&C&&U.minFilter!==jt&&U.minFilter!==kt}function A(U){r.generateMipmap(U)}function N(U,C,se,le,_e=!1){if(c===!1)return C;if(U!==null){if(r[U]!==void 0)return r[U];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+U+"'")}let pe=C;if(C===r.RED&&(se===r.FLOAT&&(pe=r.R32F),se===r.HALF_FLOAT&&(pe=r.R16F),se===r.UNSIGNED_BYTE&&(pe=r.R8)),C===r.RED_INTEGER&&(se===r.UNSIGNED_BYTE&&(pe=r.R8UI),se===r.UNSIGNED_SHORT&&(pe=r.R16UI),se===r.UNSIGNED_INT&&(pe=r.R32UI),se===r.BYTE&&(pe=r.R8I),se===r.SHORT&&(pe=r.R16I),se===r.INT&&(pe=r.R32I)),C===r.RG&&(se===r.FLOAT&&(pe=r.RG32F),se===r.HALF_FLOAT&&(pe=r.RG16F),se===r.UNSIGNED_BYTE&&(pe=r.RG8)),C===r.RG_INTEGER&&(se===r.UNSIGNED_BYTE&&(pe=r.RG8UI),se===r.UNSIGNED_SHORT&&(pe=r.RG16UI),se===r.UNSIGNED_INT&&(pe=r.RG32UI),se===r.BYTE&&(pe=r.RG8I),se===r.SHORT&&(pe=r.RG16I),se===r.INT&&(pe=r.RG32I)),C===r.RGBA){const it=_e?wa:Ct.getTransfer(le);se===r.FLOAT&&(pe=r.RGBA32F),se===r.HALF_FLOAT&&(pe=r.RGBA16F),se===r.UNSIGNED_BYTE&&(pe=it===Dt?r.SRGB8_ALPHA8:r.RGBA8),se===r.UNSIGNED_SHORT_4_4_4_4&&(pe=r.RGBA4),se===r.UNSIGNED_SHORT_5_5_5_1&&(pe=r.RGB5_A1)}return(pe===r.R16F||pe===r.R32F||pe===r.RG16F||pe===r.RG32F||pe===r.RGBA16F||pe===r.RGBA32F)&&e.get("EXT_color_buffer_float"),pe}function R(U,C,se){return M(U,se)===!0||U.isFramebufferTexture&&U.minFilter!==jt&&U.minFilter!==kt?Math.log2(Math.max(C.width,C.height))+1:U.mipmaps!==void 0&&U.mipmaps.length>0?U.mipmaps.length:U.isCompressedTexture&&Array.isArray(U.image)?C.mipmaps.length:1}function L(U){return U===jt||U===Yc||U===os?r.NEAREST:r.LINEAR}function F(U){const C=U.target;C.removeEventListener("dispose",F),b(C),C.isVideoTexture&&p.delete(C)}function W(U){const C=U.target;C.removeEventListener("dispose",W),$(C)}function b(U){const C=n.get(U);if(C.__webglInit===void 0)return;const se=U.source,le=_.get(se);if(le){const _e=le[C.__cacheKey];_e.usedTimes--,_e.usedTimes===0&&P(U),Object.keys(le).length===0&&_.delete(se)}n.remove(U)}function P(U){const C=n.get(U);r.deleteTexture(C.__webglTexture);const se=U.source,le=_.get(se);delete le[C.__cacheKey],l.memory.textures--}function $(U){const C=n.get(U);if(U.depthTexture&&U.depthTexture.dispose(),U.isWebGLCubeRenderTarget)for(let le=0;le<6;le++){if(Array.isArray(C.__webglFramebuffer[le]))for(let _e=0;_e<C.__webglFramebuffer[le].length;_e++)r.deleteFramebuffer(C.__webglFramebuffer[le][_e]);else r.deleteFramebuffer(C.__webglFramebuffer[le]);C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer[le])}else{if(Array.isArray(C.__webglFramebuffer))for(let le=0;le<C.__webglFramebuffer.length;le++)r.deleteFramebuffer(C.__webglFramebuffer[le]);else r.deleteFramebuffer(C.__webglFramebuffer);if(C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer),C.__webglMultisampledFramebuffer&&r.deleteFramebuffer(C.__webglMultisampledFramebuffer),C.__webglColorRenderbuffer)for(let le=0;le<C.__webglColorRenderbuffer.length;le++)C.__webglColorRenderbuffer[le]&&r.deleteRenderbuffer(C.__webglColorRenderbuffer[le]);C.__webglDepthRenderbuffer&&r.deleteRenderbuffer(C.__webglDepthRenderbuffer)}const se=U.textures;for(let le=0,_e=se.length;le<_e;le++){const pe=n.get(se[le]);pe.__webglTexture&&(r.deleteTexture(pe.__webglTexture),l.memory.textures--),n.remove(se[le])}n.remove(U)}let ae=0;function z(){ae=0}function ie(){const U=ae;return U>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+U+" texture units while this GPU supports only "+i.maxTextures),ae+=1,U}function Z(U){const C=[];return C.push(U.wrapS),C.push(U.wrapT),C.push(U.wrapR||0),C.push(U.magFilter),C.push(U.minFilter),C.push(U.anisotropy),C.push(U.internalFormat),C.push(U.format),C.push(U.type),C.push(U.generateMipmaps),C.push(U.premultiplyAlpha),C.push(U.flipY),C.push(U.unpackAlignment),C.push(U.colorSpace),C.join()}function ce(U,C){const se=n.get(U);if(U.isVideoTexture&&Le(U),U.isRenderTargetTexture===!1&&U.version>0&&se.__version!==U.version){const le=U.image;if(le===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(le.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{we(se,U,C);return}}t.bindTexture(r.TEXTURE_2D,se.__webglTexture,r.TEXTURE0+C)}function k(U,C){const se=n.get(U);if(U.version>0&&se.__version!==U.version){we(se,U,C);return}t.bindTexture(r.TEXTURE_2D_ARRAY,se.__webglTexture,r.TEXTURE0+C)}function X(U,C){const se=n.get(U);if(U.version>0&&se.__version!==U.version){we(se,U,C);return}t.bindTexture(r.TEXTURE_3D,se.__webglTexture,r.TEXTURE0+C)}function J(U,C){const se=n.get(U);if(U.version>0&&se.__version!==U.version){He(se,U,C);return}t.bindTexture(r.TEXTURE_CUBE_MAP,se.__webglTexture,r.TEXTURE0+C)}const re={[ya]:r.REPEAT,[An]:r.CLAMP_TO_EDGE,[xa]:r.MIRRORED_REPEAT},me={[jt]:r.NEAREST,[Yc]:r.NEAREST_MIPMAP_NEAREST,[os]:r.NEAREST_MIPMAP_LINEAR,[kt]:r.LINEAR,[fa]:r.LINEAR_MIPMAP_NEAREST,[Ui]:r.LINEAR_MIPMAP_LINEAR},Re={[N_]:r.NEVER,[z_]:r.ALWAYS,[D_]:r.LESS,[Id]:r.LEQUAL,[U_]:r.EQUAL,[B_]:r.GEQUAL,[O_]:r.GREATER,[F_]:r.NOTEQUAL};function j(U,C,se){if(C.type===jn&&e.has("OES_texture_float_linear")===!1&&(C.magFilter===kt||C.magFilter===fa||C.magFilter===os||C.magFilter===Ui||C.minFilter===kt||C.minFilter===fa||C.minFilter===os||C.minFilter===Ui)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),se?(r.texParameteri(U,r.TEXTURE_WRAP_S,re[C.wrapS]),r.texParameteri(U,r.TEXTURE_WRAP_T,re[C.wrapT]),(U===r.TEXTURE_3D||U===r.TEXTURE_2D_ARRAY)&&r.texParameteri(U,r.TEXTURE_WRAP_R,re[C.wrapR]),r.texParameteri(U,r.TEXTURE_MAG_FILTER,me[C.magFilter]),r.texParameteri(U,r.TEXTURE_MIN_FILTER,me[C.minFilter])):(r.texParameteri(U,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(U,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(U===r.TEXTURE_3D||U===r.TEXTURE_2D_ARRAY)&&r.texParameteri(U,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(C.wrapS!==An||C.wrapT!==An)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(U,r.TEXTURE_MAG_FILTER,L(C.magFilter)),r.texParameteri(U,r.TEXTURE_MIN_FILTER,L(C.minFilter)),C.minFilter!==jt&&C.minFilter!==kt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),C.compareFunction&&(r.texParameteri(U,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(U,r.TEXTURE_COMPARE_FUNC,Re[C.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(C.magFilter===jt||C.minFilter!==os&&C.minFilter!==Ui||C.type===jn&&e.has("OES_texture_float_linear")===!1||c===!1&&C.type===yo&&e.has("OES_texture_half_float_linear")===!1)return;if(C.anisotropy>1||n.get(C).__currentAnisotropy){const le=e.get("EXT_texture_filter_anisotropic");r.texParameterf(U,le.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,i.getMaxAnisotropy())),n.get(C).__currentAnisotropy=C.anisotropy}}}function de(U,C){let se=!1;U.__webglInit===void 0&&(U.__webglInit=!0,C.addEventListener("dispose",F));const le=C.source;let _e=_.get(le);_e===void 0&&(_e={},_.set(le,_e));const pe=Z(C);if(pe!==U.__cacheKey){_e[pe]===void 0&&(_e[pe]={texture:r.createTexture(),usedTimes:0},l.memory.textures++,se=!0),_e[pe].usedTimes++;const it=_e[U.__cacheKey];it!==void 0&&(_e[U.__cacheKey].usedTimes--,it.usedTimes===0&&P(C)),U.__cacheKey=pe,U.__webglTexture=_e[pe].texture}return se}function we(U,C,se){let le=r.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(le=r.TEXTURE_2D_ARRAY),C.isData3DTexture&&(le=r.TEXTURE_3D);const _e=de(U,C),pe=C.source;t.bindTexture(le,U.__webglTexture,r.TEXTURE0+se);const it=n.get(pe);if(pe.version!==it.__version||_e===!0){t.activeTexture(r.TEXTURE0+se);const je=Ct.getPrimaries(Ct.workingColorSpace),Me=C.colorSpace===$i?null:Ct.getPrimaries(C.colorSpace),Te=C.colorSpace===$i||je===Me?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Te);const rt=w(C)&&v(C.image)===!1;let xe=x(C.image,rt,!1,i.maxTextureSize);xe=ke(C,xe);const Gt=v(xe)||c,vt=s.convert(C.format,C.colorSpace);let Je=s.convert(C.type),We=N(C.internalFormat,vt,Je,C.colorSpace,C.isVideoTexture);j(le,C,Gt);let Xe;const St=C.mipmaps,ct=c&&C.isVideoTexture!==!0&&We!==Pd,Nt=it.__version===void 0||_e===!0,V=pe.dataReady,Ae=R(C,xe,Gt);if(C.isDepthTexture)We=r.DEPTH_COMPONENT,c?C.type===jn?We=r.DEPTH_COMPONENT32F:C.type===tr?We=r.DEPTH_COMPONENT24:C.type===Cr?We=r.DEPTH24_STENCIL8:We=r.DEPTH_COMPONENT16:C.type===jn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),C.format===Rr&&We===r.DEPTH_COMPONENT&&C.type!==nu&&C.type!==tr&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),C.type=tr,Je=s.convert(C.type)),C.format===_s&&We===r.DEPTH_COMPONENT&&(We=r.DEPTH_STENCIL,C.type!==Cr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),C.type=Cr,Je=s.convert(C.type))),Nt&&(ct?t.texStorage2D(r.TEXTURE_2D,1,We,xe.width,xe.height):t.texImage2D(r.TEXTURE_2D,0,We,xe.width,xe.height,0,vt,Je,null));else if(C.isDataTexture)if(St.length>0&&Gt){ct&&Nt&&t.texStorage2D(r.TEXTURE_2D,Ae,We,St[0].width,St[0].height);for(let Q=0,Se=St.length;Q<Se;Q++)Xe=St[Q],ct?V&&t.texSubImage2D(r.TEXTURE_2D,Q,0,0,Xe.width,Xe.height,vt,Je,Xe.data):t.texImage2D(r.TEXTURE_2D,Q,We,Xe.width,Xe.height,0,vt,Je,Xe.data);C.generateMipmaps=!1}else ct?(Nt&&t.texStorage2D(r.TEXTURE_2D,Ae,We,xe.width,xe.height),V&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,xe.width,xe.height,vt,Je,xe.data)):t.texImage2D(r.TEXTURE_2D,0,We,xe.width,xe.height,0,vt,Je,xe.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){ct&&Nt&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ae,We,St[0].width,St[0].height,xe.depth);for(let Q=0,Se=St.length;Q<Se;Q++)Xe=St[Q],C.format!==Nn?vt!==null?ct?V&&t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,Q,0,0,0,Xe.width,Xe.height,xe.depth,vt,Xe.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,Q,We,Xe.width,Xe.height,xe.depth,0,Xe.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ct?V&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,Q,0,0,0,Xe.width,Xe.height,xe.depth,vt,Je,Xe.data):t.texImage3D(r.TEXTURE_2D_ARRAY,Q,We,Xe.width,Xe.height,xe.depth,0,vt,Je,Xe.data)}else{ct&&Nt&&t.texStorage2D(r.TEXTURE_2D,Ae,We,St[0].width,St[0].height);for(let Q=0,Se=St.length;Q<Se;Q++)Xe=St[Q],C.format!==Nn?vt!==null?ct?V&&t.compressedTexSubImage2D(r.TEXTURE_2D,Q,0,0,Xe.width,Xe.height,vt,Xe.data):t.compressedTexImage2D(r.TEXTURE_2D,Q,We,Xe.width,Xe.height,0,Xe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ct?V&&t.texSubImage2D(r.TEXTURE_2D,Q,0,0,Xe.width,Xe.height,vt,Je,Xe.data):t.texImage2D(r.TEXTURE_2D,Q,We,Xe.width,Xe.height,0,vt,Je,Xe.data)}else if(C.isDataArrayTexture)ct?(Nt&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ae,We,xe.width,xe.height,xe.depth),V&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,xe.width,xe.height,xe.depth,vt,Je,xe.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,We,xe.width,xe.height,xe.depth,0,vt,Je,xe.data);else if(C.isData3DTexture)ct?(Nt&&t.texStorage3D(r.TEXTURE_3D,Ae,We,xe.width,xe.height,xe.depth),V&&t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,xe.width,xe.height,xe.depth,vt,Je,xe.data)):t.texImage3D(r.TEXTURE_3D,0,We,xe.width,xe.height,xe.depth,0,vt,Je,xe.data);else if(C.isFramebufferTexture){if(Nt)if(ct)t.texStorage2D(r.TEXTURE_2D,Ae,We,xe.width,xe.height);else{let Q=xe.width,Se=xe.height;for(let be=0;be<Ae;be++)t.texImage2D(r.TEXTURE_2D,be,We,Q,Se,0,vt,Je,null),Q>>=1,Se>>=1}}else if(St.length>0&&Gt){if(ct&&Nt){const Q=lt(St[0]);t.texStorage2D(r.TEXTURE_2D,Ae,We,Q.width,Q.height)}for(let Q=0,Se=St.length;Q<Se;Q++)Xe=St[Q],ct?V&&t.texSubImage2D(r.TEXTURE_2D,Q,0,0,vt,Je,Xe):t.texImage2D(r.TEXTURE_2D,Q,We,vt,Je,Xe);C.generateMipmaps=!1}else if(ct){if(Nt){const Q=lt(xe);t.texStorage2D(r.TEXTURE_2D,Ae,We,Q.width,Q.height)}V&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,vt,Je,xe)}else t.texImage2D(r.TEXTURE_2D,0,We,vt,Je,xe);M(C,Gt)&&A(le),it.__version=pe.version,C.onUpdate&&C.onUpdate(C)}U.__version=C.version}function He(U,C,se){if(C.image.length!==6)return;const le=de(U,C),_e=C.source;t.bindTexture(r.TEXTURE_CUBE_MAP,U.__webglTexture,r.TEXTURE0+se);const pe=n.get(_e);if(_e.version!==pe.__version||le===!0){t.activeTexture(r.TEXTURE0+se);const it=Ct.getPrimaries(Ct.workingColorSpace),je=C.colorSpace===$i?null:Ct.getPrimaries(C.colorSpace),Me=C.colorSpace===$i||it===je?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Me);const Te=C.isCompressedTexture||C.image[0].isCompressedTexture,rt=C.image[0]&&C.image[0].isDataTexture,xe=[];for(let Q=0;Q<6;Q++)!Te&&!rt?xe[Q]=x(C.image[Q],!1,!0,i.maxCubemapSize):xe[Q]=rt?C.image[Q].image:C.image[Q],xe[Q]=ke(C,xe[Q]);const Gt=xe[0],vt=v(Gt)||c,Je=s.convert(C.format,C.colorSpace),We=s.convert(C.type),Xe=N(C.internalFormat,Je,We,C.colorSpace),St=c&&C.isVideoTexture!==!0,ct=pe.__version===void 0||le===!0,Nt=_e.dataReady;let V=R(C,Gt,vt);j(r.TEXTURE_CUBE_MAP,C,vt);let Ae;if(Te){St&&ct&&t.texStorage2D(r.TEXTURE_CUBE_MAP,V,Xe,Gt.width,Gt.height);for(let Q=0;Q<6;Q++){Ae=xe[Q].mipmaps;for(let Se=0;Se<Ae.length;Se++){const be=Ae[Se];C.format!==Nn?Je!==null?St?Nt&&t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Q,Se,0,0,be.width,be.height,Je,be.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Q,Se,Xe,be.width,be.height,0,be.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):St?Nt&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Q,Se,0,0,be.width,be.height,Je,We,be.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Q,Se,Xe,be.width,be.height,0,Je,We,be.data)}}}else{if(Ae=C.mipmaps,St&&ct){Ae.length>0&&V++;const Q=lt(xe[0]);t.texStorage2D(r.TEXTURE_CUBE_MAP,V,Xe,Q.width,Q.height)}for(let Q=0;Q<6;Q++)if(rt){St?Nt&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Q,0,0,0,xe[Q].width,xe[Q].height,Je,We,xe[Q].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Q,0,Xe,xe[Q].width,xe[Q].height,0,Je,We,xe[Q].data);for(let Se=0;Se<Ae.length;Se++){const xt=Ae[Se].image[Q].image;St?Nt&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Q,Se+1,0,0,xt.width,xt.height,Je,We,xt.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Q,Se+1,Xe,xt.width,xt.height,0,Je,We,xt.data)}}else{St?Nt&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Q,0,0,0,Je,We,xe[Q]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Q,0,Xe,Je,We,xe[Q]);for(let Se=0;Se<Ae.length;Se++){const be=Ae[Se];St?Nt&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Q,Se+1,0,0,Je,We,be.image[Q]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Q,Se+1,Xe,Je,We,be.image[Q])}}}M(C,vt)&&A(r.TEXTURE_CUBE_MAP),pe.__version=_e.version,C.onUpdate&&C.onUpdate(C)}U.__version=C.version}function Ge(U,C,se,le,_e,pe){const it=s.convert(se.format,se.colorSpace),je=s.convert(se.type),Me=N(se.internalFormat,it,je,se.colorSpace);if(!n.get(C).__hasExternalTextures){const rt=Math.max(1,C.width>>pe),xe=Math.max(1,C.height>>pe);_e===r.TEXTURE_3D||_e===r.TEXTURE_2D_ARRAY?t.texImage3D(_e,pe,Me,rt,xe,C.depth,0,it,je,null):t.texImage2D(_e,pe,Me,rt,xe,0,it,je,null)}t.bindFramebuffer(r.FRAMEBUFFER,U),De(C)?u.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,le,_e,n.get(se).__webglTexture,0,fe(C)):(_e===r.TEXTURE_2D||_e>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&_e<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,le,_e,n.get(se).__webglTexture,pe),t.bindFramebuffer(r.FRAMEBUFFER,null)}function Oe(U,C,se){if(r.bindRenderbuffer(r.RENDERBUFFER,U),C.depthBuffer&&!C.stencilBuffer){let le=c===!0?r.DEPTH_COMPONENT24:r.DEPTH_COMPONENT16;if(se||De(C)){const _e=C.depthTexture;_e&&_e.isDepthTexture&&(_e.type===jn?le=r.DEPTH_COMPONENT32F:_e.type===tr&&(le=r.DEPTH_COMPONENT24));const pe=fe(C);De(C)?u.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,pe,le,C.width,C.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,pe,le,C.width,C.height)}else r.renderbufferStorage(r.RENDERBUFFER,le,C.width,C.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,U)}else if(C.depthBuffer&&C.stencilBuffer){const le=fe(C);se&&De(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,le,r.DEPTH24_STENCIL8,C.width,C.height):De(C)?u.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,le,r.DEPTH24_STENCIL8,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,C.width,C.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,U)}else{const le=C.textures;for(let _e=0;_e<le.length;_e++){const pe=le[_e],it=s.convert(pe.format,pe.colorSpace),je=s.convert(pe.type),Me=N(pe.internalFormat,it,je,pe.colorSpace),Te=fe(C);se&&De(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Te,Me,C.width,C.height):De(C)?u.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Te,Me,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,Me,C.width,C.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function at(U,C){if(C&&C.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,U),!(C.depthTexture&&C.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(C.depthTexture).__webglTexture||C.depthTexture.image.width!==C.width||C.depthTexture.image.height!==C.height)&&(C.depthTexture.image.width=C.width,C.depthTexture.image.height=C.height,C.depthTexture.needsUpdate=!0),ce(C.depthTexture,0);const le=n.get(C.depthTexture).__webglTexture,_e=fe(C);if(C.depthTexture.format===Rr)De(C)?u.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,le,0,_e):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,le,0);else if(C.depthTexture.format===_s)De(C)?u.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,le,0,_e):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,le,0);else throw new Error("Unknown depthTexture format")}function Fe(U){const C=n.get(U),se=U.isWebGLCubeRenderTarget===!0;if(U.depthTexture&&!C.__autoAllocateDepthBuffer){if(se)throw new Error("target.depthTexture not supported in Cube render targets");at(C.__webglFramebuffer,U)}else if(se){C.__webglDepthbuffer=[];for(let le=0;le<6;le++)t.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer[le]),C.__webglDepthbuffer[le]=r.createRenderbuffer(),Oe(C.__webglDepthbuffer[le],U,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer=r.createRenderbuffer(),Oe(C.__webglDepthbuffer,U,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function B(U,C,se){const le=n.get(U);C!==void 0&&Ge(le.__webglFramebuffer,U,U.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),se!==void 0&&Fe(U)}function ge(U){const C=U.texture,se=n.get(U),le=n.get(C);U.addEventListener("dispose",W);const _e=U.textures,pe=U.isWebGLCubeRenderTarget===!0,it=_e.length>1,je=v(U)||c;if(it||(le.__webglTexture===void 0&&(le.__webglTexture=r.createTexture()),le.__version=C.version,l.memory.textures++),pe){se.__webglFramebuffer=[];for(let Me=0;Me<6;Me++)if(c&&C.mipmaps&&C.mipmaps.length>0){se.__webglFramebuffer[Me]=[];for(let Te=0;Te<C.mipmaps.length;Te++)se.__webglFramebuffer[Me][Te]=r.createFramebuffer()}else se.__webglFramebuffer[Me]=r.createFramebuffer()}else{if(c&&C.mipmaps&&C.mipmaps.length>0){se.__webglFramebuffer=[];for(let Me=0;Me<C.mipmaps.length;Me++)se.__webglFramebuffer[Me]=r.createFramebuffer()}else se.__webglFramebuffer=r.createFramebuffer();if(it)if(i.drawBuffers)for(let Me=0,Te=_e.length;Me<Te;Me++){const rt=n.get(_e[Me]);rt.__webglTexture===void 0&&(rt.__webglTexture=r.createTexture(),l.memory.textures++)}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&U.samples>0&&De(U)===!1){se.__webglMultisampledFramebuffer=r.createFramebuffer(),se.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,se.__webglMultisampledFramebuffer);for(let Me=0;Me<_e.length;Me++){const Te=_e[Me];se.__webglColorRenderbuffer[Me]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,se.__webglColorRenderbuffer[Me]);const rt=s.convert(Te.format,Te.colorSpace),xe=s.convert(Te.type),Gt=N(Te.internalFormat,rt,xe,Te.colorSpace,U.isXRRenderTarget===!0),vt=fe(U);r.renderbufferStorageMultisample(r.RENDERBUFFER,vt,Gt,U.width,U.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Me,r.RENDERBUFFER,se.__webglColorRenderbuffer[Me])}r.bindRenderbuffer(r.RENDERBUFFER,null),U.depthBuffer&&(se.__webglDepthRenderbuffer=r.createRenderbuffer(),Oe(se.__webglDepthRenderbuffer,U,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(pe){t.bindTexture(r.TEXTURE_CUBE_MAP,le.__webglTexture),j(r.TEXTURE_CUBE_MAP,C,je);for(let Me=0;Me<6;Me++)if(c&&C.mipmaps&&C.mipmaps.length>0)for(let Te=0;Te<C.mipmaps.length;Te++)Ge(se.__webglFramebuffer[Me][Te],U,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,Te);else Ge(se.__webglFramebuffer[Me],U,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Me,0);M(C,je)&&A(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(it){for(let Me=0,Te=_e.length;Me<Te;Me++){const rt=_e[Me],xe=n.get(rt);t.bindTexture(r.TEXTURE_2D,xe.__webglTexture),j(r.TEXTURE_2D,rt,je),Ge(se.__webglFramebuffer,U,rt,r.COLOR_ATTACHMENT0+Me,r.TEXTURE_2D,0),M(rt,je)&&A(r.TEXTURE_2D)}t.unbindTexture()}else{let Me=r.TEXTURE_2D;if((U.isWebGL3DRenderTarget||U.isWebGLArrayRenderTarget)&&(c?Me=U.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Me,le.__webglTexture),j(Me,C,je),c&&C.mipmaps&&C.mipmaps.length>0)for(let Te=0;Te<C.mipmaps.length;Te++)Ge(se.__webglFramebuffer[Te],U,C,r.COLOR_ATTACHMENT0,Me,Te);else Ge(se.__webglFramebuffer,U,C,r.COLOR_ATTACHMENT0,Me,0);M(C,je)&&A(Me),t.unbindTexture()}U.depthBuffer&&Fe(U)}function ue(U){const C=v(U)||c,se=U.textures;for(let le=0,_e=se.length;le<_e;le++){const pe=se[le];if(M(pe,C)){const it=U.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,je=n.get(pe).__webglTexture;t.bindTexture(it,je),A(it),t.unbindTexture()}}}function ye(U){if(c&&U.samples>0&&De(U)===!1){const C=U.textures,se=U.width,le=U.height;let _e=r.COLOR_BUFFER_BIT;const pe=[],it=U.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,je=n.get(U),Me=C.length>1;if(Me)for(let Te=0;Te<C.length;Te++)t.bindFramebuffer(r.FRAMEBUFFER,je.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Te,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,je.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Te,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,je.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,je.__webglFramebuffer);for(let Te=0;Te<C.length;Te++){pe.push(r.COLOR_ATTACHMENT0+Te),U.depthBuffer&&pe.push(it);const rt=je.__ignoreDepthValues!==void 0?je.__ignoreDepthValues:!1;if(rt===!1&&(U.depthBuffer&&(_e|=r.DEPTH_BUFFER_BIT),U.stencilBuffer&&(_e|=r.STENCIL_BUFFER_BIT)),Me&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,je.__webglColorRenderbuffer[Te]),rt===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[it]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[it])),Me){const xe=n.get(C[Te]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,xe,0)}r.blitFramebuffer(0,0,se,le,0,0,se,le,_e,r.NEAREST),h&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,pe)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),Me)for(let Te=0;Te<C.length;Te++){t.bindFramebuffer(r.FRAMEBUFFER,je.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Te,r.RENDERBUFFER,je.__webglColorRenderbuffer[Te]);const rt=n.get(C[Te]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,je.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Te,r.TEXTURE_2D,rt,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,je.__webglMultisampledFramebuffer)}}function fe(U){return Math.min(i.maxSamples,U.samples)}function De(U){const C=n.get(U);return c&&U.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function Le(U){const C=l.render.frame;p.get(U)!==C&&(p.set(U,C),U.update())}function ke(U,C){const se=U.colorSpace,le=U.format,_e=U.type;return U.isCompressedTexture===!0||U.isVideoTexture===!0||U.format===Zc||se!==ar&&se!==$i&&(Ct.getTransfer(se)===Dt?c===!1?e.has("EXT_sRGB")===!0&&le===Nn?(U.format=Zc,U.minFilter=kt,U.generateMipmaps=!1):C=Dd.sRGBToLinear(C):(le!==Nn||_e!==Bi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",se)),C}function lt(U){return typeof HTMLImageElement<"u"&&U instanceof HTMLImageElement?(d.width=U.naturalWidth||U.width,d.height=U.naturalHeight||U.height):typeof VideoFrame<"u"&&U instanceof VideoFrame?(d.width=U.displayWidth,d.height=U.displayHeight):(d.width=U.width,d.height=U.height),d}this.allocateTextureUnit=ie,this.resetTextureUnits=z,this.setTexture2D=ce,this.setTexture2DArray=k,this.setTexture3D=X,this.setTextureCube=J,this.rebindTextures=B,this.setupRenderTarget=ge,this.updateRenderTargetMipmap=ue,this.updateMultisampleRenderTarget=ye,this.setupDepthRenderbuffer=Fe,this.setupFrameBufferTexture=Ge,this.useMultisampledRTT=De}function $_(r,e,t){const n=t.isWebGL2;function i(s,l=$i){let c;const u=Ct.getTransfer(l);if(s===Bi)return r.UNSIGNED_BYTE;if(s===wd)return r.UNSIGNED_SHORT_4_4_4_4;if(s===Td)return r.UNSIGNED_SHORT_5_5_5_1;if(s===x_)return r.BYTE;if(s===S_)return r.SHORT;if(s===nu)return r.UNSIGNED_SHORT;if(s===Ed)return r.INT;if(s===tr)return r.UNSIGNED_INT;if(s===jn)return r.FLOAT;if(s===yo)return n?r.HALF_FLOAT:(c=e.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(s===M_)return r.ALPHA;if(s===Nn)return r.RGBA;if(s===E_)return r.LUMINANCE;if(s===w_)return r.LUMINANCE_ALPHA;if(s===Rr)return r.DEPTH_COMPONENT;if(s===_s)return r.DEPTH_STENCIL;if(s===Zc)return c=e.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(s===Ad)return r.RED;if(s===bd)return r.RED_INTEGER;if(s===T_)return r.RG;if(s===Cd)return r.RG_INTEGER;if(s===Rd)return r.RGBA_INTEGER;if(s===Fc||s===Bc||s===zc||s===kc)if(u===Dt)if(c=e.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(s===Fc)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Bc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===zc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===kc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=e.get("WEBGL_compressed_texture_s3tc"),c!==null){if(s===Fc)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Bc)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===zc)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===kc)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Of||s===Ff||s===Bf||s===zf)if(c=e.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(s===Of)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Ff)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Bf)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===zf)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Pd)return c=e.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===kf||s===Hf)if(c=e.get("WEBGL_compressed_texture_etc"),c!==null){if(s===kf)return u===Dt?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(s===Hf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Vf||s===Gf||s===Wf||s===Xf||s===qf||s===Yf||s===Zf||s===Jf||s===Kf||s===jf||s===Qf||s===$f||s===ed||s===td)if(c=e.get("WEBGL_compressed_texture_astc"),c!==null){if(s===Vf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Gf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===Wf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Xf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===qf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Yf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Zf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Jf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Kf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===jf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===Qf)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===$f)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===ed)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===td)return u===Dt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Hc||s===nd||s===id)if(c=e.get("EXT_texture_compression_bptc"),c!==null){if(s===Hc)return u===Dt?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===nd)return c.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===id)return c.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===A_||s===rd||s===sd||s===od)if(c=e.get("EXT_texture_compression_rgtc"),c!==null){if(s===Hc)return c.COMPRESSED_RED_RGTC1_EXT;if(s===rd)return c.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===sd)return c.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===od)return c.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===Cr?n?r.UNSIGNED_INT_24_8:(c=e.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class ev extends dn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class mo extends At{constructor(){super(),this.isGroup=!0,this.type="Group"}}const lT={type:"move"};class sf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new mo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new mo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new D,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new D),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new mo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new D,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new D),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,l=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){l=!0;for(const E of e.hand.values()){const x=t.getJointPose(E,n),v=this._getHandJoint(h,E);x!==null&&(v.matrix.fromArray(x.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.matrixWorldNeedsUpdate=!0,v.jointRadius=x.radius),v.visible=x!==null}const d=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=d.position.distanceTo(p.position),_=.02,y=.005;h.inputState.pinching&&m>_+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=_-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(lT)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new mo;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}const cT=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,uT=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class hT{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new Vt,s=e.properties.get(i);s.__webglTexture=t.texture,(t.depthNear!=n.depthNear||t.depthFar!=n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}render(e,t){if(this.texture!==null){if(this.mesh===null){const n=t.cameras[0].viewport,i=new Mi({extensions:{fragDepth:!0},vertexShader:cT,fragmentShader:uT,uniforms:{depthColor:{value:this.texture},depthWidth:{value:n.z},depthHeight:{value:n.w}}});this.mesh=new nn(new Ao(20,20),i)}e.render(this.mesh,t)}}reset(){this.texture=null,this.mesh=null}}class fT extends lr{constructor(e,t){super();const n=this;let i=null,s=1,l=null,c="local-floor",u=1,h=null,d=null,p=null,m=null,_=null,y=null;const E=new hT,x=t.getContextAttributes();let v=null,w=null;const M=[],A=[],N=new he;let R=null;const L=new dn;L.layers.enable(1),L.viewport=new Rt;const F=new dn;F.layers.enable(2),F.viewport=new Rt;const W=[L,F],b=new ev;b.layers.enable(1),b.layers.enable(2);let P=null,$=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(j){let de=M[j];return de===void 0&&(de=new sf,M[j]=de),de.getTargetRaySpace()},this.getControllerGrip=function(j){let de=M[j];return de===void 0&&(de=new sf,M[j]=de),de.getGripSpace()},this.getHand=function(j){let de=M[j];return de===void 0&&(de=new sf,M[j]=de),de.getHandSpace()};function ae(j){const de=A.indexOf(j.inputSource);if(de===-1)return;const we=M[de];we!==void 0&&(we.update(j.inputSource,j.frame,h||l),we.dispatchEvent({type:j.type,data:j.inputSource}))}function z(){i.removeEventListener("select",ae),i.removeEventListener("selectstart",ae),i.removeEventListener("selectend",ae),i.removeEventListener("squeeze",ae),i.removeEventListener("squeezestart",ae),i.removeEventListener("squeezeend",ae),i.removeEventListener("end",z),i.removeEventListener("inputsourceschange",ie);for(let j=0;j<M.length;j++){const de=A[j];de!==null&&(A[j]=null,M[j].disconnect(de))}P=null,$=null,E.reset(),e.setRenderTarget(v),_=null,m=null,p=null,i=null,w=null,Re.stop(),n.isPresenting=!1,e.setPixelRatio(R),e.setSize(N.width,N.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(j){s=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(j){c=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||l},this.setReferenceSpace=function(j){h=j},this.getBaseLayer=function(){return m!==null?m:_},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(j){if(i=j,i!==null){if(v=e.getRenderTarget(),i.addEventListener("select",ae),i.addEventListener("selectstart",ae),i.addEventListener("selectend",ae),i.addEventListener("squeeze",ae),i.addEventListener("squeezestart",ae),i.addEventListener("squeezeend",ae),i.addEventListener("end",z),i.addEventListener("inputsourceschange",ie),x.xrCompatible!==!0&&await t.makeXRCompatible(),R=e.getPixelRatio(),e.getSize(N),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const de={antialias:i.renderState.layers===void 0?x.antialias:!0,alpha:!0,depth:x.depth,stencil:x.stencil,framebufferScaleFactor:s};_=new XRWebGLLayer(i,t,de),i.updateRenderState({baseLayer:_}),e.setPixelRatio(1),e.setSize(_.framebufferWidth,_.framebufferHeight,!1),w=new Si(_.framebufferWidth,_.framebufferHeight,{format:Nn,type:Bi,colorSpace:e.outputColorSpace,stencilBuffer:x.stencil})}else{let de=null,we=null,He=null;x.depth&&(He=x.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,de=x.stencil?_s:Rr,we=x.stencil?Cr:tr);const Ge={colorFormat:t.RGBA8,depthFormat:He,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(Ge),i.updateRenderState({layers:[m]}),e.setPixelRatio(1),e.setSize(m.textureWidth,m.textureHeight,!1),w=new Si(m.textureWidth,m.textureHeight,{format:Nn,type:Bi,depthTexture:new Hd(m.textureWidth,m.textureHeight,we,void 0,void 0,void 0,void 0,void 0,void 0,de),stencilBuffer:x.stencil,colorSpace:e.outputColorSpace,samples:x.antialias?4:0});const Oe=e.properties.get(w);Oe.__ignoreDepthValues=m.ignoreDepthValues}w.isXRRenderTarget=!0,this.setFoveation(u),h=null,l=await i.requestReferenceSpace(c),Re.setContext(i),Re.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function ie(j){for(let de=0;de<j.removed.length;de++){const we=j.removed[de],He=A.indexOf(we);He>=0&&(A[He]=null,M[He].disconnect(we))}for(let de=0;de<j.added.length;de++){const we=j.added[de];let He=A.indexOf(we);if(He===-1){for(let Oe=0;Oe<M.length;Oe++)if(Oe>=A.length){A.push(we),He=Oe;break}else if(A[Oe]===null){A[Oe]=we,He=Oe;break}if(He===-1)break}const Ge=M[He];Ge&&Ge.connect(we)}}const Z=new D,ce=new D;function k(j,de,we){Z.setFromMatrixPosition(de.matrixWorld),ce.setFromMatrixPosition(we.matrixWorld);const He=Z.distanceTo(ce),Ge=de.projectionMatrix.elements,Oe=we.projectionMatrix.elements,at=Ge[14]/(Ge[10]-1),Fe=Ge[14]/(Ge[10]+1),B=(Ge[9]+1)/Ge[5],ge=(Ge[9]-1)/Ge[5],ue=(Ge[8]-1)/Ge[0],ye=(Oe[8]+1)/Oe[0],fe=at*ue,De=at*ye,Le=He/(-ue+ye),ke=Le*-ue;de.matrixWorld.decompose(j.position,j.quaternion,j.scale),j.translateX(ke),j.translateZ(Le),j.matrixWorld.compose(j.position,j.quaternion,j.scale),j.matrixWorldInverse.copy(j.matrixWorld).invert();const lt=at+Le,U=Fe+Le,C=fe-ke,se=De+(He-ke),le=B*Fe/U*lt,_e=ge*Fe/U*lt;j.projectionMatrix.makePerspective(C,se,le,_e,lt,U),j.projectionMatrixInverse.copy(j.projectionMatrix).invert()}function X(j,de){de===null?j.matrixWorld.copy(j.matrix):j.matrixWorld.multiplyMatrices(de.matrixWorld,j.matrix),j.matrixWorldInverse.copy(j.matrixWorld).invert()}this.updateCamera=function(j){if(i===null)return;E.texture!==null&&(j.near=E.depthNear,j.far=E.depthFar),b.near=F.near=L.near=j.near,b.far=F.far=L.far=j.far,(P!==b.near||$!==b.far)&&(i.updateRenderState({depthNear:b.near,depthFar:b.far}),P=b.near,$=b.far,L.near=P,L.far=$,F.near=P,F.far=$,L.updateProjectionMatrix(),F.updateProjectionMatrix(),j.updateProjectionMatrix());const de=j.parent,we=b.cameras;X(b,de);for(let He=0;He<we.length;He++)X(we[He],de);we.length===2?k(b,L,F):b.projectionMatrix.copy(L.projectionMatrix),J(j,b,de)};function J(j,de,we){we===null?j.matrix.copy(de.matrixWorld):(j.matrix.copy(we.matrixWorld),j.matrix.invert(),j.matrix.multiply(de.matrixWorld)),j.matrix.decompose(j.position,j.quaternion,j.scale),j.updateMatrixWorld(!0),j.projectionMatrix.copy(de.projectionMatrix),j.projectionMatrixInverse.copy(de.projectionMatrixInverse),j.isPerspectiveCamera&&(j.fov=xo*2*Math.atan(1/j.projectionMatrix.elements[5]),j.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(m===null&&_===null))return u},this.setFoveation=function(j){u=j,m!==null&&(m.fixedFoveation=j),_!==null&&_.fixedFoveation!==void 0&&(_.fixedFoveation=j)},this.hasDepthSensing=function(){return E.texture!==null};let re=null;function me(j,de){if(d=de.getViewerPose(h||l),y=de,d!==null){const we=d.views;_!==null&&(e.setRenderTargetFramebuffer(w,_.framebuffer),e.setRenderTarget(w));let He=!1;we.length!==b.cameras.length&&(b.cameras.length=0,He=!0);for(let Oe=0;Oe<we.length;Oe++){const at=we[Oe];let Fe=null;if(_!==null)Fe=_.getViewport(at);else{const ge=p.getViewSubImage(m,at);Fe=ge.viewport,Oe===0&&(e.setRenderTargetTextures(w,ge.colorTexture,m.ignoreDepthValues?void 0:ge.depthStencilTexture),e.setRenderTarget(w))}let B=W[Oe];B===void 0&&(B=new dn,B.layers.enable(Oe),B.viewport=new Rt,W[Oe]=B),B.matrix.fromArray(at.transform.matrix),B.matrix.decompose(B.position,B.quaternion,B.scale),B.projectionMatrix.fromArray(at.projectionMatrix),B.projectionMatrixInverse.copy(B.projectionMatrix).invert(),B.viewport.set(Fe.x,Fe.y,Fe.width,Fe.height),Oe===0&&(b.matrix.copy(B.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),He===!0&&b.cameras.push(B)}const Ge=i.enabledFeatures;if(Ge&&Ge.includes("depth-sensing")){const Oe=p.getDepthInformation(we[0]);Oe&&Oe.isValid&&Oe.texture&&E.init(e,Oe,i.renderState)}}for(let we=0;we<M.length;we++){const He=A[we],Ge=M[we];He!==null&&Ge!==void 0&&Ge.update(He,de,h||l)}E.render(e,b),re&&re(j,de),de.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:de}),y=null}const Re=new Y_;Re.setAnimationLoop(me),this.setAnimationLoop=function(j){re=j},this.dispose=function(){}}}const jr=new ei,dT=new $e;function pT(r,e){function t(x,v){x.matrixAutoUpdate===!0&&x.updateMatrix(),v.value.copy(x.matrix)}function n(x,v){v.color.getRGB(x.fogColor.value,X_(r)),v.isFog?(x.fogNear.value=v.near,x.fogFar.value=v.far):v.isFogExp2&&(x.fogDensity.value=v.density)}function i(x,v,w,M,A){v.isMeshBasicMaterial||v.isMeshLambertMaterial?s(x,v):v.isMeshToonMaterial?(s(x,v),p(x,v)):v.isMeshPhongMaterial?(s(x,v),d(x,v)):v.isMeshStandardMaterial?(s(x,v),m(x,v),v.isMeshPhysicalMaterial&&_(x,v,A)):v.isMeshMatcapMaterial?(s(x,v),y(x,v)):v.isMeshDepthMaterial?s(x,v):v.isMeshDistanceMaterial?(s(x,v),E(x,v)):v.isMeshNormalMaterial?s(x,v):v.isLineBasicMaterial?(l(x,v),v.isLineDashedMaterial&&c(x,v)):v.isPointsMaterial?u(x,v,w,M):v.isSpriteMaterial?h(x,v):v.isShadowMaterial?(x.color.value.copy(v.color),x.opacity.value=v.opacity):v.isShaderMaterial&&(v.uniformsNeedUpdate=!1)}function s(x,v){x.opacity.value=v.opacity,v.color&&x.diffuse.value.copy(v.color),v.emissive&&x.emissive.value.copy(v.emissive).multiplyScalar(v.emissiveIntensity),v.map&&(x.map.value=v.map,t(v.map,x.mapTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.bumpMap&&(x.bumpMap.value=v.bumpMap,t(v.bumpMap,x.bumpMapTransform),x.bumpScale.value=v.bumpScale,v.side===Un&&(x.bumpScale.value*=-1)),v.normalMap&&(x.normalMap.value=v.normalMap,t(v.normalMap,x.normalMapTransform),x.normalScale.value.copy(v.normalScale),v.side===Un&&x.normalScale.value.negate()),v.displacementMap&&(x.displacementMap.value=v.displacementMap,t(v.displacementMap,x.displacementMapTransform),x.displacementScale.value=v.displacementScale,x.displacementBias.value=v.displacementBias),v.emissiveMap&&(x.emissiveMap.value=v.emissiveMap,t(v.emissiveMap,x.emissiveMapTransform)),v.specularMap&&(x.specularMap.value=v.specularMap,t(v.specularMap,x.specularMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest);const w=e.get(v),M=w.envMap,A=w.envMapRotation;if(M&&(x.envMap.value=M,jr.copy(A),jr.x*=-1,jr.y*=-1,jr.z*=-1,M.isCubeTexture&&M.isRenderTargetTexture===!1&&(jr.y*=-1,jr.z*=-1),x.envMapRotation.value.setFromMatrix4(dT.makeRotationFromEuler(jr)),x.flipEnvMap.value=M.isCubeTexture&&M.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=v.reflectivity,x.ior.value=v.ior,x.refractionRatio.value=v.refractionRatio),v.lightMap){x.lightMap.value=v.lightMap;const N=r._useLegacyLights===!0?Math.PI:1;x.lightMapIntensity.value=v.lightMapIntensity*N,t(v.lightMap,x.lightMapTransform)}v.aoMap&&(x.aoMap.value=v.aoMap,x.aoMapIntensity.value=v.aoMapIntensity,t(v.aoMap,x.aoMapTransform))}function l(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,v.map&&(x.map.value=v.map,t(v.map,x.mapTransform))}function c(x,v){x.dashSize.value=v.dashSize,x.totalSize.value=v.dashSize+v.gapSize,x.scale.value=v.scale}function u(x,v,w,M){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.size.value=v.size*w,x.scale.value=M*.5,v.map&&(x.map.value=v.map,t(v.map,x.uvTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest)}function h(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.rotation.value=v.rotation,v.map&&(x.map.value=v.map,t(v.map,x.mapTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest)}function d(x,v){x.specular.value.copy(v.specular),x.shininess.value=Math.max(v.shininess,1e-4)}function p(x,v){v.gradientMap&&(x.gradientMap.value=v.gradientMap)}function m(x,v){x.metalness.value=v.metalness,v.metalnessMap&&(x.metalnessMap.value=v.metalnessMap,t(v.metalnessMap,x.metalnessMapTransform)),x.roughness.value=v.roughness,v.roughnessMap&&(x.roughnessMap.value=v.roughnessMap,t(v.roughnessMap,x.roughnessMapTransform)),e.get(v).envMap&&(x.envMapIntensity.value=v.envMapIntensity)}function _(x,v,w){x.ior.value=v.ior,v.sheen>0&&(x.sheenColor.value.copy(v.sheenColor).multiplyScalar(v.sheen),x.sheenRoughness.value=v.sheenRoughness,v.sheenColorMap&&(x.sheenColorMap.value=v.sheenColorMap,t(v.sheenColorMap,x.sheenColorMapTransform)),v.sheenRoughnessMap&&(x.sheenRoughnessMap.value=v.sheenRoughnessMap,t(v.sheenRoughnessMap,x.sheenRoughnessMapTransform))),v.clearcoat>0&&(x.clearcoat.value=v.clearcoat,x.clearcoatRoughness.value=v.clearcoatRoughness,v.clearcoatMap&&(x.clearcoatMap.value=v.clearcoatMap,t(v.clearcoatMap,x.clearcoatMapTransform)),v.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=v.clearcoatRoughnessMap,t(v.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),v.clearcoatNormalMap&&(x.clearcoatNormalMap.value=v.clearcoatNormalMap,t(v.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(v.clearcoatNormalScale),v.side===Un&&x.clearcoatNormalScale.value.negate())),v.iridescence>0&&(x.iridescence.value=v.iridescence,x.iridescenceIOR.value=v.iridescenceIOR,x.iridescenceThicknessMinimum.value=v.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=v.iridescenceThicknessRange[1],v.iridescenceMap&&(x.iridescenceMap.value=v.iridescenceMap,t(v.iridescenceMap,x.iridescenceMapTransform)),v.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=v.iridescenceThicknessMap,t(v.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),v.transmission>0&&(x.transmission.value=v.transmission,x.transmissionSamplerMap.value=w.texture,x.transmissionSamplerSize.value.set(w.width,w.height),v.transmissionMap&&(x.transmissionMap.value=v.transmissionMap,t(v.transmissionMap,x.transmissionMapTransform)),x.thickness.value=v.thickness,v.thicknessMap&&(x.thicknessMap.value=v.thicknessMap,t(v.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=v.attenuationDistance,x.attenuationColor.value.copy(v.attenuationColor)),v.anisotropy>0&&(x.anisotropyVector.value.set(v.anisotropy*Math.cos(v.anisotropyRotation),v.anisotropy*Math.sin(v.anisotropyRotation)),v.anisotropyMap&&(x.anisotropyMap.value=v.anisotropyMap,t(v.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=v.specularIntensity,x.specularColor.value.copy(v.specularColor),v.specularColorMap&&(x.specularColorMap.value=v.specularColorMap,t(v.specularColorMap,x.specularColorMapTransform)),v.specularIntensityMap&&(x.specularIntensityMap.value=v.specularIntensityMap,t(v.specularIntensityMap,x.specularIntensityMapTransform))}function y(x,v){v.matcap&&(x.matcap.value=v.matcap)}function E(x,v){const w=e.get(v).light;x.referencePosition.value.setFromMatrixPosition(w.matrixWorld),x.nearDistance.value=w.shadow.camera.near,x.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function mT(r,e,t,n){let i={},s={},l=[];const c=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function u(w,M){const A=M.program;n.uniformBlockBinding(w,A)}function h(w,M){let A=i[w.id];A===void 0&&(y(w),A=d(w),i[w.id]=A,w.addEventListener("dispose",x));const N=M.program;n.updateUBOMapping(w,N);const R=e.render.frame;s[w.id]!==R&&(m(w),s[w.id]=R)}function d(w){const M=p();w.__bindingPointIndex=M;const A=r.createBuffer(),N=w.__size,R=w.usage;return r.bindBuffer(r.UNIFORM_BUFFER,A),r.bufferData(r.UNIFORM_BUFFER,N,R),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,M,A),A}function p(){for(let w=0;w<c;w++)if(l.indexOf(w)===-1)return l.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(w){const M=i[w.id],A=w.uniforms,N=w.__cache;r.bindBuffer(r.UNIFORM_BUFFER,M);for(let R=0,L=A.length;R<L;R++){const F=Array.isArray(A[R])?A[R]:[A[R]];for(let W=0,b=F.length;W<b;W++){const P=F[W];if(_(P,R,W,N)===!0){const $=P.__offset,ae=Array.isArray(P.value)?P.value:[P.value];let z=0;for(let ie=0;ie<ae.length;ie++){const Z=ae[ie],ce=E(Z);typeof Z=="number"||typeof Z=="boolean"?(P.__data[0]=Z,r.bufferSubData(r.UNIFORM_BUFFER,$+z,P.__data)):Z.isMatrix3?(P.__data[0]=Z.elements[0],P.__data[1]=Z.elements[1],P.__data[2]=Z.elements[2],P.__data[3]=0,P.__data[4]=Z.elements[3],P.__data[5]=Z.elements[4],P.__data[6]=Z.elements[5],P.__data[7]=0,P.__data[8]=Z.elements[6],P.__data[9]=Z.elements[7],P.__data[10]=Z.elements[8],P.__data[11]=0):(Z.toArray(P.__data,z),z+=ce.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,$,P.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function _(w,M,A,N){const R=w.value,L=M+"_"+A;if(N[L]===void 0)return typeof R=="number"||typeof R=="boolean"?N[L]=R:N[L]=R.clone(),!0;{const F=N[L];if(typeof R=="number"||typeof R=="boolean"){if(F!==R)return N[L]=R,!0}else if(F.equals(R)===!1)return F.copy(R),!0}return!1}function y(w){const M=w.uniforms;let A=0;const N=16;for(let L=0,F=M.length;L<F;L++){const W=Array.isArray(M[L])?M[L]:[M[L]];for(let b=0,P=W.length;b<P;b++){const $=W[b],ae=Array.isArray($.value)?$.value:[$.value];for(let z=0,ie=ae.length;z<ie;z++){const Z=ae[z],ce=E(Z),k=A%N;k!==0&&N-k<ce.boundary&&(A+=N-k),$.__data=new Float32Array(ce.storage/Float32Array.BYTES_PER_ELEMENT),$.__offset=A,A+=ce.storage}}}const R=A%N;return R>0&&(A+=N-R),w.__size=A,w.__cache={},this}function E(w){const M={boundary:0,storage:0};return typeof w=="number"||typeof w=="boolean"?(M.boundary=4,M.storage=4):w.isVector2?(M.boundary=8,M.storage=8):w.isVector3||w.isColor?(M.boundary=16,M.storage=12):w.isVector4?(M.boundary=16,M.storage=16):w.isMatrix3?(M.boundary=48,M.storage=48):w.isMatrix4?(M.boundary=64,M.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),M}function x(w){const M=w.target;M.removeEventListener("dispose",x);const A=l.indexOf(M.__bindingPointIndex);l.splice(A,1),r.deleteBuffer(i[M.id]),delete i[M.id],delete s[M.id]}function v(){for(const w in i)r.deleteBuffer(i[w]);l=[],i={},s={}}return{bind:u,update:h,dispose:v}}class Wd{constructor(e={}){const{canvas:t=H_(),context:n=null,depth:i=!0,stencil:s=!0,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;n!==null?m=n.getContextAttributes().alpha:m=l;const _=new Uint32Array(4),y=new Int32Array(4);let E=null,x=null;const v=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=di,this._useLegacyLights=!1,this.toneMapping=Fi,this.toneMappingExposure=1;const M=this;let A=!1,N=0,R=0,L=null,F=-1,W=null;const b=new Rt,P=new Rt;let $=null;const ae=new Ne(0);let z=0,ie=t.width,Z=t.height,ce=1,k=null,X=null;const J=new Rt(0,0,ie,Z),re=new Rt(0,0,ie,Z);let me=!1;const Re=new Va;let j=!1,de=!1,we=null;const He=new $e,Ge=new he,Oe=new D,at={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Fe(){return L===null?ce:1}let B=n;function ge(I,q){for(let ee=0;ee<I.length;ee++){const te=I[ee],K=t.getContext(te,q);if(K!==null)return K}return null}try{const I={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:d,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${$c}`),t.addEventListener("webglcontextlost",Nt,!1),t.addEventListener("webglcontextrestored",V,!1),t.addEventListener("webglcontextcreationerror",Ae,!1),B===null){const q=["webgl2","webgl","experimental-webgl"];if(M.isWebGL1Renderer===!0&&q.shift(),B=ge(q,I),B===null)throw ge(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&B instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),B.getShaderPrecisionFormat===void 0&&(B.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(I){throw console.error("THREE.WebGLRenderer: "+I.message),I}let ue,ye,fe,De,Le,ke,lt,U,C,se,le,_e,pe,it,je,Me,Te,rt,xe,Gt,vt,Je,We,Xe;function St(){ue=new T1(B),ye=new y1(B,ue,e),ue.init(ye),Je=new $_(B,ue,ye),fe=new oT(B,ue,ye),De=new C1(B),Le=new Zw,ke=new aT(B,ue,fe,Le,ye,Je,De),lt=new S1(M),U=new w1(M),C=new DS(B,ye),We=new _1(B,ue,C,ye),se=new A1(B,C,De,We),le=new I1(B,se,C,De),xe=new L1(B,ye,ke),Me=new x1(Le),_e=new Yw(M,lt,U,ue,ye,We,Me),pe=new pT(M,Le),it=new Kw,je=new nT(ue,ye),rt=new g1(M,lt,U,fe,le,m,u),Te=new sT(M,le,ye),Xe=new mT(B,De,ye,fe),Gt=new v1(B,ue,De,ye),vt=new b1(B,ue,De,ye),De.programs=_e.programs,M.capabilities=ye,M.extensions=ue,M.properties=Le,M.renderLists=it,M.shadowMap=Te,M.state=fe,M.info=De}St();const ct=new fT(M,B);this.xr=ct,this.getContext=function(){return B},this.getContextAttributes=function(){return B.getContextAttributes()},this.forceContextLoss=function(){const I=ue.get("WEBGL_lose_context");I&&I.loseContext()},this.forceContextRestore=function(){const I=ue.get("WEBGL_lose_context");I&&I.restoreContext()},this.getPixelRatio=function(){return ce},this.setPixelRatio=function(I){I!==void 0&&(ce=I,this.setSize(ie,Z,!1))},this.getSize=function(I){return I.set(ie,Z)},this.setSize=function(I,q,ee=!0){if(ct.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}ie=I,Z=q,t.width=Math.floor(I*ce),t.height=Math.floor(q*ce),ee===!0&&(t.style.width=I+"px",t.style.height=q+"px"),this.setViewport(0,0,I,q)},this.getDrawingBufferSize=function(I){return I.set(ie*ce,Z*ce).floor()},this.setDrawingBufferSize=function(I,q,ee){ie=I,Z=q,ce=ee,t.width=Math.floor(I*ee),t.height=Math.floor(q*ee),this.setViewport(0,0,I,q)},this.getCurrentViewport=function(I){return I.copy(b)},this.getViewport=function(I){return I.copy(J)},this.setViewport=function(I,q,ee,te){I.isVector4?J.set(I.x,I.y,I.z,I.w):J.set(I,q,ee,te),fe.viewport(b.copy(J).multiplyScalar(ce).round())},this.getScissor=function(I){return I.copy(re)},this.setScissor=function(I,q,ee,te){I.isVector4?re.set(I.x,I.y,I.z,I.w):re.set(I,q,ee,te),fe.scissor(P.copy(re).multiplyScalar(ce).round())},this.getScissorTest=function(){return me},this.setScissorTest=function(I){fe.setScissorTest(me=I)},this.setOpaqueSort=function(I){k=I},this.setTransparentSort=function(I){X=I},this.getClearColor=function(I){return I.copy(rt.getClearColor())},this.setClearColor=function(){rt.setClearColor.apply(rt,arguments)},this.getClearAlpha=function(){return rt.getClearAlpha()},this.setClearAlpha=function(){rt.setClearAlpha.apply(rt,arguments)},this.clear=function(I=!0,q=!0,ee=!0){let te=0;if(I){let K=!1;if(L!==null){const Ie=L.texture.format;K=Ie===Rd||Ie===Cd||Ie===bd}if(K){const Ie=L.texture.type,Ye=Ie===Bi||Ie===tr||Ie===nu||Ie===Cr||Ie===wd||Ie===Td,Qe=rt.getClearColor(),et=rt.getClearAlpha(),st=Qe.r,nt=Qe.g,ot=Qe.b;Ye?(_[0]=st,_[1]=nt,_[2]=ot,_[3]=et,B.clearBufferuiv(B.COLOR,0,_)):(y[0]=st,y[1]=nt,y[2]=ot,y[3]=et,B.clearBufferiv(B.COLOR,0,y))}else te|=B.COLOR_BUFFER_BIT}q&&(te|=B.DEPTH_BUFFER_BIT),ee&&(te|=B.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),B.clear(te)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Nt,!1),t.removeEventListener("webglcontextrestored",V,!1),t.removeEventListener("webglcontextcreationerror",Ae,!1),it.dispose(),je.dispose(),Le.dispose(),lt.dispose(),U.dispose(),le.dispose(),We.dispose(),Xe.dispose(),_e.dispose(),ct.dispose(),ct.removeEventListener("sessionstart",Cn),ct.removeEventListener("sessionend",Pt),we&&(we.dispose(),we=null),pn.stop()};function Nt(I){I.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),A=!0}function V(){console.log("THREE.WebGLRenderer: Context Restored."),A=!1;const I=De.autoReset,q=Te.enabled,ee=Te.autoUpdate,te=Te.needsUpdate,K=Te.type;St(),De.autoReset=I,Te.enabled=q,Te.autoUpdate=ee,Te.needsUpdate=te,Te.type=K}function Ae(I){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",I.statusMessage)}function Q(I){const q=I.target;q.removeEventListener("dispose",Q),Se(q)}function Se(I){be(I),Le.remove(I)}function be(I){const q=Le.get(I).programs;q!==void 0&&(q.forEach(function(ee){_e.releaseProgram(ee)}),I.isShaderMaterial&&_e.releaseShaderCache(I))}this.renderBufferDirect=function(I,q,ee,te,K,Ie){q===null&&(q=at);const Ye=K.isMesh&&K.matrixWorld.determinant()<0,Qe=bu(I,q,ee,te,K);fe.setMaterial(te,Ye);let et=ee.index,st=1;if(te.wireframe===!0){if(et=se.getWireframeAttribute(ee),et===void 0)return;st=2}const nt=ee.drawRange,ot=ee.attributes.position;let Bt=nt.start*st,mn=(nt.start+nt.count)*st;Ie!==null&&(Bt=Math.max(Bt,Ie.start*st),mn=Math.min(mn,(Ie.start+Ie.count)*st)),et!==null?(Bt=Math.max(Bt,0),mn=Math.min(mn,et.count)):ot!=null&&(Bt=Math.max(Bt,0),mn=Math.min(mn,ot.count));const Ut=mn-Bt;if(Ut<0||Ut===1/0)return;We.setup(K,te,Qe,ee,et);let an,tt=Gt;if(et!==null&&(an=C.get(et),tt=vt,tt.setIndex(an)),K.isMesh)te.wireframe===!0?(fe.setLineWidth(te.wireframeLinewidth*Fe()),tt.setMode(B.LINES)):tt.setMode(B.TRIANGLES);else if(K.isLine){let Ue=te.linewidth;Ue===void 0&&(Ue=1),fe.setLineWidth(Ue*Fe()),K.isLineSegments?tt.setMode(B.LINES):K.isLineLoop?tt.setMode(B.LINE_LOOP):tt.setMode(B.LINE_STRIP)}else K.isPoints?tt.setMode(B.POINTS):K.isSprite&&tt.setMode(B.TRIANGLES);if(K.isBatchedMesh)tt.renderMultiDraw(K._multiDrawStarts,K._multiDrawCounts,K._multiDrawCount);else if(K.isInstancedMesh)tt.renderInstances(Bt,Ut,K.count);else if(ee.isInstancedBufferGeometry){const Ue=ee._maxInstanceCount!==void 0?ee._maxInstanceCount:1/0,ni=Math.min(ee.instanceCount,Ue);tt.renderInstances(Bt,Ut,ni)}else tt.render(Bt,Ut)};function xt(I,q,ee){I.transparent===!0&&I.side===Di&&I.forceSinglePass===!1?(I.side=Un,I.needsUpdate=!0,Ts(I,q,ee),I.side=rr,I.needsUpdate=!0,Ts(I,q,ee),I.side=Di):Ts(I,q,ee)}this.compile=function(I,q,ee=null){ee===null&&(ee=I),x=je.get(ee),x.init(),w.push(x),ee.traverseVisible(function(K){K.isLight&&K.layers.test(q.layers)&&(x.pushLight(K),K.castShadow&&x.pushShadow(K))}),I!==ee&&I.traverseVisible(function(K){K.isLight&&K.layers.test(q.layers)&&(x.pushLight(K),K.castShadow&&x.pushShadow(K))}),x.setupLights(M._useLegacyLights);const te=new Set;return I.traverse(function(K){const Ie=K.material;if(Ie)if(Array.isArray(Ie))for(let Ye=0;Ye<Ie.length;Ye++){const Qe=Ie[Ye];xt(Qe,ee,K),te.add(Qe)}else xt(Ie,ee,K),te.add(Ie)}),w.pop(),x=null,te},this.compileAsync=function(I,q,ee=null){const te=this.compile(I,q,ee);return new Promise(K=>{function Ie(){if(te.forEach(function(Ye){Le.get(Ye).currentProgram.isReady()&&te.delete(Ye)}),te.size===0){K(I);return}setTimeout(Ie,10)}ue.get("KHR_parallel_shader_compile")!==null?Ie():setTimeout(Ie,10)})};let bt=null;function Qt(I){bt&&bt(I)}function Cn(){pn.stop()}function Pt(){pn.start()}const pn=new Y_;pn.setAnimationLoop(Qt),typeof self<"u"&&pn.setContext(self),this.setAnimationLoop=function(I){bt=I,ct.setAnimationLoop(I),I===null?pn.stop():pn.start()},ct.addEventListener("sessionstart",Cn),ct.addEventListener("sessionend",Pt),this.render=function(I,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(A===!0)return;I.matrixWorldAutoUpdate===!0&&I.updateMatrixWorld(),q.parent===null&&q.matrixWorldAutoUpdate===!0&&q.updateMatrixWorld(),ct.enabled===!0&&ct.isPresenting===!0&&(ct.cameraAutoUpdate===!0&&ct.updateCamera(q),q=ct.getCamera()),I.isScene===!0&&I.onBeforeRender(M,I,q,L),x=je.get(I,w.length),x.init(),w.push(x),He.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),Re.setFromProjectionMatrix(He),de=this.localClippingEnabled,j=Me.init(this.clippingPlanes,de),E=it.get(I,v.length),E.init(),v.push(E),ti(I,q,0,M.sortObjects),E.finish(),M.sortObjects===!0&&E.sort(k,X),this.info.render.frame++,j===!0&&Me.beginShadows();const ee=x.state.shadowsArray;if(Te.render(ee,I,q),j===!0&&Me.endShadows(),this.info.autoReset===!0&&this.info.reset(),(ct.enabled===!1||ct.isPresenting===!1||ct.hasDepthSensing()===!1)&&rt.render(E,I),x.setupLights(M._useLegacyLights),q.isArrayCamera){const te=q.cameras;for(let K=0,Ie=te.length;K<Ie;K++){const Ye=te[K];Po(E,I,Ye,Ye.viewport)}}else Po(E,I,q);L!==null&&(ke.updateMultisampleRenderTarget(L),ke.updateRenderTargetMipmap(L)),I.isScene===!0&&I.onAfterRender(M,I,q),We.resetDefaultState(),F=-1,W=null,w.pop(),w.length>0?x=w[w.length-1]:x=null,v.pop(),v.length>0?E=v[v.length-1]:E=null};function ti(I,q,ee,te){if(I.visible===!1)return;if(I.layers.test(q.layers)){if(I.isGroup)ee=I.renderOrder;else if(I.isLOD)I.autoUpdate===!0&&I.update(q);else if(I.isLight)x.pushLight(I),I.castShadow&&x.pushShadow(I);else if(I.isSprite){if(!I.frustumCulled||Re.intersectsSprite(I)){te&&Oe.setFromMatrixPosition(I.matrixWorld).applyMatrix4(He);const Ye=le.update(I),Qe=I.material;Qe.visible&&E.push(I,Ye,Qe,ee,Oe.z,null)}}else if((I.isMesh||I.isLine||I.isPoints)&&(!I.frustumCulled||Re.intersectsObject(I))){const Ye=le.update(I),Qe=I.material;if(te&&(I.boundingSphere!==void 0?(I.boundingSphere===null&&I.computeBoundingSphere(),Oe.copy(I.boundingSphere.center)):(Ye.boundingSphere===null&&Ye.computeBoundingSphere(),Oe.copy(Ye.boundingSphere.center)),Oe.applyMatrix4(I.matrixWorld).applyMatrix4(He)),Array.isArray(Qe)){const et=Ye.groups;for(let st=0,nt=et.length;st<nt;st++){const ot=et[st],Bt=Qe[ot.materialIndex];Bt&&Bt.visible&&E.push(I,Ye,Bt,ee,Oe.z,ot)}}else Qe.visible&&E.push(I,Ye,Qe,ee,Oe.z,null)}}const Ie=I.children;for(let Ye=0,Qe=Ie.length;Ye<Qe;Ye++)ti(Ie[Ye],q,ee,te)}function Po(I,q,ee,te){const K=I.opaque,Ie=I.transmissive,Ye=I.transparent;x.setupLightsView(ee),j===!0&&Me.setGlobalState(M.clippingPlanes,ee),Ie.length>0&&Lo(K,Ie,q,ee),te&&fe.viewport(b.copy(te)),K.length>0&&ws(K,q,ee),Ie.length>0&&ws(Ie,q,ee),Ye.length>0&&ws(Ye,q,ee),fe.buffers.depth.setTest(!0),fe.buffers.depth.setMask(!0),fe.buffers.color.setMask(!0),fe.setPolygonOffset(!1)}function Lo(I,q,ee,te){if((ee.isScene===!0?ee.overrideMaterial:null)!==null)return;const Ie=ye.isWebGL2;we===null&&(we=new Si(1,1,{generateMipmaps:!0,type:ue.has("EXT_color_buffer_half_float")?yo:Bi,minFilter:Ui,samples:Ie?4:0})),M.getDrawingBufferSize(Ge),Ie?we.setSize(Ge.x,Ge.y):we.setSize(Jc(Ge.x),Jc(Ge.y));const Ye=M.getRenderTarget();M.setRenderTarget(we),M.getClearColor(ae),z=M.getClearAlpha(),z<1&&M.setClearColor(16777215,.5),M.clear();const Qe=M.toneMapping;M.toneMapping=Fi,ws(I,ee,te),ke.updateMultisampleRenderTarget(we),ke.updateRenderTargetMipmap(we);let et=!1;for(let st=0,nt=q.length;st<nt;st++){const ot=q[st],Bt=ot.object,mn=ot.geometry,Ut=ot.material,an=ot.group;if(Ut.side===Di&&Bt.layers.test(te.layers)){const tt=Ut.side;Ut.side=Un,Ut.needsUpdate=!0,cr(Bt,ee,te,mn,Ut,an),Ut.side=tt,Ut.needsUpdate=!0,et=!0}}et===!0&&(ke.updateMultisampleRenderTarget(we),ke.updateRenderTargetMipmap(we)),M.setRenderTarget(Ye),M.setClearColor(ae,z),M.toneMapping=Qe}function ws(I,q,ee){const te=q.isScene===!0?q.overrideMaterial:null;for(let K=0,Ie=I.length;K<Ie;K++){const Ye=I[K],Qe=Ye.object,et=Ye.geometry,st=te===null?Ye.material:te,nt=Ye.group;Qe.layers.test(ee.layers)&&cr(Qe,q,ee,et,st,nt)}}function cr(I,q,ee,te,K,Ie){I.onBeforeRender(M,q,ee,te,K,Ie),I.modelViewMatrix.multiplyMatrices(ee.matrixWorldInverse,I.matrixWorld),I.normalMatrix.getNormalMatrix(I.modelViewMatrix),K.onBeforeRender(M,q,ee,te,I,Ie),K.transparent===!0&&K.side===Di&&K.forceSinglePass===!1?(K.side=Un,K.needsUpdate=!0,M.renderBufferDirect(ee,q,te,K,I,Ie),K.side=rr,K.needsUpdate=!0,M.renderBufferDirect(ee,q,te,K,I,Ie),K.side=Di):M.renderBufferDirect(ee,q,te,K,I,Ie),I.onAfterRender(M,q,ee,te,K,Ie)}function Ts(I,q,ee){q.isScene!==!0&&(q=at);const te=Le.get(I),K=x.state.lights,Ie=x.state.shadowsArray,Ye=K.state.version,Qe=_e.getParameters(I,K.state,Ie,q,ee),et=_e.getProgramCacheKey(Qe);let st=te.programs;te.environment=I.isMeshStandardMaterial?q.environment:null,te.fog=q.fog,te.envMap=(I.isMeshStandardMaterial?U:lt).get(I.envMap||te.environment),te.envMapRotation=te.environment!==null&&I.envMap===null?q.environmentRotation:I.envMapRotation,st===void 0&&(I.addEventListener("dispose",Q),st=new Map,te.programs=st);let nt=st.get(et);if(nt!==void 0){if(te.currentProgram===nt&&te.lightsStateVersion===Ye)return Ka(I,Qe),nt}else Qe.uniforms=_e.getUniforms(I),I.onBuild(ee,Qe,M),I.onBeforeCompile(Qe,M),nt=_e.acquireProgram(Qe,et),st.set(et,nt),te.uniforms=Qe.uniforms;const ot=te.uniforms;return(!I.isShaderMaterial&&!I.isRawShaderMaterial||I.clipping===!0)&&(ot.clippingPlanes=Me.uniform),Ka(I,Qe),te.needsLights=Ru(I),te.lightsStateVersion=Ye,te.needsLights&&(ot.ambientLightColor.value=K.state.ambient,ot.lightProbe.value=K.state.probe,ot.directionalLights.value=K.state.directional,ot.directionalLightShadows.value=K.state.directionalShadow,ot.spotLights.value=K.state.spot,ot.spotLightShadows.value=K.state.spotShadow,ot.rectAreaLights.value=K.state.rectArea,ot.ltc_1.value=K.state.rectAreaLTC1,ot.ltc_2.value=K.state.rectAreaLTC2,ot.pointLights.value=K.state.point,ot.pointLightShadows.value=K.state.pointShadow,ot.hemisphereLights.value=K.state.hemi,ot.directionalShadowMap.value=K.state.directionalShadowMap,ot.directionalShadowMatrix.value=K.state.directionalShadowMatrix,ot.spotShadowMap.value=K.state.spotShadowMap,ot.spotLightMatrix.value=K.state.spotLightMatrix,ot.spotLightMap.value=K.state.spotLightMap,ot.pointShadowMap.value=K.state.pointShadowMap,ot.pointShadowMatrix.value=K.state.pointShadowMatrix),te.currentProgram=nt,te.uniformsList=null,nt}function Ja(I){if(I.uniformsList===null){const q=I.currentProgram.getUniforms();I.uniformsList=Gc.seqWithValue(q.seq,I.uniforms)}return I.uniformsList}function Ka(I,q){const ee=Le.get(I);ee.outputColorSpace=q.outputColorSpace,ee.batching=q.batching,ee.instancing=q.instancing,ee.instancingColor=q.instancingColor,ee.instancingMorph=q.instancingMorph,ee.skinning=q.skinning,ee.morphTargets=q.morphTargets,ee.morphNormals=q.morphNormals,ee.morphColors=q.morphColors,ee.morphTargetsCount=q.morphTargetsCount,ee.numClippingPlanes=q.numClippingPlanes,ee.numIntersection=q.numClipIntersection,ee.vertexAlphas=q.vertexAlphas,ee.vertexTangents=q.vertexTangents,ee.toneMapping=q.toneMapping}function bu(I,q,ee,te,K){q.isScene!==!0&&(q=at),ke.resetTextureUnits();const Ie=q.fog,Ye=te.isMeshStandardMaterial?q.environment:null,Qe=L===null?M.outputColorSpace:L.isXRRenderTarget===!0?L.texture.colorSpace:ar,et=(te.isMeshStandardMaterial?U:lt).get(te.envMap||Ye),st=te.vertexColors===!0&&!!ee.attributes.color&&ee.attributes.color.itemSize===4,nt=!!ee.attributes.tangent&&(!!te.normalMap||te.anisotropy>0),ot=!!ee.morphAttributes.position,Bt=!!ee.morphAttributes.normal,mn=!!ee.morphAttributes.color;let Ut=Fi;te.toneMapped&&(L===null||L.isXRRenderTarget===!0)&&(Ut=M.toneMapping);const an=ee.morphAttributes.position||ee.morphAttributes.normal||ee.morphAttributes.color,tt=an!==void 0?an.length:0,Ue=Le.get(te),ni=x.state.lights;if(j===!0&&(de===!0||I!==W)){const gn=I===W&&te.id===F;Me.setState(te,I,gn)}let pt=!1;te.version===Ue.__version?(Ue.needsLights&&Ue.lightsStateVersion!==ni.state.version||Ue.outputColorSpace!==Qe||K.isBatchedMesh&&Ue.batching===!1||!K.isBatchedMesh&&Ue.batching===!0||K.isInstancedMesh&&Ue.instancing===!1||!K.isInstancedMesh&&Ue.instancing===!0||K.isSkinnedMesh&&Ue.skinning===!1||!K.isSkinnedMesh&&Ue.skinning===!0||K.isInstancedMesh&&Ue.instancingColor===!0&&K.instanceColor===null||K.isInstancedMesh&&Ue.instancingColor===!1&&K.instanceColor!==null||K.isInstancedMesh&&Ue.instancingMorph===!0&&K.morphTexture===null||K.isInstancedMesh&&Ue.instancingMorph===!1&&K.morphTexture!==null||Ue.envMap!==et||te.fog===!0&&Ue.fog!==Ie||Ue.numClippingPlanes!==void 0&&(Ue.numClippingPlanes!==Me.numPlanes||Ue.numIntersection!==Me.numIntersection)||Ue.vertexAlphas!==st||Ue.vertexTangents!==nt||Ue.morphTargets!==ot||Ue.morphNormals!==Bt||Ue.morphColors!==mn||Ue.toneMapping!==Ut||ye.isWebGL2===!0&&Ue.morphTargetsCount!==tt)&&(pt=!0):(pt=!0,Ue.__version=te.version);let Wt=Ue.currentProgram;pt===!0&&(Wt=Ts(te,q,K));let Ti=!1,ii=!1,ln=!1;const Zt=Wt.getUniforms(),Ai=Ue.uniforms;if(fe.useProgram(Wt.program)&&(Ti=!0,ii=!0,ln=!0),te.id!==F&&(F=te.id,ii=!0),Ti||W!==I){Zt.setValue(B,"projectionMatrix",I.projectionMatrix),Zt.setValue(B,"viewMatrix",I.matrixWorldInverse);const gn=Zt.map.cameraPosition;gn!==void 0&&gn.setValue(B,Oe.setFromMatrixPosition(I.matrixWorld)),ye.logarithmicDepthBuffer&&Zt.setValue(B,"logDepthBufFC",2/(Math.log(I.far+1)/Math.LN2)),(te.isMeshPhongMaterial||te.isMeshToonMaterial||te.isMeshLambertMaterial||te.isMeshBasicMaterial||te.isMeshStandardMaterial||te.isShaderMaterial)&&Zt.setValue(B,"isOrthographic",I.isOrthographicCamera===!0),W!==I&&(W=I,ii=!0,ln=!0)}if(K.isSkinnedMesh){Zt.setOptional(B,K,"bindMatrix"),Zt.setOptional(B,K,"bindMatrixInverse");const gn=K.skeleton;gn&&(ye.floatVertexTextures?(gn.boneTexture===null&&gn.computeBoneTexture(),Zt.setValue(B,"boneTexture",gn.boneTexture,ke)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}K.isBatchedMesh&&(Zt.setOptional(B,K,"batchingTexture"),Zt.setValue(B,"batchingTexture",K._matricesTexture,ke));const As=ee.morphAttributes;if((As.position!==void 0||As.normal!==void 0||As.color!==void 0&&ye.isWebGL2===!0)&&xe.update(K,ee,Wt),(ii||Ue.receiveShadow!==K.receiveShadow)&&(Ue.receiveShadow=K.receiveShadow,Zt.setValue(B,"receiveShadow",K.receiveShadow)),te.isMeshGouraudMaterial&&te.envMap!==null&&(Ai.envMap.value=et,Ai.flipEnvMap.value=et.isCubeTexture&&et.isRenderTargetTexture===!1?-1:1),ii&&(Zt.setValue(B,"toneMappingExposure",M.toneMappingExposure),Ue.needsLights&&Cu(Ai,ln),Ie&&te.fog===!0&&pe.refreshFogUniforms(Ai,Ie),pe.refreshMaterialUniforms(Ai,te,ce,Z,we),Gc.upload(B,Ja(Ue),Ai,ke)),te.isShaderMaterial&&te.uniformsNeedUpdate===!0&&(Gc.upload(B,Ja(Ue),Ai,ke),te.uniformsNeedUpdate=!1),te.isSpriteMaterial&&Zt.setValue(B,"center",K.center),Zt.setValue(B,"modelViewMatrix",K.modelViewMatrix),Zt.setValue(B,"normalMatrix",K.normalMatrix),Zt.setValue(B,"modelMatrix",K.matrixWorld),te.isShaderMaterial||te.isRawShaderMaterial){const gn=te.uniformsGroups;for(let bs=0,Wn=gn.length;bs<Wn;bs++)if(ye.isWebGL2){const ja=gn[bs];Xe.update(ja,Wt),Xe.bind(ja,Wt)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Wt}function Cu(I,q){I.ambientLightColor.needsUpdate=q,I.lightProbe.needsUpdate=q,I.directionalLights.needsUpdate=q,I.directionalLightShadows.needsUpdate=q,I.pointLights.needsUpdate=q,I.pointLightShadows.needsUpdate=q,I.spotLights.needsUpdate=q,I.spotLightShadows.needsUpdate=q,I.rectAreaLights.needsUpdate=q,I.hemisphereLights.needsUpdate=q}function Ru(I){return I.isMeshLambertMaterial||I.isMeshToonMaterial||I.isMeshPhongMaterial||I.isMeshStandardMaterial||I.isShadowMaterial||I.isShaderMaterial&&I.lights===!0}this.getActiveCubeFace=function(){return N},this.getActiveMipmapLevel=function(){return R},this.getRenderTarget=function(){return L},this.setRenderTargetTextures=function(I,q,ee){Le.get(I.texture).__webglTexture=q,Le.get(I.depthTexture).__webglTexture=ee;const te=Le.get(I);te.__hasExternalTextures=!0,te.__autoAllocateDepthBuffer=ee===void 0,te.__autoAllocateDepthBuffer||ue.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),te.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(I,q){const ee=Le.get(I);ee.__webglFramebuffer=q,ee.__useDefaultFramebuffer=q===void 0},this.setRenderTarget=function(I,q=0,ee=0){L=I,N=q,R=ee;let te=!0,K=null,Ie=!1,Ye=!1;if(I){const et=Le.get(I);et.__useDefaultFramebuffer!==void 0?(fe.bindFramebuffer(B.FRAMEBUFFER,null),te=!1):et.__webglFramebuffer===void 0?ke.setupRenderTarget(I):et.__hasExternalTextures&&ke.rebindTextures(I,Le.get(I.texture).__webglTexture,Le.get(I.depthTexture).__webglTexture);const st=I.texture;(st.isData3DTexture||st.isDataArrayTexture||st.isCompressedArrayTexture)&&(Ye=!0);const nt=Le.get(I).__webglFramebuffer;I.isWebGLCubeRenderTarget?(Array.isArray(nt[q])?K=nt[q][ee]:K=nt[q],Ie=!0):ye.isWebGL2&&I.samples>0&&ke.useMultisampledRTT(I)===!1?K=Le.get(I).__webglMultisampledFramebuffer:Array.isArray(nt)?K=nt[ee]:K=nt,b.copy(I.viewport),P.copy(I.scissor),$=I.scissorTest}else b.copy(J).multiplyScalar(ce).floor(),P.copy(re).multiplyScalar(ce).floor(),$=me;if(fe.bindFramebuffer(B.FRAMEBUFFER,K)&&ye.drawBuffers&&te&&fe.drawBuffers(I,K),fe.viewport(b),fe.scissor(P),fe.setScissorTest($),Ie){const et=Le.get(I.texture);B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_CUBE_MAP_POSITIVE_X+q,et.__webglTexture,ee)}else if(Ye){const et=Le.get(I.texture),st=q||0;B.framebufferTextureLayer(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,et.__webglTexture,ee||0,st)}F=-1},this.readRenderTargetPixels=function(I,q,ee,te,K,Ie,Ye){if(!(I&&I.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Qe=Le.get(I).__webglFramebuffer;if(I.isWebGLCubeRenderTarget&&Ye!==void 0&&(Qe=Qe[Ye]),Qe){fe.bindFramebuffer(B.FRAMEBUFFER,Qe);try{const et=I.texture,st=et.format,nt=et.type;if(st!==Nn&&Je.convert(st)!==B.getParameter(B.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ot=nt===yo&&(ue.has("EXT_color_buffer_half_float")||ye.isWebGL2&&ue.has("EXT_color_buffer_float"));if(nt!==Bi&&Je.convert(nt)!==B.getParameter(B.IMPLEMENTATION_COLOR_READ_TYPE)&&!(nt===jn&&(ye.isWebGL2||ue.has("OES_texture_float")||ue.has("WEBGL_color_buffer_float")))&&!ot){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}q>=0&&q<=I.width-te&&ee>=0&&ee<=I.height-K&&B.readPixels(q,ee,te,K,Je.convert(st),Je.convert(nt),Ie)}finally{const et=L!==null?Le.get(L).__webglFramebuffer:null;fe.bindFramebuffer(B.FRAMEBUFFER,et)}}},this.copyFramebufferToTexture=function(I,q,ee=0){const te=Math.pow(2,-ee),K=Math.floor(q.image.width*te),Ie=Math.floor(q.image.height*te);ke.setTexture2D(q,0),B.copyTexSubImage2D(B.TEXTURE_2D,ee,0,0,I.x,I.y,K,Ie),fe.unbindTexture()},this.copyTextureToTexture=function(I,q,ee,te=0){const K=q.image.width,Ie=q.image.height,Ye=Je.convert(ee.format),Qe=Je.convert(ee.type);ke.setTexture2D(ee,0),B.pixelStorei(B.UNPACK_FLIP_Y_WEBGL,ee.flipY),B.pixelStorei(B.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ee.premultiplyAlpha),B.pixelStorei(B.UNPACK_ALIGNMENT,ee.unpackAlignment),q.isDataTexture?B.texSubImage2D(B.TEXTURE_2D,te,I.x,I.y,K,Ie,Ye,Qe,q.image.data):q.isCompressedTexture?B.compressedTexSubImage2D(B.TEXTURE_2D,te,I.x,I.y,q.mipmaps[0].width,q.mipmaps[0].height,Ye,q.mipmaps[0].data):B.texSubImage2D(B.TEXTURE_2D,te,I.x,I.y,Ye,Qe,q.image),te===0&&ee.generateMipmaps&&B.generateMipmap(B.TEXTURE_2D),fe.unbindTexture()},this.copyTextureToTexture3D=function(I,q,ee,te,K=0){if(M.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ie=Math.round(I.max.x-I.min.x),Ye=Math.round(I.max.y-I.min.y),Qe=I.max.z-I.min.z+1,et=Je.convert(te.format),st=Je.convert(te.type);let nt;if(te.isData3DTexture)ke.setTexture3D(te,0),nt=B.TEXTURE_3D;else if(te.isDataArrayTexture||te.isCompressedArrayTexture)ke.setTexture2DArray(te,0),nt=B.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}B.pixelStorei(B.UNPACK_FLIP_Y_WEBGL,te.flipY),B.pixelStorei(B.UNPACK_PREMULTIPLY_ALPHA_WEBGL,te.premultiplyAlpha),B.pixelStorei(B.UNPACK_ALIGNMENT,te.unpackAlignment);const ot=B.getParameter(B.UNPACK_ROW_LENGTH),Bt=B.getParameter(B.UNPACK_IMAGE_HEIGHT),mn=B.getParameter(B.UNPACK_SKIP_PIXELS),Ut=B.getParameter(B.UNPACK_SKIP_ROWS),an=B.getParameter(B.UNPACK_SKIP_IMAGES),tt=ee.isCompressedTexture?ee.mipmaps[K]:ee.image;B.pixelStorei(B.UNPACK_ROW_LENGTH,tt.width),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,tt.height),B.pixelStorei(B.UNPACK_SKIP_PIXELS,I.min.x),B.pixelStorei(B.UNPACK_SKIP_ROWS,I.min.y),B.pixelStorei(B.UNPACK_SKIP_IMAGES,I.min.z),ee.isDataTexture||ee.isData3DTexture?B.texSubImage3D(nt,K,q.x,q.y,q.z,Ie,Ye,Qe,et,st,tt.data):te.isCompressedArrayTexture?B.compressedTexSubImage3D(nt,K,q.x,q.y,q.z,Ie,Ye,Qe,et,tt.data):B.texSubImage3D(nt,K,q.x,q.y,q.z,Ie,Ye,Qe,et,st,tt),B.pixelStorei(B.UNPACK_ROW_LENGTH,ot),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,Bt),B.pixelStorei(B.UNPACK_SKIP_PIXELS,mn),B.pixelStorei(B.UNPACK_SKIP_ROWS,Ut),B.pixelStorei(B.UNPACK_SKIP_IMAGES,an),K===0&&te.generateMipmaps&&B.generateMipmap(nt),fe.unbindTexture()},this.initTexture=function(I){I.isCubeTexture?ke.setTextureCube(I,0):I.isData3DTexture?ke.setTexture3D(I,0):I.isDataArrayTexture||I.isCompressedArrayTexture?ke.setTexture2DArray(I,0):ke.setTexture2D(I,0),fe.unbindTexture()},this.resetState=function(){N=0,R=0,L=null,fe.reset(),We.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Oi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===ru?"display-p3":"srgb",t.unpackColorSpace=Ct.workingColorSpace===za?"display-p3":"srgb"}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class tv extends Wd{}tv.prototype.isWebGL1Renderer=!0;class au{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ne(e),this.density=t}clone(){return new au(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class lu{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Ne(e),this.near=t,this.far=n}clone(){return new lu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Kc extends At{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new ei,this.environmentRotation=new ei,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class cu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=ba,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=$n()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return V_("THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=$n()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=$n()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Ln=new D;class vs{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Ln.fromBufferAttribute(this,t),Ln.applyMatrix4(e),this.setXYZ(t,Ln.x,Ln.y,Ln.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ln.fromBufferAttribute(this,t),Ln.applyNormalMatrix(e),this.setXYZ(t,Ln.x,Ln.y,Ln.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ln.fromBufferAttribute(this,t),Ln.transformDirection(e),this.setXYZ(t,Ln.x,Ln.y,Ln.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Dn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=dt(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=dt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=dt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=dt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=dt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Dn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Dn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Dn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Dn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array),i=dt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=dt(t,this.array),n=dt(n,this.array),i=dt(i,this.array),s=dt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Lt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new vs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Xd extends vn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ne(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let to;const ta=new D,no=new D,io=new D,ro=new he,na=new he,nv=new $e,hc=new D,ia=new D,fc=new D,Pg=new he,of=new he,Lg=new he;class iv extends At{constructor(e=new Xd){if(super(),this.isSprite=!0,this.type="Sprite",to===void 0){to=new gt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new cu(t,5);to.setIndex([0,1,2,0,2,3]),to.setAttribute("position",new vs(n,3,0,!1)),to.setAttribute("uv",new vs(n,2,3,!1))}this.geometry=to,this.material=e,this.center=new he(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),no.setFromMatrixScale(this.matrixWorld),nv.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),io.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&no.multiplyScalar(-io.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const l=this.center;dc(hc.set(-.5,-.5,0),io,l,no,i,s),dc(ia.set(.5,-.5,0),io,l,no,i,s),dc(fc.set(.5,.5,0),io,l,no,i,s),Pg.set(0,0),of.set(1,0),Lg.set(1,1);let c=e.ray.intersectTriangle(hc,ia,fc,!1,ta);if(c===null&&(dc(ia.set(-.5,.5,0),io,l,no,i,s),of.set(0,1),c=e.ray.intersectTriangle(hc,fc,ia,!1,ta),c===null))return;const u=e.ray.origin.distanceTo(ta);u<e.near||u>e.far||t.push({distance:u,point:ta.clone(),uv:Qn.getInterpolation(ta,hc,ia,fc,Pg,of,Lg,new he),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function dc(r,e,t,n,i,s){ro.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(na.x=s*ro.x-i*ro.y,na.y=i*ro.x+s*ro.y):na.copy(ro),r.copy(e),r.x+=na.x,r.y+=na.y,r.applyMatrix4(nv)}const pc=new D,Ig=new D;class rv extends At{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){pc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(pc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){pc.setFromMatrixPosition(e.matrixWorld),Ig.setFromMatrixPosition(this.matrixWorld);const n=pc.distanceTo(Ig)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let l=t[i].distance;if(t[i].object.visible&&(l-=l*t[i].hysteresis),n>=l)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const l=n[i];t.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return t}}const Ng=new D,Dg=new Rt,Ug=new Rt,gT=new D,Og=new $e,mc=new D,af=new bn,Fg=new $e,lf=new To;class sv extends nn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Uf,this.bindMatrix=new $e,this.bindMatrixInverse=new $e,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new On),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,mc),this.boundingBox.expandByPoint(mc)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new bn),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,mc),this.boundingSphere.expandByPoint(mc)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),af.copy(this.boundingSphere),af.applyMatrix4(i),e.ray.intersectsSphere(af)!==!1&&(Fg.copy(i).invert(),lf.copy(e.ray).applyMatrix4(Fg),!(this.boundingBox!==null&&lf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,lf)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Rt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Uf?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===y_?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;Dg.fromBufferAttribute(i.attributes.skinIndex,e),Ug.fromBufferAttribute(i.attributes.skinWeight,e),Ng.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const l=Ug.getComponent(s);if(l!==0){const c=Dg.getComponent(s);Og.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(gT.copy(Ng).applyMatrix4(Og),l)}}return t.applyMatrix4(this.bindMatrixInverse)}}class qd extends At{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Pr extends Vt{constructor(e=null,t=1,n=1,i,s,l,c,u,h=jt,d=jt,p,m){super(null,l,c,u,h,d,i,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Bg=new $e,_T=new $e;class uu{constructor(e=[],t=[]){this.uuid=$n(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new $e)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new $e;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,l=e.length;s<l;s++){const c=e[s]?e[s].matrixWorld:_T;Bg.multiplyMatrices(c,t[s]),Bg.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new uu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Pr(t,e,e,Nn,jn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let l=t[s];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),l=new qd),this.bones.push(l),this.boneInverses.push(new $e().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const l=t[i];e.bones.push(l.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class Mo extends Lt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const so=new $e,zg=new $e,gc=[],kg=new On,vT=new $e,ra=new nn,sa=new bn;class ov extends nn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Mo(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,vT)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new On),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,so),kg.copy(e.boundingBox).applyMatrix4(so),this.boundingBox.union(kg)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new bn),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,so),sa.copy(e.boundingSphere).applyMatrix4(so),this.boundingSphere.union(sa)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,s=n.length+1,l=e*s+1;for(let c=0;c<n.length;c++)n[c]=i[l+c]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(ra.geometry=this.geometry,ra.material=this.material,ra.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),sa.copy(this.boundingSphere),sa.applyMatrix4(n),e.ray.intersectsSphere(sa)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,so),zg.multiplyMatrices(n,so),ra.matrixWorld=zg,ra.raycast(e,gc);for(let l=0,c=gc.length;l<c;l++){const u=gc[l];u.instanceId=s,u.object=this,t.push(u)}gc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Mo(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new Pr(new Float32Array(i*this.count),i,this.count,Ad,jn));const s=this.morphTexture.source.data.data;let l=0;for(let h=0;h<n.length;h++)l+=n[h];const c=this.geometry.morphTargetsRelative?1:1-l,u=i*e;s[u]=c,s.set(n,u+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}function yT(r,e){return r.z-e.z}function xT(r,e){return e.z-r.z}class ST{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t){const n=this.pool,i=this.list;this.index>=n.length&&n.push({start:-1,count:-1,z:-1});const s=n[this.index];i.push(s),this.index++,s.start=e.start,s.count=e.count,s.z=t}reset(){this.list.length=0,this.index=0}}const oo="batchId",wr=new $e,Hg=new $e,MT=new $e,Vg=new $e,cf=new Va,_c=new On,Qr=new bn,oa=new D,uf=new ST,Tn=new nn,vc=[];function ET(r,e,t=0){const n=e.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==e.array.constructor){const i=r.count;for(let s=0;s<i;s++)for(let l=0;l<n;l++)e.setComponent(s+t,l,r.getComponent(s,l))}else e.array.set(r.array,t*n);e.needsUpdate=!0}class av extends nn{get maxGeometryCount(){return this._maxGeometryCount}constructor(e,t,n=t*2,i){super(new gt,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawRanges=[],this._reservedRanges=[],this._visibility=[],this._active=[],this._bounds=[],this._maxGeometryCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._visibilityChanged=!0,this._matricesTexture=null,this._initMatricesTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxGeometryCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new Pr(t,e,e,Nn,jn);this._matricesTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxGeometryCount,s=this._maxIndexCount;if(this._geometryInitialized===!1){for(const c in e.attributes){const u=e.getAttribute(c),{array:h,itemSize:d,normalized:p}=u,m=new h.constructor(n*d),_=new u.constructor(m,d,p);_.setUsage(u.usage),t.setAttribute(c,_)}if(e.getIndex()!==null){const c=n>65536?new Uint32Array(s):new Uint16Array(s);t.setIndex(new Lt(c,1))}const l=i>65536?new Uint32Array(n):new Uint16Array(n);t.setAttribute(oo,new Lt(l,1)),this._geometryInitialized=!0}}_validateGeometry(e){if(e.getAttribute(oo))throw new Error(`BatchedMesh: Geometry cannot use attribute "${oo}"`);const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(n===oo)continue;if(!e.hasAttribute(n))throw new Error(`BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),s=t.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new On);const e=this._geometryCount,t=this.boundingBox,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,wr),this.getBoundingBoxAt(i,_c).applyMatrix4(wr),t.union(_c))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new bn);const e=this._geometryCount,t=this.boundingSphere,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,wr),this.getBoundingSphereAt(i,Qr).applyMatrix4(wr),t.union(Qr))}addGeometry(e,t=-1,n=-1){if(this._initializeGeometry(e),this._validateGeometry(e),this._geometryCount>=this._maxGeometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");const i={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let s=null;const l=this._reservedRanges,c=this._drawRanges,u=this._bounds;this._geometryCount!==0&&(s=l[l.length-1]),t===-1?i.vertexCount=e.getAttribute("position").count:i.vertexCount=t,s===null?i.vertexStart=0:i.vertexStart=s.vertexStart+s.vertexCount;const h=e.getIndex(),d=h!==null;if(d&&(n===-1?i.indexCount=h.count:i.indexCount=n,s===null?i.indexStart=0:i.indexStart=s.indexStart+s.indexCount),i.indexStart!==-1&&i.indexStart+i.indexCount>this._maxIndexCount||i.vertexStart+i.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const p=this._visibility,m=this._active,_=this._matricesTexture,y=this._matricesTexture.image.data;p.push(!0),m.push(!0);const E=this._geometryCount;this._geometryCount++,MT.toArray(y,E*16),_.needsUpdate=!0,l.push(i),c.push({start:d?i.indexStart:i.vertexStart,count:-1}),u.push({boxInitialized:!1,box:new On,sphereInitialized:!1,sphere:new bn});const x=this.geometry.getAttribute(oo);for(let v=0;v<i.vertexCount;v++)x.setX(i.vertexStart+v,E);return x.needsUpdate=!0,this.setGeometryAt(E,e),E}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,s=n.getIndex(),l=t.getIndex(),c=this._reservedRanges[e];if(i&&l.count>c.indexCount||t.attributes.position.count>c.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const u=c.vertexStart,h=c.vertexCount;for(const _ in n.attributes){if(_===oo)continue;const y=t.getAttribute(_),E=n.getAttribute(_);ET(y,E,u);const x=y.itemSize;for(let v=y.count,w=h;v<w;v++){const M=u+v;for(let A=0;A<x;A++)E.setComponent(M,A,0)}E.needsUpdate=!0}if(i){const _=c.indexStart;for(let y=0;y<l.count;y++)s.setX(_+y,u+l.getX(y));for(let y=l.count,E=c.indexCount;y<E;y++)s.setX(_+y,u);s.needsUpdate=!0}const d=this._bounds[e];t.boundingBox!==null?(d.box.copy(t.boundingBox),d.boxInitialized=!0):d.boxInitialized=!1,t.boundingSphere!==null?(d.sphere.copy(t.boundingSphere),d.sphereInitialized=!0):d.sphereInitialized=!1;const p=this._drawRanges[e],m=t.getAttribute("position");return p.count=i?l.count:m.count,this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._active;return e>=t.length||t[e]===!1?this:(t[e]=!1,this._visibilityChanged=!0,this)}getBoundingBoxAt(e,t){if(this._active[e]===!1)return null;const i=this._bounds[e],s=i.box,l=this.geometry;if(i.boxInitialized===!1){s.makeEmpty();const c=l.index,u=l.attributes.position,h=this._drawRanges[e];for(let d=h.start,p=h.start+h.count;d<p;d++){let m=d;c&&(m=c.getX(m)),s.expandByPoint(oa.fromBufferAttribute(u,m))}i.boxInitialized=!0}return t.copy(s),t}getBoundingSphereAt(e,t){if(this._active[e]===!1)return null;const i=this._bounds[e],s=i.sphere,l=this.geometry;if(i.sphereInitialized===!1){s.makeEmpty(),this.getBoundingBoxAt(e,_c),_c.getCenter(s.center);const c=l.index,u=l.attributes.position,h=this._drawRanges[e];let d=0;for(let p=h.start,m=h.start+h.count;p<m;p++){let _=p;c&&(_=c.getX(_)),oa.fromBufferAttribute(u,_),d=Math.max(d,s.center.distanceToSquared(oa))}s.radius=Math.sqrt(d),i.sphereInitialized=!0}return t.copy(s),t}setMatrixAt(e,t){const n=this._active,i=this._matricesTexture,s=this._matricesTexture.image.data,l=this._geometryCount;return e>=l||n[e]===!1?this:(t.toArray(s,e*16),i.needsUpdate=!0,this)}getMatrixAt(e,t){const n=this._active,i=this._matricesTexture.image.data,s=this._geometryCount;return e>=s||n[e]===!1?null:t.fromArray(i,e*16)}setVisibleAt(e,t){const n=this._visibility,i=this._active,s=this._geometryCount;return e>=s||i[e]===!1||n[e]===t?this:(n[e]=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._visibility,n=this._active,i=this._geometryCount;return e>=i||n[e]===!1?!1:t[e]}raycast(e,t){const n=this._visibility,i=this._active,s=this._drawRanges,l=this._geometryCount,c=this.matrixWorld,u=this.geometry;Tn.material=this.material,Tn.geometry.index=u.index,Tn.geometry.attributes=u.attributes,Tn.geometry.boundingBox===null&&(Tn.geometry.boundingBox=new On),Tn.geometry.boundingSphere===null&&(Tn.geometry.boundingSphere=new bn);for(let h=0;h<l;h++){if(!n[h]||!i[h])continue;const d=s[h];Tn.geometry.setDrawRange(d.start,d.count),this.getMatrixAt(h,Tn.matrixWorld).premultiply(c),this.getBoundingBoxAt(h,Tn.geometry.boundingBox),this.getBoundingSphereAt(h,Tn.geometry.boundingSphere),Tn.raycast(e,vc);for(let p=0,m=vc.length;p<m;p++){const _=vc[p];_.object=this,_.batchId=h,t.push(_)}vc.length=0}Tn.material=null,Tn.geometry.index=null,Tn.geometry.attributes={},Tn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._drawRanges=e._drawRanges.map(t=>({...t})),this._reservedRanges=e._reservedRanges.map(t=>({...t})),this._visibility=e._visibility.slice(),this._active=e._active.slice(),this._bounds=e._bounds.map(t=>({boxInitialized:t.boxInitialized,box:t.box.clone(),sphereInitialized:t.sphereInitialized,sphere:t.sphere.clone()})),this._maxGeometryCount=e._maxGeometryCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.slice(),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this}onBeforeRender(e,t,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,u=this._active,h=this._visibility,d=this._multiDrawStarts,p=this._multiDrawCounts,m=this._drawRanges,_=this.perObjectFrustumCulled;_&&(Vg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),cf.setFromProjectionMatrix(Vg,e.coordinateSystem));let y=0;if(this.sortObjects){Hg.copy(this.matrixWorld).invert(),oa.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Hg);for(let v=0,w=h.length;v<w;v++)if(h[v]&&u[v]){this.getMatrixAt(v,wr),this.getBoundingSphereAt(v,Qr).applyMatrix4(wr);let M=!1;if(_&&(M=!cf.intersectsSphere(Qr)),!M){const A=oa.distanceTo(Qr.center);uf.push(m[v],A)}}const E=uf.list,x=this.customSort;x===null?E.sort(s.transparent?xT:yT):x.call(this,E,n);for(let v=0,w=E.length;v<w;v++){const M=E[v];d[y]=M.start*c,p[y]=M.count,y++}uf.reset()}else for(let E=0,x=h.length;E<x;E++)if(h[E]&&u[E]){let v=!1;if(_&&(this.getMatrixAt(E,wr),this.getBoundingSphereAt(E,Qr).applyMatrix4(wr),v=!cf.intersectsSphere(Qr)),!v){const w=m[E];d[y]=w.start*c,p[y]=w.count,y++}}this._multiDrawCount=y,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,s,l){this.onBeforeRender(e,null,i,s,l)}}class Fn extends vn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ne(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Gg=new D,Wg=new D,Xg=new $e,hf=new To,yc=new bn;class Ir extends At{constructor(e=new gt,t=new Fn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)Gg.fromBufferAttribute(t,i-1),Wg.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Gg.distanceTo(Wg);e.setAttribute("lineDistance",new Ve(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),yc.copy(n.boundingSphere),yc.applyMatrix4(i),yc.radius+=s,e.ray.intersectsSphere(yc)===!1)return;Xg.copy(i).invert(),hf.copy(e.ray).applyMatrix4(Xg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new D,d=new D,p=new D,m=new D,_=this.isLineSegments?2:1,y=n.index,x=n.attributes.position;if(y!==null){const v=Math.max(0,l.start),w=Math.min(y.count,l.start+l.count);for(let M=v,A=w-1;M<A;M+=_){const N=y.getX(M),R=y.getX(M+1);if(h.fromBufferAttribute(x,N),d.fromBufferAttribute(x,R),hf.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const F=e.ray.origin.distanceTo(m);F<e.near||F>e.far||t.push({distance:F,point:p.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,l.start),w=Math.min(x.count,l.start+l.count);for(let M=v,A=w-1;M<A;M+=_){if(h.fromBufferAttribute(x,M),d.fromBufferAttribute(x,M+1),hf.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const R=e.ray.origin.distanceTo(m);R<e.near||R>e.far||t.push({distance:R,point:p.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const qg=new D,Yg=new D;class ki extends Ir{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)qg.fromBufferAttribute(t,i),Yg.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+qg.distanceTo(Yg);e.setAttribute("lineDistance",new Ve(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class lv extends Ir{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Yd extends vn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ne(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Zg=new $e,fd=new To,xc=new bn,Sc=new D;class cv extends At{constructor(e=new gt,t=new Yd){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),xc.copy(n.boundingSphere),xc.applyMatrix4(i),xc.radius+=s,e.ray.intersectsSphere(xc)===!1)return;Zg.copy(i).invert(),fd.copy(e.ray).applyMatrix4(Zg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,l.start),_=Math.min(h.count,l.start+l.count);for(let y=m,E=_;y<E;y++){const x=h.getX(y);Sc.fromBufferAttribute(p,x),Jg(Sc,x,u,i,e,t,this)}}else{const m=Math.max(0,l.start),_=Math.min(p.count,l.start+l.count);for(let y=m,E=_;y<E;y++)Sc.fromBufferAttribute(p,y),Jg(Sc,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function Jg(r,e,t,n,i,s,l){const c=fd.distanceSqToPoint(r);if(c<t){const u=new D;fd.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:l})}}class wT extends Vt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isVideoTexture=!0,this.minFilter=l!==void 0?l:kt,this.magFilter=s!==void 0?s:kt,this.generateMipmaps=!1;const d=this;function p(){d.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class TT extends Vt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=jt,this.minFilter=jt,this.generateMipmaps=!1,this.needsUpdate=!0}}class hu extends Vt{constructor(e,t,n,i,s,l,c,u,h,d,p,m){super(null,l,c,u,h,d,i,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class AT extends hu{constructor(e,t,n,i,s,l){super(e,t,n,s,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=An}}class bT extends hu{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,sr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class CT extends Vt{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Ei{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let l=1;l<=e;l++)n=this.getPoint(l/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let l;t?l=t:l=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-l,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===l)return i/(s-1);const d=n[i],m=n[i+1]-d,_=(l-d)/m;return(i+_)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const l=this.getPoint(i),c=this.getPoint(s),u=t||(l.isVector2?new he:new D);return u.copy(c).sub(l).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new D,i=[],s=[],l=[],c=new D,u=new $e;for(let _=0;_<=e;_++){const y=_/e;i[_]=this.getTangentAt(y,new D)}s[0]=new D,l[0]=new D;let h=Number.MAX_VALUE;const d=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);d<=h&&(h=d,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),l[0].crossVectors(i[0],s[0]);for(let _=1;_<=e;_++){if(s[_]=s[_-1].clone(),l[_]=l[_-1].clone(),c.crossVectors(i[_-1],i[_]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(Yt(i[_-1].dot(i[_]),-1,1));s[_].applyMatrix4(u.makeRotationAxis(c,y))}l[_].crossVectors(i[_],s[_])}if(t===!0){let _=Math.acos(Yt(s[0].dot(s[e]),-1,1));_/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(_=-_);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(i[y],_*y)),l[y].crossVectors(i[y],s[y])}return{tangents:i,normals:s,binormals:l}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class fu extends Ei{constructor(e=0,t=0,n=1,i=1,s=0,l=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=l,this.aClockwise=c,this.aRotation=u}getPoint(e,t=new he){const n=t,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const l=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(l?s=0:s=i),this.aClockwise===!0&&!l&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const d=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,_=h-this.aY;u=m*d-_*p+this.aX,h=m*p+_*d+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class uv extends fu{constructor(e,t,n,i,s,l){super(e,t,n,n,i,s,l),this.isArcCurve=!0,this.type="ArcCurve"}}function Zd(){let r=0,e=0,t=0,n=0;function i(s,l,c,u){r=s,e=c,t=-3*s+3*l-2*c-u,n=2*s-2*l+c+u}return{initCatmullRom:function(s,l,c,u,h){i(l,c,h*(c-s),h*(u-l))},initNonuniformCatmullRom:function(s,l,c,u,h,d,p){let m=(l-s)/h-(c-s)/(h+d)+(c-l)/d,_=(c-l)/d-(u-l)/(d+p)+(u-c)/p;m*=d,_*=d,i(l,c,m,_)},calc:function(s){const l=s*s,c=l*s;return r+e*s+t*l+n*c}}}const Mc=new D,ff=new Zd,df=new Zd,pf=new Zd;class hv extends Ei{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new D){const n=t,i=this.points,s=i.length,l=(s-(this.closed?0:1))*e;let c=Math.floor(l),u=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,d;this.closed||c>0?h=i[(c-1)%s]:(Mc.subVectors(i[0],i[1]).add(i[0]),h=Mc);const p=i[c%s],m=i[(c+1)%s];if(this.closed||c+2<s?d=i[(c+2)%s]:(Mc.subVectors(i[s-1],i[s-2]).add(i[s-1]),d=Mc),this.curveType==="centripetal"||this.curveType==="chordal"){const _=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),_),E=Math.pow(p.distanceToSquared(m),_),x=Math.pow(m.distanceToSquared(d),_);E<1e-4&&(E=1),y<1e-4&&(y=E),x<1e-4&&(x=E),ff.initNonuniformCatmullRom(h.x,p.x,m.x,d.x,y,E,x),df.initNonuniformCatmullRom(h.y,p.y,m.y,d.y,y,E,x),pf.initNonuniformCatmullRom(h.z,p.z,m.z,d.z,y,E,x)}else this.curveType==="catmullrom"&&(ff.initCatmullRom(h.x,p.x,m.x,d.x,this.tension),df.initCatmullRom(h.y,p.y,m.y,d.y,this.tension),pf.initCatmullRom(h.z,p.z,m.z,d.z,this.tension));return n.set(ff.calc(u),df.calc(u),pf.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new D().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Kg(r,e,t,n,i){const s=(n-e)*.5,l=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+l)*u+(-3*t+3*n-2*s-l)*c+s*r+t}function RT(r,e){const t=1-r;return t*t*e}function PT(r,e){return 2*(1-r)*r*e}function LT(r,e){return r*r*e}function pa(r,e,t,n){return RT(r,e)+PT(r,t)+LT(r,n)}function IT(r,e){const t=1-r;return t*t*t*e}function NT(r,e){const t=1-r;return 3*t*t*r*e}function DT(r,e){return 3*(1-r)*r*r*e}function UT(r,e){return r*r*r*e}function ma(r,e,t,n,i){return IT(r,e)+NT(r,t)+DT(r,n)+UT(r,i)}class Jd extends Ei{constructor(e=new he,t=new he,n=new he,i=new he){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new he){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(ma(e,i.x,s.x,l.x,c.x),ma(e,i.y,s.y,l.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class fv extends Ei{constructor(e=new D,t=new D,n=new D,i=new D){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(ma(e,i.x,s.x,l.x,c.x),ma(e,i.y,s.y,l.y,c.y),ma(e,i.z,s.z,l.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Kd extends Ei{constructor(e=new he,t=new he){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new he){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new he){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class dv extends Ei{constructor(e=new D,t=new D){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new D){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new D){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class jd extends Ei{constructor(e=new he,t=new he,n=new he){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new he){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(pa(e,i.x,s.x,l.x),pa(e,i.y,s.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Qd extends Ei{constructor(e=new D,t=new D,n=new D){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(pa(e,i.x,s.x,l.x),pa(e,i.y,s.y,l.y),pa(e,i.z,s.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class $d extends Ei{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new he){const n=t,i=this.points,s=(i.length-1)*e,l=Math.floor(s),c=s-l,u=i[l===0?l:l-1],h=i[l],d=i[l>i.length-2?i.length-1:l+1],p=i[l>i.length-3?i.length-1:l+2];return n.set(Kg(c,u.x,h.x,d.x,p.x),Kg(c,u.y,h.y,d.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new he().fromArray(i))}return this}}var jc=Object.freeze({__proto__:null,ArcCurve:uv,CatmullRomCurve3:hv,CubicBezierCurve:Jd,CubicBezierCurve3:fv,EllipseCurve:fu,LineCurve:Kd,LineCurve3:dv,QuadraticBezierCurve:jd,QuadraticBezierCurve3:Qd,SplineCurve:$d});class pv extends Ei{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new jc[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const l=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-l/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const l=s[i],c=l.isEllipseCurve?e*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?e*l.points.length:e,u=l.getPoints(c);for(let h=0;h<u.length;h++){const d=u[h];n&&n.equals(d)||(t.push(d),n=d)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new jc[i.type]().fromJSON(i))}return this}}class Pa extends pv{constructor(e){super(),this.type="Path",this.currentPoint=new he,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Kd(this.currentPoint.clone(),new he(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new jd(this.currentPoint.clone(),new he(e,t),new he(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,l){const c=new Jd(this.currentPoint.clone(),new he(e,t),new he(n,i),new he(s,l));return this.curves.push(c),this.currentPoint.set(s,l),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new $d(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,l),this}absarc(e,t,n,i,s,l){return this.absellipse(e,t,n,n,i,s,l),this}ellipse(e,t,n,i,s,l,c,u){const h=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+h,t+d,n,i,s,l,c,u),this}absellipse(e,t,n,i,s,l,c,u){const h=new fu(e,t,n,i,s,l,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const d=h.getPoint(1);return this.currentPoint.copy(d),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Wa extends gt{constructor(e=[new he(0,-.5),new he(.5,0),new he(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Yt(i,0,Math.PI*2);const s=[],l=[],c=[],u=[],h=[],d=1/t,p=new D,m=new he,_=new D,y=new D,E=new D;let x=0,v=0;for(let w=0;w<=e.length-1;w++)switch(w){case 0:x=e[w+1].x-e[w].x,v=e[w+1].y-e[w].y,_.x=v*1,_.y=-x,_.z=v*0,E.copy(_),_.normalize(),u.push(_.x,_.y,_.z);break;case e.length-1:u.push(E.x,E.y,E.z);break;default:x=e[w+1].x-e[w].x,v=e[w+1].y-e[w].y,_.x=v*1,_.y=-x,_.z=v*0,y.copy(_),_.x+=E.x,_.y+=E.y,_.z+=E.z,_.normalize(),u.push(_.x,_.y,_.z),E.copy(y)}for(let w=0;w<=t;w++){const M=n+w*d*i,A=Math.sin(M),N=Math.cos(M);for(let R=0;R<=e.length-1;R++){p.x=e[R].x*A,p.y=e[R].y,p.z=e[R].x*N,l.push(p.x,p.y,p.z),m.x=w/t,m.y=R/(e.length-1),c.push(m.x,m.y);const L=u[3*R+0]*A,F=u[3*R+1],W=u[3*R+0]*N;h.push(L,F,W)}}for(let w=0;w<t;w++)for(let M=0;M<e.length-1;M++){const A=M+w*e.length,N=A,R=A+e.length,L=A+e.length+1,F=A+1;s.push(N,R,F),s.push(L,F,R)}this.setIndex(s),this.setAttribute("position",new Ve(l,3)),this.setAttribute("uv",new Ve(c,2)),this.setAttribute("normal",new Ve(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Wa(e.points,e.segments,e.phiStart,e.phiLength)}}class du extends Wa{constructor(e=1,t=1,n=4,i=8){const s=new Pa;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new du(e.radius,e.length,e.capSegments,e.radialSegments)}}class pu extends gt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],l=[],c=[],u=[],h=new D,d=new he;l.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const _=n+p/t*i;h.x=e*Math.cos(_),h.y=e*Math.sin(_),l.push(h.x,h.y,h.z),c.push(0,0,1),d.x=(l[m]/e+1)/2,d.y=(l[m+1]/e+1)/2,u.push(d.x,d.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new Ve(l,3)),this.setAttribute("normal",new Ve(c,3)),this.setAttribute("uv",new Ve(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new pu(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Co extends gt{constructor(e=1,t=1,n=1,i=32,s=1,l=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:l,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const d=[],p=[],m=[],_=[];let y=0;const E=[],x=n/2;let v=0;w(),l===!1&&(e>0&&M(!0),t>0&&M(!1)),this.setIndex(d),this.setAttribute("position",new Ve(p,3)),this.setAttribute("normal",new Ve(m,3)),this.setAttribute("uv",new Ve(_,2));function w(){const A=new D,N=new D;let R=0;const L=(t-e)/n;for(let F=0;F<=s;F++){const W=[],b=F/s,P=b*(t-e)+e;for(let $=0;$<=i;$++){const ae=$/i,z=ae*u+c,ie=Math.sin(z),Z=Math.cos(z);N.x=P*ie,N.y=-b*n+x,N.z=P*Z,p.push(N.x,N.y,N.z),A.set(ie,L,Z).normalize(),m.push(A.x,A.y,A.z),_.push(ae,1-b),W.push(y++)}E.push(W)}for(let F=0;F<i;F++)for(let W=0;W<s;W++){const b=E[W][F],P=E[W+1][F],$=E[W+1][F+1],ae=E[W][F+1];d.push(b,P,ae),d.push(P,$,ae),R+=6}h.addGroup(v,R,0),v+=R}function M(A){const N=y,R=new he,L=new D;let F=0;const W=A===!0?e:t,b=A===!0?1:-1;for(let $=1;$<=i;$++)p.push(0,x*b,0),m.push(0,b,0),_.push(.5,.5),y++;const P=y;for(let $=0;$<=i;$++){const z=$/i*u+c,ie=Math.cos(z),Z=Math.sin(z);L.x=W*Z,L.y=x*b,L.z=W*ie,p.push(L.x,L.y,L.z),m.push(0,b,0),R.x=ie*.5+.5,R.y=Z*.5*b+.5,_.push(R.x,R.y),y++}for(let $=0;$<i;$++){const ae=N+$,z=P+$;A===!0?d.push(z,z+1,ae):d.push(z+1,z,ae),F+=3}h.addGroup(v,F,A===!0?1:2),v+=F}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Co(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class mu extends Co{constructor(e=1,t=1,n=32,i=1,s=!1,l=0,c=Math.PI*2){super(0,e,t,n,i,s,l,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:l,thetaLength:c}}static fromJSON(e){return new mu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ur extends gt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],l=[];c(i),h(n),d(),this.setAttribute("position",new Ve(s,3)),this.setAttribute("normal",new Ve(s.slice(),3)),this.setAttribute("uv",new Ve(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(w){const M=new D,A=new D,N=new D;for(let R=0;R<t.length;R+=3)_(t[R+0],M),_(t[R+1],A),_(t[R+2],N),u(M,A,N,w)}function u(w,M,A,N){const R=N+1,L=[];for(let F=0;F<=R;F++){L[F]=[];const W=w.clone().lerp(A,F/R),b=M.clone().lerp(A,F/R),P=R-F;for(let $=0;$<=P;$++)$===0&&F===R?L[F][$]=W:L[F][$]=W.clone().lerp(b,$/P)}for(let F=0;F<R;F++)for(let W=0;W<2*(R-F)-1;W++){const b=Math.floor(W/2);W%2===0?(m(L[F][b+1]),m(L[F+1][b]),m(L[F][b])):(m(L[F][b+1]),m(L[F+1][b+1]),m(L[F+1][b]))}}function h(w){const M=new D;for(let A=0;A<s.length;A+=3)M.x=s[A+0],M.y=s[A+1],M.z=s[A+2],M.normalize().multiplyScalar(w),s[A+0]=M.x,s[A+1]=M.y,s[A+2]=M.z}function d(){const w=new D;for(let M=0;M<s.length;M+=3){w.x=s[M+0],w.y=s[M+1],w.z=s[M+2];const A=x(w)/2/Math.PI+.5,N=v(w)/Math.PI+.5;l.push(A,1-N)}y(),p()}function p(){for(let w=0;w<l.length;w+=6){const M=l[w+0],A=l[w+2],N=l[w+4],R=Math.max(M,A,N),L=Math.min(M,A,N);R>.9&&L<.1&&(M<.2&&(l[w+0]+=1),A<.2&&(l[w+2]+=1),N<.2&&(l[w+4]+=1))}}function m(w){s.push(w.x,w.y,w.z)}function _(w,M){const A=w*3;M.x=e[A+0],M.y=e[A+1],M.z=e[A+2]}function y(){const w=new D,M=new D,A=new D,N=new D,R=new he,L=new he,F=new he;for(let W=0,b=0;W<s.length;W+=9,b+=6){w.set(s[W+0],s[W+1],s[W+2]),M.set(s[W+3],s[W+4],s[W+5]),A.set(s[W+6],s[W+7],s[W+8]),R.set(l[b+0],l[b+1]),L.set(l[b+2],l[b+3]),F.set(l[b+4],l[b+5]),N.copy(w).add(M).add(A).divideScalar(3);const P=x(N);E(R,b+0,w,P),E(L,b+2,M,P),E(F,b+4,A,P)}}function E(w,M,A,N){N<0&&w.x===1&&(l[M]=w.x-1),A.x===0&&A.z===0&&(l[M]=N/2/Math.PI+.5)}function x(w){return Math.atan2(w.z,-w.x)}function v(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ur(e.vertices,e.indices,e.radius,e.details)}}class gu extends Ur{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,l,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new gu(e.radius,e.detail)}}const Ec=new D,wc=new D,mf=new D,Tc=new Qn;class mv extends gt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(ps*t),l=e.getIndex(),c=e.getAttribute("position"),u=l?l.count:c.count,h=[0,0,0],d=["a","b","c"],p=new Array(3),m={},_=[];for(let y=0;y<u;y+=3){l?(h[0]=l.getX(y),h[1]=l.getX(y+1),h[2]=l.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:E,b:x,c:v}=Tc;if(E.fromBufferAttribute(c,h[0]),x.fromBufferAttribute(c,h[1]),v.fromBufferAttribute(c,h[2]),Tc.getNormal(mf),p[0]=`${Math.round(E.x*i)},${Math.round(E.y*i)},${Math.round(E.z*i)}`,p[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[2]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let w=0;w<3;w++){const M=(w+1)%3,A=p[w],N=p[M],R=Tc[d[w]],L=Tc[d[M]],F=`${A}_${N}`,W=`${N}_${A}`;W in m&&m[W]?(mf.dot(m[W].normal)<=s&&(_.push(R.x,R.y,R.z),_.push(L.x,L.y,L.z)),m[W]=null):F in m||(m[F]={index0:h[w],index1:h[M],normal:mf.clone()})}}for(const y in m)if(m[y]){const{index0:E,index1:x}=m[y];Ec.fromBufferAttribute(c,E),wc.fromBufferAttribute(c,x),_.push(Ec.x,Ec.y,Ec.z),_.push(wc.x,wc.y,wc.z)}this.setAttribute("position",new Ve(_,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class gs extends Pa{constructor(e){super(e),this.uuid=$n(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Pa().fromJSON(i))}return this}}const OT={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=gv(r,0,i,t,!0);const l=[];if(!s||s.next===s.prev)return l;let c,u,h,d,p,m,_;if(n&&(s=HT(r,e,s,t)),r.length>80*t){c=h=r[0],u=d=r[1];for(let y=t;y<i;y+=t)p=r[y],m=r[y+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>d&&(d=m);_=Math.max(h-c,d-u),_=_!==0?32767/_:0}return La(s,l,t,c,u,_,0),l}};function gv(r,e,t,n,i){let s,l;if(i===QT(r,e,t,n)>0)for(s=e;s<t;s+=n)l=jg(s,r[s],r[s+1],l);else for(s=t-n;s>=e;s-=n)l=jg(s,r[s],r[s+1],l);return l&&_u(l,l.next)&&(Na(l),l=l.next),l}function ys(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(_u(t,t.next)||Ht(t.prev,t,t.next)===0)){if(Na(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function La(r,e,t,n,i,s,l){if(!r)return;!l&&s&&qT(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?BT(r,n,i,s):FT(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),Na(r),r=h.next,c=h.next;continue}if(r=h,r===c){l?l===1?(r=zT(ys(r),e,t),La(r,e,t,n,i,s,2)):l===2&&kT(r,e,t,n,i,s):La(ys(r),e,t,n,i,s,1);break}}}function FT(r){const e=r.prev,t=r,n=r.next;if(Ht(e,t,n)>=0)return!1;const i=e.x,s=t.x,l=n.x,c=e.y,u=t.y,h=n.y,d=i<s?i<l?i:l:s<l?s:l,p=c<u?c<h?c:h:u<h?u:h,m=i>s?i>l?i:l:s>l?s:l,_=c>u?c>h?c:h:u>h?u:h;let y=n.next;for(;y!==e;){if(y.x>=d&&y.x<=m&&y.y>=p&&y.y<=_&&go(i,c,s,u,l,h,y.x,y.y)&&Ht(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function BT(r,e,t,n){const i=r.prev,s=r,l=r.next;if(Ht(i,s,l)>=0)return!1;const c=i.x,u=s.x,h=l.x,d=i.y,p=s.y,m=l.y,_=c<u?c<h?c:h:u<h?u:h,y=d<p?d<m?d:m:p<m?p:m,E=c>u?c>h?c:h:u>h?u:h,x=d>p?d>m?d:m:p>m?p:m,v=dd(_,y,e,t,n),w=dd(E,x,e,t,n);let M=r.prevZ,A=r.nextZ;for(;M&&M.z>=v&&A&&A.z<=w;){if(M.x>=_&&M.x<=E&&M.y>=y&&M.y<=x&&M!==i&&M!==l&&go(c,d,u,p,h,m,M.x,M.y)&&Ht(M.prev,M,M.next)>=0||(M=M.prevZ,A.x>=_&&A.x<=E&&A.y>=y&&A.y<=x&&A!==i&&A!==l&&go(c,d,u,p,h,m,A.x,A.y)&&Ht(A.prev,A,A.next)>=0))return!1;A=A.nextZ}for(;M&&M.z>=v;){if(M.x>=_&&M.x<=E&&M.y>=y&&M.y<=x&&M!==i&&M!==l&&go(c,d,u,p,h,m,M.x,M.y)&&Ht(M.prev,M,M.next)>=0)return!1;M=M.prevZ}for(;A&&A.z<=w;){if(A.x>=_&&A.x<=E&&A.y>=y&&A.y<=x&&A!==i&&A!==l&&go(c,d,u,p,h,m,A.x,A.y)&&Ht(A.prev,A,A.next)>=0)return!1;A=A.nextZ}return!0}function zT(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!_u(i,s)&&_v(i,n,n.next,s)&&Ia(i,s)&&Ia(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),Na(n),Na(n.next),n=r=s),n=n.next}while(n!==r);return ys(n)}function kT(r,e,t,n,i,s){let l=r;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&JT(l,c)){let u=vv(l,c);l=ys(l,l.next),u=ys(u,u.next),La(l,e,t,n,i,s,0),La(u,e,t,n,i,s,0);return}c=c.next}l=l.next}while(l!==r)}function HT(r,e,t,n){const i=[];let s,l,c,u,h;for(s=0,l=e.length;s<l;s++)c=e[s]*n,u=s<l-1?e[s+1]*n:r.length,h=gv(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(ZT(h));for(i.sort(VT),s=0;s<i.length;s++)t=GT(i[s],t);return t}function VT(r,e){return r.x-e.x}function GT(r,e){const t=WT(r,e);if(!t)return e;const n=vv(t,r);return ys(n,n.next),ys(t,t.next)}function WT(r,e){let t=e,n=-1/0,i;const s=r.x,l=r.y;do{if(l<=t.y&&l>=t.next.y&&t.next.y!==t.y){const m=t.x+(l-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let d=1/0,p;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&go(l<h?s:n,l,u,h,l<h?n:s,l,t.x,t.y)&&(p=Math.abs(l-t.y)/(s-t.x),Ia(t,r)&&(p<d||p===d&&(t.x>i.x||t.x===i.x&&XT(i,t)))&&(i=t,d=p)),t=t.next;while(t!==c);return i}function XT(r,e){return Ht(r.prev,r,e.prev)<0&&Ht(e.next,r,r.next)<0}function qT(r,e,t,n){let i=r;do i.z===0&&(i.z=dd(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,YT(i)}function YT(r){let e,t,n,i,s,l,c,u,h=1;do{for(t=r,r=null,s=null,l=0;t;){for(l++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(l>1);return r}function dd(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function ZT(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function go(r,e,t,n,i,s,l,c){return(i-l)*(e-c)>=(r-l)*(s-c)&&(r-l)*(n-c)>=(t-l)*(e-c)&&(t-l)*(s-c)>=(i-l)*(n-c)}function JT(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!KT(r,e)&&(Ia(r,e)&&Ia(e,r)&&jT(r,e)&&(Ht(r.prev,r,e.prev)||Ht(r,e.prev,e))||_u(r,e)&&Ht(r.prev,r,r.next)>0&&Ht(e.prev,e,e.next)>0)}function Ht(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function _u(r,e){return r.x===e.x&&r.y===e.y}function _v(r,e,t,n){const i=bc(Ht(r,e,t)),s=bc(Ht(r,e,n)),l=bc(Ht(t,n,r)),c=bc(Ht(t,n,e));return!!(i!==s&&l!==c||i===0&&Ac(r,t,e)||s===0&&Ac(r,n,e)||l===0&&Ac(t,r,n)||c===0&&Ac(t,e,n))}function Ac(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function bc(r){return r>0?1:r<0?-1:0}function KT(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&_v(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Ia(r,e){return Ht(r.prev,r,r.next)<0?Ht(r,e,r.next)>=0&&Ht(r,r.prev,e)>=0:Ht(r,e,r.prev)<0||Ht(r,r.next,e)<0}function jT(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function vv(r,e){const t=new pd(r.i,r.x,r.y),n=new pd(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function jg(r,e,t,n){const i=new pd(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Na(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function pd(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function QT(r,e,t,n){let i=0;for(let s=e,l=t-n;s<t;s+=n)i+=(r[l]-r[s])*(r[s+1]+r[l+1]),l=s;return i}class zi{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return zi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Qg(e),$g(n,e);let l=e.length;t.forEach(Qg);for(let u=0;u<t.length;u++)i.push(l),l+=t[u].length,$g(n,t[u]);const c=OT.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function Qg(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function $g(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class vu extends gt{constructor(e=new gs([new he(.5,.5),new he(-.5,.5),new he(-.5,-.5),new he(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];l(h)}this.setAttribute("position",new Ve(i,3)),this.setAttribute("uv",new Ve(s,2)),this.computeVertexNormals();function l(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,_=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:_-.1,E=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,w=t.UVGenerator!==void 0?t.UVGenerator:$T;let M,A=!1,N,R,L,F;v&&(M=v.getSpacedPoints(d),A=!0,m=!1,N=v.computeFrenetFrames(d,!1),R=new D,L=new D,F=new D),m||(x=0,_=0,y=0,E=0);const W=c.extractPoints(h);let b=W.shape;const P=W.holes;if(!zi.isClockWise(b)){b=b.reverse();for(let B=0,ge=P.length;B<ge;B++){const ue=P[B];zi.isClockWise(ue)&&(P[B]=ue.reverse())}}const ae=zi.triangulateShape(b,P),z=b;for(let B=0,ge=P.length;B<ge;B++){const ue=P[B];b=b.concat(ue)}function ie(B,ge,ue){return ge||console.error("THREE.ExtrudeGeometry: vec does not exist"),B.clone().addScaledVector(ge,ue)}const Z=b.length,ce=ae.length;function k(B,ge,ue){let ye,fe,De;const Le=B.x-ge.x,ke=B.y-ge.y,lt=ue.x-B.x,U=ue.y-B.y,C=Le*Le+ke*ke,se=Le*U-ke*lt;if(Math.abs(se)>Number.EPSILON){const le=Math.sqrt(C),_e=Math.sqrt(lt*lt+U*U),pe=ge.x-ke/le,it=ge.y+Le/le,je=ue.x-U/_e,Me=ue.y+lt/_e,Te=((je-pe)*U-(Me-it)*lt)/(Le*U-ke*lt);ye=pe+Le*Te-B.x,fe=it+ke*Te-B.y;const rt=ye*ye+fe*fe;if(rt<=2)return new he(ye,fe);De=Math.sqrt(rt/2)}else{let le=!1;Le>Number.EPSILON?lt>Number.EPSILON&&(le=!0):Le<-Number.EPSILON?lt<-Number.EPSILON&&(le=!0):Math.sign(ke)===Math.sign(U)&&(le=!0),le?(ye=-ke,fe=Le,De=Math.sqrt(C)):(ye=Le,fe=ke,De=Math.sqrt(C/2))}return new he(ye/De,fe/De)}const X=[];for(let B=0,ge=z.length,ue=ge-1,ye=B+1;B<ge;B++,ue++,ye++)ue===ge&&(ue=0),ye===ge&&(ye=0),X[B]=k(z[B],z[ue],z[ye]);const J=[];let re,me=X.concat();for(let B=0,ge=P.length;B<ge;B++){const ue=P[B];re=[];for(let ye=0,fe=ue.length,De=fe-1,Le=ye+1;ye<fe;ye++,De++,Le++)De===fe&&(De=0),Le===fe&&(Le=0),re[ye]=k(ue[ye],ue[De],ue[Le]);J.push(re),me=me.concat(re)}for(let B=0;B<x;B++){const ge=B/x,ue=_*Math.cos(ge*Math.PI/2),ye=y*Math.sin(ge*Math.PI/2)+E;for(let fe=0,De=z.length;fe<De;fe++){const Le=ie(z[fe],X[fe],ye);He(Le.x,Le.y,-ue)}for(let fe=0,De=P.length;fe<De;fe++){const Le=P[fe];re=J[fe];for(let ke=0,lt=Le.length;ke<lt;ke++){const U=ie(Le[ke],re[ke],ye);He(U.x,U.y,-ue)}}}const Re=y+E;for(let B=0;B<Z;B++){const ge=m?ie(b[B],me[B],Re):b[B];A?(L.copy(N.normals[0]).multiplyScalar(ge.x),R.copy(N.binormals[0]).multiplyScalar(ge.y),F.copy(M[0]).add(L).add(R),He(F.x,F.y,F.z)):He(ge.x,ge.y,0)}for(let B=1;B<=d;B++)for(let ge=0;ge<Z;ge++){const ue=m?ie(b[ge],me[ge],Re):b[ge];A?(L.copy(N.normals[B]).multiplyScalar(ue.x),R.copy(N.binormals[B]).multiplyScalar(ue.y),F.copy(M[B]).add(L).add(R),He(F.x,F.y,F.z)):He(ue.x,ue.y,p/d*B)}for(let B=x-1;B>=0;B--){const ge=B/x,ue=_*Math.cos(ge*Math.PI/2),ye=y*Math.sin(ge*Math.PI/2)+E;for(let fe=0,De=z.length;fe<De;fe++){const Le=ie(z[fe],X[fe],ye);He(Le.x,Le.y,p+ue)}for(let fe=0,De=P.length;fe<De;fe++){const Le=P[fe];re=J[fe];for(let ke=0,lt=Le.length;ke<lt;ke++){const U=ie(Le[ke],re[ke],ye);A?He(U.x,U.y+M[d-1].y,M[d-1].x+ue):He(U.x,U.y,p+ue)}}}j(),de();function j(){const B=i.length/3;if(m){let ge=0,ue=Z*ge;for(let ye=0;ye<ce;ye++){const fe=ae[ye];Ge(fe[2]+ue,fe[1]+ue,fe[0]+ue)}ge=d+x*2,ue=Z*ge;for(let ye=0;ye<ce;ye++){const fe=ae[ye];Ge(fe[0]+ue,fe[1]+ue,fe[2]+ue)}}else{for(let ge=0;ge<ce;ge++){const ue=ae[ge];Ge(ue[2],ue[1],ue[0])}for(let ge=0;ge<ce;ge++){const ue=ae[ge];Ge(ue[0]+Z*d,ue[1]+Z*d,ue[2]+Z*d)}}n.addGroup(B,i.length/3-B,0)}function de(){const B=i.length/3;let ge=0;we(z,ge),ge+=z.length;for(let ue=0,ye=P.length;ue<ye;ue++){const fe=P[ue];we(fe,ge),ge+=fe.length}n.addGroup(B,i.length/3-B,1)}function we(B,ge){let ue=B.length;for(;--ue>=0;){const ye=ue;let fe=ue-1;fe<0&&(fe=B.length-1);for(let De=0,Le=d+x*2;De<Le;De++){const ke=Z*De,lt=Z*(De+1),U=ge+ye+ke,C=ge+fe+ke,se=ge+fe+lt,le=ge+ye+lt;Oe(U,C,se,le)}}}function He(B,ge,ue){u.push(B),u.push(ge),u.push(ue)}function Ge(B,ge,ue){at(B),at(ge),at(ue);const ye=i.length/3,fe=w.generateTopUV(n,i,ye-3,ye-2,ye-1);Fe(fe[0]),Fe(fe[1]),Fe(fe[2])}function Oe(B,ge,ue,ye){at(B),at(ge),at(ye),at(ge),at(ue),at(ye);const fe=i.length/3,De=w.generateSideWallUV(n,i,fe-6,fe-3,fe-2,fe-1);Fe(De[0]),Fe(De[1]),Fe(De[3]),Fe(De[1]),Fe(De[2]),Fe(De[3])}function at(B){i.push(u[B*3+0]),i.push(u[B*3+1]),i.push(u[B*3+2])}function Fe(B){s.push(B.x),s.push(B.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return eA(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,l=e.shapes.length;s<l;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new jc[i.type]().fromJSON(i)),new vu(n,e.options)}}const $T={generateTopUV:function(r,e,t,n,i){const s=e[t*3],l=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],d=e[i*3+1];return[new he(s,l),new he(c,u),new he(h,d)]},generateSideWallUV:function(r,e,t,n,i,s){const l=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],d=e[n*3+1],p=e[n*3+2],m=e[i*3],_=e[i*3+1],y=e[i*3+2],E=e[s*3],x=e[s*3+1],v=e[s*3+2];return Math.abs(c-d)<Math.abs(l-h)?[new he(l,1-u),new he(h,1-p),new he(m,1-y),new he(E,1-v)]:[new he(c,1-u),new he(d,1-p),new he(_,1-y),new he(x,1-v)]}};function eA(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class yu extends Ur{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new yu(e.radius,e.detail)}}class Xa extends Ur{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Xa(e.radius,e.detail)}}class xu extends gt{constructor(e=.5,t=1,n=32,i=1,s=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],d=[];let p=e;const m=(t-e)/i,_=new D,y=new he;for(let E=0;E<=i;E++){for(let x=0;x<=n;x++){const v=s+x/n*l;_.x=p*Math.cos(v),_.y=p*Math.sin(v),u.push(_.x,_.y,_.z),h.push(0,0,1),y.x=(_.x/t+1)/2,y.y=(_.y/t+1)/2,d.push(y.x,y.y)}p+=m}for(let E=0;E<i;E++){const x=E*(n+1);for(let v=0;v<n;v++){const w=v+x,M=w,A=w+n+1,N=w+n+2,R=w+1;c.push(M,A,R),c.push(A,N,R)}}this.setIndex(c),this.setAttribute("position",new Ve(u,3)),this.setAttribute("normal",new Ve(h,3)),this.setAttribute("uv",new Ve(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xu(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Su extends gt{constructor(e=new gs([new he(0,.5),new he(-.5,-.5),new he(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],l=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let d=0;d<e.length;d++)h(e[d]),this.addGroup(c,u,d),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new Ve(i,3)),this.setAttribute("normal",new Ve(s,3)),this.setAttribute("uv",new Ve(l,2));function h(d){const p=i.length/3,m=d.extractPoints(t);let _=m.shape;const y=m.holes;zi.isClockWise(_)===!1&&(_=_.reverse());for(let x=0,v=y.length;x<v;x++){const w=y[x];zi.isClockWise(w)===!0&&(y[x]=w.reverse())}const E=zi.triangulateShape(_,y);for(let x=0,v=y.length;x<v;x++){const w=y[x];_=_.concat(w)}for(let x=0,v=_.length;x<v;x++){const w=_[x];i.push(w.x,w.y,0),s.push(0,0,1),l.push(w.x,w.y)}for(let x=0,v=E.length;x<v;x++){const w=E[x],M=w[0]+p,A=w[1]+p,N=w[2]+p;n.push(M,A,N),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return tA(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const l=t[e.shapes[i]];n.push(l)}return new Su(n,e.curveSegments)}}function tA(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class qa extends gt{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:l,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(l+c,Math.PI);let h=0;const d=[],p=new D,m=new D,_=[],y=[],E=[],x=[];for(let v=0;v<=n;v++){const w=[],M=v/n;let A=0;v===0&&l===0?A=.5/t:v===n&&u===Math.PI&&(A=-.5/t);for(let N=0;N<=t;N++){const R=N/t;p.x=-e*Math.cos(i+R*s)*Math.sin(l+M*c),p.y=e*Math.cos(l+M*c),p.z=e*Math.sin(i+R*s)*Math.sin(l+M*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),E.push(m.x,m.y,m.z),x.push(R+A,1-M),w.push(h++)}d.push(w)}for(let v=0;v<n;v++)for(let w=0;w<t;w++){const M=d[v][w+1],A=d[v][w],N=d[v+1][w],R=d[v+1][w+1];(v!==0||l>0)&&_.push(M,A,R),(v!==n-1||u<Math.PI)&&_.push(A,N,R)}this.setIndex(_),this.setAttribute("position",new Ve(y,3)),this.setAttribute("normal",new Ve(E,3)),this.setAttribute("uv",new Ve(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new qa(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Mu extends Ur{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Mu(e.radius,e.detail)}}class Eu extends gt{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],u=[],h=[],d=new D,p=new D,m=new D;for(let _=0;_<=n;_++)for(let y=0;y<=i;y++){const E=y/i*s,x=_/n*Math.PI*2;p.x=(e+t*Math.cos(x))*Math.cos(E),p.y=(e+t*Math.cos(x))*Math.sin(E),p.z=t*Math.sin(x),c.push(p.x,p.y,p.z),d.x=e*Math.cos(E),d.y=e*Math.sin(E),m.subVectors(p,d).normalize(),u.push(m.x,m.y,m.z),h.push(y/i),h.push(_/n)}for(let _=1;_<=n;_++)for(let y=1;y<=i;y++){const E=(i+1)*_+y-1,x=(i+1)*(_-1)+y-1,v=(i+1)*(_-1)+y,w=(i+1)*_+y;l.push(E,x,w),l.push(x,v,w)}this.setIndex(l),this.setAttribute("position",new Ve(c,3)),this.setAttribute("normal",new Ve(u,3)),this.setAttribute("uv",new Ve(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Eu(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class wu extends gt{constructor(e=1,t=.4,n=64,i=8,s=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],d=[],p=new D,m=new D,_=new D,y=new D,E=new D,x=new D,v=new D;for(let M=0;M<=n;++M){const A=M/n*s*Math.PI*2;w(A,s,l,e,_),w(A+.01,s,l,e,y),x.subVectors(y,_),v.addVectors(y,_),E.crossVectors(x,v),v.crossVectors(E,x),E.normalize(),v.normalize();for(let N=0;N<=i;++N){const R=N/i*Math.PI*2,L=-t*Math.cos(R),F=t*Math.sin(R);p.x=_.x+(L*v.x+F*E.x),p.y=_.y+(L*v.y+F*E.y),p.z=_.z+(L*v.z+F*E.z),u.push(p.x,p.y,p.z),m.subVectors(p,_).normalize(),h.push(m.x,m.y,m.z),d.push(M/n),d.push(N/i)}}for(let M=1;M<=n;M++)for(let A=1;A<=i;A++){const N=(i+1)*(M-1)+(A-1),R=(i+1)*M+(A-1),L=(i+1)*M+A,F=(i+1)*(M-1)+A;c.push(N,R,F),c.push(R,L,F)}this.setIndex(c),this.setAttribute("position",new Ve(u,3)),this.setAttribute("normal",new Ve(h,3)),this.setAttribute("uv",new Ve(d,2));function w(M,A,N,R,L){const F=Math.cos(M),W=Math.sin(M),b=N/A*M,P=Math.cos(b);L.x=R*(2+P)*.5*F,L.y=R*(2+P)*W*.5,L.z=R*Math.sin(b)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new wu(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Tu extends gt{constructor(e=new Qd(new D(-1,-1,0),new D(-1,1,0),new D(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const l=e.computeFrenetFrames(t,s);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new D,u=new D,h=new he;let d=new D;const p=[],m=[],_=[],y=[];E(),this.setIndex(y),this.setAttribute("position",new Ve(p,3)),this.setAttribute("normal",new Ve(m,3)),this.setAttribute("uv",new Ve(_,2));function E(){for(let M=0;M<t;M++)x(M);x(s===!1?t:0),w(),v()}function x(M){d=e.getPointAt(M/t,d);const A=l.normals[M],N=l.binormals[M];for(let R=0;R<=i;R++){const L=R/i*Math.PI*2,F=Math.sin(L),W=-Math.cos(L);u.x=W*A.x+F*N.x,u.y=W*A.y+F*N.y,u.z=W*A.z+F*N.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=d.x+n*u.x,c.y=d.y+n*u.y,c.z=d.z+n*u.z,p.push(c.x,c.y,c.z)}}function v(){for(let M=1;M<=t;M++)for(let A=1;A<=i;A++){const N=(i+1)*(M-1)+(A-1),R=(i+1)*M+(A-1),L=(i+1)*M+A,F=(i+1)*(M-1)+A;y.push(N,R,F),y.push(R,L,F)}}function w(){for(let M=0;M<=t;M++)for(let A=0;A<=i;A++)h.x=M/t,h.y=A/i,_.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Tu(new jc[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class yv extends gt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new D,s=new D;if(e.index!==null){const l=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,d=u.length;h<d;++h){const p=u[h],m=p.start,_=p.count;for(let y=m,E=m+_;y<E;y+=3)for(let x=0;x<3;x++){const v=c.getX(y+x),w=c.getX(y+(x+1)%3);i.fromBufferAttribute(l,v),s.fromBufferAttribute(l,w),e0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const l=e.attributes.position;for(let c=0,u=l.count/3;c<u;c++)for(let h=0;h<3;h++){const d=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(l,d),s.fromBufferAttribute(l,p),e0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Ve(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function e0(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var t0=Object.freeze({__proto__:null,BoxGeometry:xs,CapsuleGeometry:du,CircleGeometry:pu,ConeGeometry:mu,CylinderGeometry:Co,DodecahedronGeometry:gu,EdgesGeometry:mv,ExtrudeGeometry:vu,IcosahedronGeometry:yu,LatheGeometry:Wa,OctahedronGeometry:Xa,PlaneGeometry:Ao,PolyhedronGeometry:Ur,RingGeometry:xu,ShapeGeometry:Su,SphereGeometry:qa,TetrahedronGeometry:Mu,TorusGeometry:Eu,TorusKnotGeometry:wu,TubeGeometry:Tu,WireframeGeometry:yv});class xv extends vn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ne(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Sv extends Mi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class ep extends vn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ne(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ne(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ei,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Mv extends ep{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new he(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Yt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ne(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ne(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ne(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Ev extends vn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ne(16777215),this.specular=new Ne(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ne(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ei,this.combine=Ba,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class wv extends vn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ne(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ne(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Tv extends vn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Av extends vn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ne(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ne(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ei,this.combine=Ba,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class bv extends vn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ne(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Nr,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Cv extends Fn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function hs(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function Rv(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function Pv(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function md(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,l=0;l!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[l++]=r[c+u]}return i}function tp(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let l=s[n];if(l!==void 0)if(Array.isArray(l))do l=s[n],l!==void 0&&(e.push(s.time),t.push.apply(t,l)),s=r[i++];while(s!==void 0);else if(l.toArray!==void 0)do l=s[n],l!==void 0&&(e.push(s.time),l.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do l=s[n],l!==void 0&&(e.push(s.time),t.push(l)),s=r[i++];while(s!==void 0)}function nA(r,e,t,n,i=30){const s=r.clone();s.name=e;const l=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],d=h.getValueSize(),p=[],m=[];for(let _=0;_<h.times.length;++_){const y=h.times[_]*i;if(!(y<t||y>=n)){p.push(h.times[_]);for(let E=0;E<d;++E)m.push(h.values[_*d+E])}}p.length!==0&&(h.times=hs(p,h.times.constructor),h.values=hs(m,h.values.constructor),l.push(h))}s.tracks=l;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function iA(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let l=0;l<i;++l){const c=t.tracks[l],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(v){return v.name===c.name&&v.ValueTypeName===u});if(h===void 0)continue;let d=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let m=0;const _=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=_/3);const y=c.times.length-1;let E;if(s<=c.times[0]){const v=d,w=p-d;E=c.values.slice(v,w)}else if(s>=c.times[y]){const v=y*p+d,w=v+p-d;E=c.values.slice(v,w)}else{const v=c.createInterpolant(),w=d,M=p-d;v.evaluate(s),E=v.resultBuffer.slice(w,M)}u==="quaternion"&&new Vn().fromArray(E).normalize().conjugate().toArray(E);const x=h.times.length;for(let v=0;v<x;++v){const w=v*_+m;if(u==="quaternion")Vn.multiplyQuaternionsFlat(h.values,w,E,0,h.values,w);else{const M=_-m*2;for(let A=0;A<M;++A)h.values[w+A]-=E[A]}}}return r.blendMode=Ld,r}const rA={convertArray:hs,isTypedArray:Rv,getKeyframeOrder:Pv,sortedArray:md,flattenJSON:tp,subclip:nA,makeClipAdditive:iA};class Ya{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let l;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}l=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}l=n,n=0;break n}break e}for(;n<l;){const c=n+l>>>1;e<t[c]?l=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let l=0;l!==i;++l)t[l]=n[s+l];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Lv extends Ya{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ls,endingEnd:ls}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,l=e+1,c=i[s],u=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case cs:s=e,c=2*t-n;break;case Ea:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case cs:l=e,u=2*n-t;break;case Ea:l=1,u=n+i[1]-i[0];break;default:l=e-1,u=t}const h=(n-t)*.5,d=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*d,this._offsetNext=l*d}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,_=this._weightNext,y=(n-t)/(i-t),E=y*y,x=E*y,v=-m*x+2*m*E-m*y,w=(1+m)*x+(-1.5-2*m)*E+(-.5+m)*y+1,M=(-1-_)*x+(1.5+_)*E+.5*y,A=_*x-_*E;for(let N=0;N!==c;++N)s[N]=v*l[d+N]+w*l[h+N]+M*l[u+N]+A*l[p+N];return s}}class np extends Ya{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=(n-t)/(i-t),p=1-d;for(let m=0;m!==c;++m)s[m]=l[h+m]*p+l[u+m]*d;return s}}class Iv extends Ya{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class wi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=hs(t,this.TimeBufferType),this.values=hs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:hs(e.times,Array),values:hs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Iv(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new np(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Lv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Sa:t=this.InterpolantFactoryMethodDiscrete;break;case Ma:t=this.InterpolantFactoryMethodLinear;break;case Vc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Sa;case this.InterpolantFactoryMethodLinear:return Ma;case this.InterpolantFactoryMethodSmooth:return Vc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,l=i-1;for(;s!==i&&n[s]<e;)++s;for(;l!==-1&&n[l]>t;)--l;if(++l,s!==0||l!==i){s>=l&&(l=Math.max(l,1),s=l-1);const c=this.getValueSize();this.times=n.slice(s,l),this.values=this.values.slice(s*c,l*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let l=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(l!==null&&l>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,l),e=!1;break}l=u}if(i!==void 0&&Rv(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Vc,s=e.length-1;let l=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],d=e[c+1];if(h!==d&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,_=p+n;for(let y=0;y!==n;++y){const E=t[p+y];if(E!==t[m+y]||E!==t[_+y]){u=!0;break}}}if(u){if(c!==l){e[l]=e[c];const p=c*n,m=l*n;for(let _=0;_!==n;++_)t[m+_]=t[p+_]}++l}}if(s>0){e[l]=e[s];for(let c=s*n,u=l*n,h=0;h!==n;++h)t[u+h]=t[c+h];++l}return l!==e.length?(this.times=e.slice(0,l),this.values=t.slice(0,l*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}wi.prototype.TimeBufferType=Float32Array;wi.prototype.ValueBufferType=Float32Array;wi.prototype.DefaultInterpolation=Ma;class Ss extends wi{}Ss.prototype.ValueTypeName="bool";Ss.prototype.ValueBufferType=Array;Ss.prototype.DefaultInterpolation=Sa;Ss.prototype.InterpolantFactoryMethodLinear=void 0;Ss.prototype.InterpolantFactoryMethodSmooth=void 0;class ip extends wi{}ip.prototype.ValueTypeName="color";class Da extends wi{}Da.prototype.ValueTypeName="number";class Nv extends Ya{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let d=h+c;h!==d;h+=4)Vn.slerpFlat(s,0,l,h-c,l,h,u);return s}}class Ro extends wi{InterpolantFactoryMethodLinear(e){return new Nv(this.times,this.values,this.getValueSize(),e)}}Ro.prototype.ValueTypeName="quaternion";Ro.prototype.DefaultInterpolation=Ma;Ro.prototype.InterpolantFactoryMethodSmooth=void 0;class Ms extends wi{}Ms.prototype.ValueTypeName="string";Ms.prototype.ValueBufferType=Array;Ms.prototype.DefaultInterpolation=Sa;Ms.prototype.InterpolantFactoryMethodLinear=void 0;Ms.prototype.InterpolantFactoryMethodSmooth=void 0;class Ua extends wi{}Ua.prototype.ValueTypeName="vector";class Oa{constructor(e,t=-1,n,i=iu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=$n(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let l=0,c=n.length;l!==c;++l)t.push(oA(n[l]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,l=n.length;s!==l;++s)t.push(wi.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,l=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const d=Pv(u);u=md(u,1,d),h=md(h,1,d),!i&&u[0]===0&&(u.push(s),h.push(h[0])),l.push(new Da(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,l)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],d=h.name.match(s);if(d&&d.length>1){const p=d[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return l}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,_,y,E){if(_.length!==0){const x=[],v=[];tp(_,x,v,y),x.length!==0&&E.push(new p(m,x,v))}},i=[],s=e.name||"default",l=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const _={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let E=0;E<m[y].morphTargets.length;E++)_[m[y].morphTargets[E]]=-1;for(const E in _){const x=[],v=[];for(let w=0;w!==m[y].morphTargets.length;++w){const M=m[y];x.push(M.time),v.push(M.morphTarget===E?1:0)}i.push(new Da(".morphTargetInfluence["+E+"]",x,v))}u=_.length*l}else{const _=".bones["+t[p].name+"]";n(Ua,_+".position",m,"pos",i),n(Ro,_+".quaternion",m,"rot",i),n(Ua,_+".scale",m,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function sA(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Da;case"vector":case"vector2":case"vector3":case"vector4":return Ua;case"color":return ip;case"quaternion":return Ro;case"bool":case"boolean":return Ss;case"string":return Ms}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function oA(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=sA(r.type);if(r.times===void 0){const t=[],n=[];tp(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const nr={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class rp{constructor(e,t,n){const i=this;let s=!1,l=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){c++,s===!1&&i.onStart!==void 0&&i.onStart(d,l,c),s=!0},this.itemEnd=function(d){l++,i.onProgress!==void 0&&i.onProgress(d,l,c),l===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(d){i.onError!==void 0&&i.onError(d)},this.resolveURL=function(d){return u?u(d):d},this.setURLModifier=function(d){return u=d,this},this.addHandler=function(d,p){return h.push(d,p),this},this.removeHandler=function(d){const p=h.indexOf(d);return p!==-1&&h.splice(p,2),this},this.getHandler=function(d){for(let p=0,m=h.length;p<m;p+=2){const _=h[p],y=h[p+1];if(_.global&&(_.lastIndex=0),_.test(d))return y}return null}}}const Dv=new rp;class Gn{constructor(e){this.manager=e!==void 0?e:Dv,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Gn.DEFAULT_MATERIAL_NAME="__DEFAULT";const Qi={};class aA extends Error{constructor(e,t){super(e),this.response=t}}class or extends Gn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=nr.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Qi[e]!==void 0){Qi[e].push({onLoad:t,onProgress:n,onError:i});return}Qi[e]=[],Qi[e].push({onLoad:t,onProgress:n,onError:i});const l=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(l).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const d=Qi[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),_=m?parseInt(m):0,y=_!==0;let E=0;const x=new ReadableStream({start(v){w();function w(){p.read().then(({done:M,value:A})=>{if(M)v.close();else{E+=A.byteLength;const N=new ProgressEvent("progress",{lengthComputable:y,loaded:E,total:_});for(let R=0,L=d.length;R<L;R++){const F=d[R];F.onProgress&&F.onProgress(N)}v.enqueue(A),w()}})}}});return new Response(x)}else throw new aA(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(d=>new DOMParser().parseFromString(d,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,_=new TextDecoder(m);return h.arrayBuffer().then(y=>_.decode(y))}}}).then(h=>{nr.add(e,h);const d=Qi[e];delete Qi[e];for(let p=0,m=d.length;p<m;p++){const _=d[p];_.onLoad&&_.onLoad(h)}}).catch(h=>{const d=Qi[e];if(d===void 0)throw this.manager.itemError(e),h;delete Qi[e];for(let p=0,m=d.length;p<m;p++){const _=d[p];_.onError&&_.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class lA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new or(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Oa.parse(e[n]);t.push(i)}return t}}class cA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=[],c=new hu,u=new or(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function d(p){u.load(e[p],function(m){const _=s.parse(m,!0);l[p]={width:_.width,height:_.height,format:_.format,mipmaps:_.mipmaps},h+=1,h===6&&(_.mipmapCount===1&&(c.minFilter=kt),c.image=l,c.format=_.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)d(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const _=m.mipmaps.length/m.mipmapCount;for(let y=0;y<_;y++){l[y]={mipmaps:[]};for(let E=0;E<m.mipmapCount;E++)l[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+E]),l[y].format=m.format,l[y].width=m.width,l[y].height=m.height}c.image=l}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=kt),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class Fa extends Gn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=nr.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c=Ra("img");function u(){d(),nr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){d(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function d(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class uA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=new Ha;s.colorSpace=di;const l=new Fa(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function u(h){l.load(e[h],function(d){s.images[h]=d,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class hA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new Pr,c=new or(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(d){if(i!==void 0)i(d);else{console.error(d);return}}h.image!==void 0?l.image=h.image:h.data!==void 0&&(l.image.width=h.width,l.image.height=h.height,l.image.data=h.data),l.wrapS=h.wrapS!==void 0?h.wrapS:An,l.wrapT=h.wrapT!==void 0?h.wrapT:An,l.magFilter=h.magFilter!==void 0?h.magFilter:kt,l.minFilter=h.minFilter!==void 0?h.minFilter:kt,l.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0&&(l.colorSpace=h.colorSpace),h.flipY!==void 0&&(l.flipY=h.flipY),h.format!==void 0&&(l.format=h.format),h.type!==void 0&&(l.type=h.type),h.mipmaps!==void 0&&(l.mipmaps=h.mipmaps,l.minFilter=Ui),h.mipmapCount===1&&(l.minFilter=kt),h.generateMipmaps!==void 0&&(l.generateMipmaps=h.generateMipmaps),l.needsUpdate=!0,t&&t(l,h)},n,i),l}}class fA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=new Vt,l=new Fa(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Or extends At{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ne(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class Uv extends Or{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(At.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ne(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const gf=new $e,n0=new D,i0=new D;class sp{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new he(512,512),this.map=null,this.mapPass=null,this.matrix=new $e,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Va,this._frameExtents=new he(1,1),this._viewportCount=1,this._viewports=[new Rt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;n0.setFromMatrixPosition(e.matrixWorld),t.position.copy(n0),i0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(i0),t.updateMatrixWorld(),gf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(gf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(gf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class dA extends sp{constructor(){super(new dn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=xo*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Ov extends Or{constructor(e,t,n=0,i=Math.PI/3,s=0,l=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(At.DEFAULT_UP),this.updateMatrix(),this.target=new At,this.distance=n,this.angle=i,this.penumbra=s,this.decay=l,this.map=null,this.shadow=new dA}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const r0=new $e,aa=new D,_f=new D;class pA extends sp{constructor(){super(new dn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new he(4,2),this._viewportCount=6,this._viewports=[new Rt(2,1,1,1),new Rt(0,1,1,1),new Rt(3,1,1,1),new Rt(1,1,1,1),new Rt(3,0,1,1),new Rt(1,0,1,1)],this._cubeDirections=[new D(1,0,0),new D(-1,0,0),new D(0,0,1),new D(0,0,-1),new D(0,1,0),new D(0,-1,0)],this._cubeUps=[new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,0,1),new D(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),aa.setFromMatrixPosition(e.matrixWorld),n.position.copy(aa),_f.copy(n.position),_f.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(_f),n.updateMatrixWorld(),i.makeTranslation(-aa.x,-aa.y,-aa.z),r0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(r0)}}class Fv extends Or{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new pA}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class mA extends sp{constructor(){super(new Ga(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Bv extends Or{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(At.DEFAULT_UP),this.updateMatrix(),this.target=new At,this.shadow=new mA}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class zv extends Or{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class kv extends Or{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Hv{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new D)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.282095),t.addScaledVector(l[1],.488603*i),t.addScaledVector(l[2],.488603*s),t.addScaledVector(l[3],.488603*n),t.addScaledVector(l[4],1.092548*(n*i)),t.addScaledVector(l[5],1.092548*(i*s)),t.addScaledVector(l[6],.315392*(3*s*s-1)),t.addScaledVector(l[7],1.092548*(n*s)),t.addScaledVector(l[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.886227),t.addScaledVector(l[1],2*.511664*i),t.addScaledVector(l[2],2*.511664*s),t.addScaledVector(l[3],2*.511664*n),t.addScaledVector(l[4],2*.429043*n*i),t.addScaledVector(l[5],2*.429043*i*s),t.addScaledVector(l[6],.743125*s*s-.247708),t.addScaledVector(l[7],2*.429043*n*s),t.addScaledVector(l[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class Vv extends Or{constructor(e=new Hv,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Au extends Gn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,l=new or(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=Au.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Ne().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const l=e.uniforms[s];switch(i.uniforms[s]={},l.type){case"t":i.uniforms[s].value=n(l.value);break;case"c":i.uniforms[s].value=new Ne().setHex(l.value);break;case"v2":i.uniforms[s].value=new he().fromArray(l.value);break;case"v3":i.uniforms[s].value=new D().fromArray(l.value);break;case"v4":i.uniforms[s].value=new Rt().fromArray(l.value);break;case"m3":i.uniforms[s].value=new ft().fromArray(l.value);break;case"m4":i.uniforms[s].value=new $e().fromArray(l.value);break;default:i.uniforms[s].value=l.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new he().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new he().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:xv,SpriteMaterial:Xd,RawShaderMaterial:Sv,ShaderMaterial:Mi,PointsMaterial:Yd,MeshPhysicalMaterial:Mv,MeshStandardMaterial:ep,MeshPhongMaterial:Ev,MeshToonMaterial:wv,MeshNormalMaterial:Tv,MeshLambertMaterial:Av,MeshDepthMaterial:Vd,MeshDistanceMaterial:Gd,MeshBasicMaterial:Dr,MeshMatcapMaterial:bv,LineDashedMaterial:Cv,LineBasicMaterial:Fn,Material:vn};return new t[e]}}class gd{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Gv extends gt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Wv extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new or(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(_,y){if(t[y]!==void 0)return t[y];const x=_.interleavedBuffers[y],v=s(_,x.buffer),w=ho(x.type,v),M=new cu(w,x.stride);return M.uuid=x.uuid,t[y]=M,M}function s(_,y){if(n[y]!==void 0)return n[y];const x=_.arrayBuffers[y],v=new Uint32Array(x).buffer;return n[y]=v,v}const l=e.isInstancedBufferGeometry?new Gv:new gt,c=e.data.index;if(c!==void 0){const _=ho(c.type,c.array);l.setIndex(new Lt(_,1))}const u=e.data.attributes;for(const _ in u){const y=u[_];let E;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);E=new vs(x,y.itemSize,y.offset,y.normalized)}else{const x=ho(y.type,y.array),v=y.isInstancedBufferAttribute?Mo:Lt;E=new v(x,y.itemSize,y.normalized)}y.name!==void 0&&(E.name=y.name),y.usage!==void 0&&E.setUsage(y.usage),l.setAttribute(_,E)}const h=e.data.morphAttributes;if(h)for(const _ in h){const y=h[_],E=[];for(let x=0,v=y.length;x<v;x++){const w=y[x];let M;if(w.isInterleavedBufferAttribute){const A=i(e.data,w.data);M=new vs(A,w.itemSize,w.offset,w.normalized)}else{const A=ho(w.type,w.array);M=new Lt(A,w.itemSize,w.normalized)}w.name!==void 0&&(M.name=w.name),E.push(M)}l.morphAttributes[_]=E}e.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let _=0,y=p.length;_!==y;++_){const E=p[_];l.addGroup(E.start,E.count,E.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const _=new D;m.center!==void 0&&_.fromArray(m.center),l.boundingSphere=new bn(_,m.radius)}return e.name&&(l.name=e.name),e.userData&&(l.userData=e.userData),l}}class gA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=this.path===""?gd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||l;const c=new or(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const d=h.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?gd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new or(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const l=await s.loadAsync(e,t),c=JSON.parse(l),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),l=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,l),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),d=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,d),t!==void 0){let p=!1;for(const m in l)if(l[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),l=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,l),u=this.parseObject(e.object,i,c,l,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new gs().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=new uu().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new Wv;for(let s=0,l=e.length;s<l;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in t0?c=t0[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Au;s.setTextures(t);for(let l=0,c=e.length;l<c;l++){const u=e[l];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=Oa.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function l(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return l(d)}else return u.data?{data:ho(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new rp(t);s=new Fa(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,d=e.length;h<d;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const _=[];for(let y=0,E=m.length;y<E;y++){const x=m[y],v=c(x);v!==null&&(v instanceof HTMLImageElement?_.push(v):_.push(new Pr(v.data,v.width,v.height)))}i[p.uuid]=new us(_)}else{const _=c(p.url);i[p.uuid]=new us(_)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return l.data?{data:ho(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){i=new Fa(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=e.length;l<c;l++){const u=e[l],h=u.url;if(Array.isArray(h)){const d=[];for(let p=0,m=h.length;p<m;p++){const _=h[p],y=await s(_);y!==null&&(y instanceof HTMLImageElement?d.push(y):d.push(new Pr(y.data,y.width,y.height)))}n[u.uuid]=new us(d)}else{const d=await s(u.url);n[u.uuid]=new us(d)}}}return n}parseTextures(e,t){function n(s,l){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),l[s])}const i={};if(e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let d;Array.isArray(h)?(d=new Ha,h.length===6&&(d.needsUpdate=!0)):(h&&h.data?d=new Pr:d=new Vt,h&&(d.needsUpdate=!0)),d.source=u,d.uuid=c.uuid,c.name!==void 0&&(d.name=c.name),c.mapping!==void 0&&(d.mapping=n(c.mapping,_A)),c.channel!==void 0&&(d.channel=c.channel),c.offset!==void 0&&d.offset.fromArray(c.offset),c.repeat!==void 0&&d.repeat.fromArray(c.repeat),c.center!==void 0&&d.center.fromArray(c.center),c.rotation!==void 0&&(d.rotation=c.rotation),c.wrap!==void 0&&(d.wrapS=n(c.wrap[0],s0),d.wrapT=n(c.wrap[1],s0)),c.format!==void 0&&(d.format=c.format),c.internalFormat!==void 0&&(d.internalFormat=c.internalFormat),c.type!==void 0&&(d.type=c.type),c.colorSpace!==void 0&&(d.colorSpace=c.colorSpace),c.minFilter!==void 0&&(d.minFilter=n(c.minFilter,o0)),c.magFilter!==void 0&&(d.magFilter=n(c.magFilter,o0)),c.anisotropy!==void 0&&(d.anisotropy=c.anisotropy),c.flipY!==void 0&&(d.flipY=c.flipY),c.generateMipmaps!==void 0&&(d.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(d.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(d.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(d.compareFunction=c.compareFunction),c.userData!==void 0&&(d.userData=c.userData),i[c.uuid]=d}return i}parseObject(e,t,n,i,s){let l;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const _=[];for(let y=0,E=m.length;y<E;y++){const x=m[y];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),_.push(n[x])}return _}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let d,p;switch(e.type){case"Scene":l=new Kc,e.background!==void 0&&(Number.isInteger(e.background)?l.background=new Ne(e.background):l.background=h(e.background)),e.environment!==void 0&&(l.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?l.fog=new lu(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(l.fog=new au(e.fog.color,e.fog.density)),e.fog.name!==""&&(l.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(l.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(e.backgroundRotation),e.environmentRotation!==void 0&&l.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":l=new dn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(l.focus=e.focus),e.zoom!==void 0&&(l.zoom=e.zoom),e.filmGauge!==void 0&&(l.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(l.filmOffset=e.filmOffset),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"OrthographicCamera":l=new Ga(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(l.zoom=e.zoom),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"AmbientLight":l=new zv(e.color,e.intensity);break;case"DirectionalLight":l=new Bv(e.color,e.intensity);break;case"PointLight":l=new Fv(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":l=new kv(e.color,e.intensity,e.width,e.height);break;case"SpotLight":l=new Ov(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":l=new Uv(e.color,e.groundColor,e.intensity);break;case"LightProbe":l=new Vv().fromJSON(e);break;case"SkinnedMesh":d=c(e.geometry),p=u(e.material),l=new sv(d,p),e.bindMode!==void 0&&(l.bindMode=e.bindMode),e.bindMatrix!==void 0&&l.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(l.skeleton=e.skeleton);break;case"Mesh":d=c(e.geometry),p=u(e.material),l=new nn(d,p);break;case"InstancedMesh":d=c(e.geometry),p=u(e.material);const m=e.count,_=e.instanceMatrix,y=e.instanceColor;l=new ov(d,p,m),l.instanceMatrix=new Mo(new Float32Array(_.array),16),y!==void 0&&(l.instanceColor=new Mo(new Float32Array(y.array),y.itemSize));break;case"BatchedMesh":d=c(e.geometry),p=u(e.material),l=new av(e.maxGeometryCount,e.maxVertexCount,e.maxIndexCount,p),l.geometry=d,l.perObjectFrustumCulled=e.perObjectFrustumCulled,l.sortObjects=e.sortObjects,l._drawRanges=e.drawRanges,l._reservedRanges=e.reservedRanges,l._visibility=e.visibility,l._active=e.active,l._bounds=e.bounds.map(E=>{const x=new On;x.min.fromArray(E.boxMin),x.max.fromArray(E.boxMax);const v=new bn;return v.radius=E.sphereRadius,v.center.fromArray(E.sphereCenter),{boxInitialized:E.boxInitialized,box:x,sphereInitialized:E.sphereInitialized,sphere:v}}),l._maxGeometryCount=e.maxGeometryCount,l._maxVertexCount=e.maxVertexCount,l._maxIndexCount=e.maxIndexCount,l._geometryInitialized=e.geometryInitialized,l._geometryCount=e.geometryCount,l._matricesTexture=h(e.matricesTexture.uuid);break;case"LOD":l=new rv;break;case"Line":l=new Ir(c(e.geometry),u(e.material));break;case"LineLoop":l=new lv(c(e.geometry),u(e.material));break;case"LineSegments":l=new ki(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":l=new cv(c(e.geometry),u(e.material));break;case"Sprite":l=new iv(u(e.material));break;case"Group":l=new mo;break;case"Bone":l=new qd;break;default:l=new At}if(l.uuid=e.uuid,e.name!==void 0&&(l.name=e.name),e.matrix!==void 0?(l.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=e.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(e.position!==void 0&&l.position.fromArray(e.position),e.rotation!==void 0&&l.rotation.fromArray(e.rotation),e.quaternion!==void 0&&l.quaternion.fromArray(e.quaternion),e.scale!==void 0&&l.scale.fromArray(e.scale)),e.up!==void 0&&l.up.fromArray(e.up),e.castShadow!==void 0&&(l.castShadow=e.castShadow),e.receiveShadow!==void 0&&(l.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(l.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(l.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(l.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(l.visible=e.visible),e.frustumCulled!==void 0&&(l.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(l.renderOrder=e.renderOrder),e.userData!==void 0&&(l.userData=e.userData),e.layers!==void 0&&(l.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let _=0;_<m.length;_++)l.add(this.parseObject(m[_],t,n,i,s))}if(e.animations!==void 0){const m=e.animations;for(let _=0;_<m.length;_++){const y=m[_];l.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(l.autoUpdate=e.autoUpdate);const m=e.levels;for(let _=0;_<m.length;_++){const y=m[_],E=l.getObjectByProperty("uuid",y.object);E!==void 0&&l.addLevel(E,y.distance,y.hysteresis)}}return l}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const _A={UVMapping:tu,CubeReflectionMapping:sr,CubeRefractionMapping:Lr,EquirectangularReflectionMapping:_a,EquirectangularRefractionMapping:va,CubeUVReflectionMapping:wo},s0={RepeatWrapping:ya,ClampToEdgeWrapping:An,MirroredRepeatWrapping:xa},o0={NearestFilter:jt,NearestMipmapNearestFilter:Yc,NearestMipmapLinearFilter:os,LinearFilter:kt,LinearMipmapNearestFilter:fa,LinearMipmapLinearFilter:Ui};class vA extends Gn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=nr.get(e);if(l!==void 0){if(s.manager.itemStart(e),l.then){l.then(h=>{t&&t(h),s.manager.itemEnd(e)}).catch(h=>{i&&i(h)});return}return setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const u=fetch(e,c).then(function(h){return h.blob()}).then(function(h){return createImageBitmap(h,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(h){return nr.add(e,h),t&&t(h),s.manager.itemEnd(e),h}).catch(function(h){i&&i(h),nr.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});nr.add(e,u),s.manager.itemStart(e)}}let Cc;class op{static getContext(){return Cc===void 0&&(Cc=new(window.AudioContext||window.webkitAudioContext)),Cc}static setContext(e){Cc=e}}class yA extends Gn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new or(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){try{const h=u.slice(0);op.getContext().decodeAudioData(h,function(p){t(p)}).catch(c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}const a0=new $e,l0=new $e,$r=new $e;class xA{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new dn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new dn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,$r.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,l=t.near*Math.tan(ps*t.fov*.5)/t.zoom;let c,u;l0.elements[12]=-i,a0.elements[12]=i,c=-l*t.aspect+s,u=l*t.aspect+s,$r.elements[0]=2*t.near/(u-c),$r.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy($r),c=-l*t.aspect-s,u=l*t.aspect-s,$r.elements[0]=2*t.near/(u-c),$r.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy($r)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(l0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(a0)}}class ap{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=c0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=c0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function c0(){return(typeof performance>"u"?Date:performance).now()}const es=new D,u0=new Vn,SA=new D,ts=new D;class MA extends At{constructor(){super(),this.type="AudioListener",this.context=op.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new ap}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(es,u0,SA),ts.set(0,0,-1).applyQuaternion(u0),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(es.x,i),t.positionY.linearRampToValueAtTime(es.y,i),t.positionZ.linearRampToValueAtTime(es.z,i),t.forwardX.linearRampToValueAtTime(ts.x,i),t.forwardY.linearRampToValueAtTime(ts.y,i),t.forwardZ.linearRampToValueAtTime(ts.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(es.x,es.y,es.z),t.setOrientation(ts.x,ts.y,ts.z,n.x,n.y,n.z)}}class Xv extends At{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const ns=new D,h0=new Vn,EA=new D,is=new D;class wA extends Xv{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ns,h0,EA),is.set(0,0,1).applyQuaternion(h0);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ns.x,n),t.positionY.linearRampToValueAtTime(ns.y,n),t.positionZ.linearRampToValueAtTime(ns.z,n),t.orientationX.linearRampToValueAtTime(is.x,n),t.orientationY.linearRampToValueAtTime(is.y,n),t.orientationZ.linearRampToValueAtTime(is.z,n)}else t.setPosition(ns.x,ns.y,ns.z),t.setOrientation(is.x,is.y,is.z)}}class TA{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class qv{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,l;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[s+c]=n[c];l=t}else{l+=t;const c=t/l;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,l=i;s!==l;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let l=0;l!==s;++l)e[t+l]=e[n+l]}_slerp(e,t,n,i){Vn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const l=this._workIndex*s;Vn.multiplyQuaternionsFlat(e,l,e,t,e,n),Vn.slerpFlat(e,t,e,t,e,l,i)}_lerp(e,t,n,i,s){const l=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*l+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let l=0;l!==s;++l){const c=t+l;e[c]=e[c]+e[n+l]*i}}}const lp="\\[\\]\\.:\\/",AA=new RegExp("["+lp+"]","g"),cp="[^"+lp+"]",bA="[^"+lp.replace("\\.","")+"]",CA=/((?:WC+[\/:])*)/.source.replace("WC",cp),RA=/(WCOD+)?/.source.replace("WCOD",bA),PA=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",cp),LA=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",cp),IA=new RegExp("^"+CA+RA+PA+LA+"$"),NA=["material","materials","bones","map"];class DA{constructor(e,t,n){const i=n||Mt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Mt{constructor(e,t,n){this.path=t,this.parsedPath=n||Mt.parseTrackName(t),this.node=Mt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Mt.Composite(e,t,n):new Mt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(AA,"")}static parseTrackName(e){const t=IA.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);NA.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let l=0;l<s.length;l++){const c=s[l];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=Mt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===h){h=d;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const l=e[i];if(l===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=s}else l.fromArray!==void 0&&l.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(u=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Mt.Composite=DA;Mt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Mt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Mt.prototype.GetterByBindingType=[Mt.prototype._getValue_direct,Mt.prototype._getValue_array,Mt.prototype._getValue_arrayElement,Mt.prototype._getValue_toArray];Mt.prototype.SetterByBindingTypeAndVersioning=[[Mt.prototype._setValue_direct,Mt.prototype._setValue_direct_setNeedsUpdate,Mt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Mt.prototype._setValue_array,Mt.prototype._setValue_array_setNeedsUpdate,Mt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Mt.prototype._setValue_arrayElement,Mt.prototype._setValue_arrayElement_setNeedsUpdate,Mt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Mt.prototype._setValue_fromArray,Mt.prototype._setValue_fromArray_setNeedsUpdate,Mt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class UA{constructor(){this.isAnimationObjectGroup=!0,this.uuid=$n(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,l=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let d=0,p=arguments.length;d!==p;++d){const m=arguments[d],_=m.uuid;let y=t[_];if(y===void 0){y=u++,t[_]=y,e.push(m);for(let E=0,x=l;E!==x;++E)s[E].push(new Mt(m,n[E],i[E]))}else if(y<h){c=e[y];const E=--h,x=e[E];t[x.uuid]=y,e[y]=x,t[_]=E,e[E]=m;for(let v=0,w=l;v!==w;++v){const M=s[v],A=M[E];let N=M[y];M[y]=A,N===void 0&&(N=new Mt(m,n[v],i[v])),M[E]=N}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const u=arguments[l],h=u.uuid,d=t[h];if(d!==void 0&&d>=s){const p=s++,m=e[p];t[m.uuid]=d,e[d]=m,t[h]=p,e[p]=u;for(let _=0,y=i;_!==y;++_){const E=n[_],x=E[p],v=E[d];E[d]=x,E[p]=v}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,l=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],d=h.uuid,p=t[d];if(p!==void 0)if(delete t[d],p<s){const m=--s,_=e[m],y=--l,E=e[y];t[_.uuid]=p,e[p]=_,t[E.uuid]=m,e[m]=E,e.pop();for(let x=0,v=i;x!==v;++x){const w=n[x],M=w[m],A=w[y];w[p]=M,w[m]=A,w.pop()}}else{const m=--l,_=e[m];m>0&&(t[_.uuid]=p),e[p]=_,e.pop();for(let y=0,E=i;y!==E;++y){const x=n[y];x[p]=x[m],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const l=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,d=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,l.push(e),c.push(t),s.push(p);for(let m=d,_=u.length;m!==_;++m){const y=u[m];p[m]=new Mt(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,l=this._bindings,c=l.length-1,u=l[c],h=e[c];t[h]=n,l[n]=u,l.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class Yv{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,l=s.length,c=new Array(l),u={endingStart:ls,endingEnd:ls};for(let h=0;h!==l;++h){const d=s[h].createInterpolant(null);c[h]=d,d.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=C_,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,l=s/i,c=i/s;e.warp(1,l,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/l,h[1]=t/l,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const l=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Ld:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(l),h[d].accumulateAdditive(c);break;case iu:default:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(l),h[d].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const l=n===R_;if(e===0)return s===-1?i:l&&(s&1)===1?t-i:i;if(n===b_){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,l)}else this._setEndings(!1,!1,l);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=cs,i.endingEnd=cs):(e?i.endingStart=this.zeroSlopeAtStart?cs:ls:i.endingStart=Ea,t?i.endingEnd=this.zeroSlopeAtEnd?cs:ls:i.endingEnd=Ea)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,u=l.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const OA=new Float32Array(1);class FA extends lr{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,l=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let d=h[u];d===void 0&&(d={},h[u]=d);for(let p=0;p!==s;++p){const m=i[p],_=m.name;let y=d[_];if(y!==void 0)++y.referenceCount,l[p]=y;else{if(y=l[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,_));continue}const E=t&&t._propertyBindings[p].binding.parsedPath;y=new qv(Mt.create(n,_,E),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,_),l[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let l=s[t];if(l===void 0)l={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=l;else{const c=l.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),l.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,l=this._actionsByClip,c=l[s],u=c.knownActions,h=u[u.length-1],d=e._byClipCacheIndex;h._byClipCacheIndex=d,u[d]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete l[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let l=i[t];l===void 0&&(l={},i[t]=l),l[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,l=this._bindingsByRootAndName,c=l[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete l[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new np(new Float32Array(2),new Float32Array(2),1,OA),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let l=typeof e=="string"?Oa.findByName(i,e):e;const c=l!==null?l.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(l!==null?n=l.blendMode:n=iu),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],l===null&&(l=h._clip)}if(l===null)return null;const d=new Yv(this,l,t,n);return this._bindAction(d,h),this._addInactiveAction(d,c,s),d}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?Oa.findByName(n,e):e,l=s?s.uuid:e,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),l=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,l);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(l);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const l=s.knownActions;for(let c=0,u=l.length;c!==u;++c){const h=l[c];this._deactivateAction(h);const d=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=d,t[d]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const l in s){const c=s[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class up{constructor(e){this.value=e}clone(){return new up(this.value.clone===void 0?this.value:this.value.clone())}}let BA=0;class zA extends lr{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:BA++}),this.name="",this.usage=ba,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const s=Array.isArray(t[n])?t[n]:[t[n]];for(let l=0;l<s.length;l++)this.uniforms.push(s[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class kA extends cu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class HA{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const f0=new $e;class Zv{constructor(e,t,n=0,i=1/0){this.ray=new To(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new ms,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return f0.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(f0),this}intersectObject(e,t=!0,n=[]){return _d(e,this,n,t),n.sort(d0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)_d(e[i],this,n,t);return n.sort(d0),n}}function d0(r,e){return r.distance-e.distance}function _d(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,l=i.length;s<l;s++)_d(i[s],e,t,!0)}}class VA{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Yt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class GA{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const p0=new he;class WA{constructor(e=new he(1/0,1/0),t=new he(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=p0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,p0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const m0=new D,Rc=new D;class XA{constructor(e=new D,t=new D){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){m0.subVectors(e,this.start),Rc.subVectors(this.end,this.start);const n=Rc.dot(Rc);let s=Rc.dot(m0)/n;return t&&(s=Yt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const g0=new D;class qA extends At{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new gt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,u=32;l<u;l++,c++){const h=l/u*Math.PI*2,d=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(d),Math.sin(d),1)}n.setAttribute("position",new Ve(i,3));const s=new Fn({fog:!1,toneMapped:!1});this.cone=new ki(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),g0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(g0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Tr=new D,Pc=new $e,vf=new $e;class YA extends ki{constructor(e){const t=Jv(e),n=new gt,i=[],s=[],l=new Ne(0,0,1),c=new Ne(0,1,0);for(let h=0;h<t.length;h++){const d=t[h];d.parent&&d.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(l.r,l.g,l.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new Ve(i,3)),n.setAttribute("color",new Ve(s,3));const u=new Fn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");vf.copy(this.root.matrixWorld).invert();for(let s=0,l=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(Pc.multiplyMatrices(vf,c.matrixWorld),Tr.setFromMatrixPosition(Pc),i.setXYZ(l,Tr.x,Tr.y,Tr.z),Pc.multiplyMatrices(vf,c.parent.matrixWorld),Tr.setFromMatrixPosition(Pc),i.setXYZ(l+1,Tr.x,Tr.y,Tr.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Jv(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,Jv(r.children[t]));return e}class ZA extends nn{constructor(e,t,n){const i=new qa(t,4,2),s=new Dr({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const JA=new D,_0=new Ne,v0=new Ne;class KA extends At{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Xa(t);i.rotateY(Math.PI*.5),this.material=new Dr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),l=new Float32Array(s.count*3);i.setAttribute("color",new Lt(l,3)),this.add(new nn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");_0.copy(this.light.color),v0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?_0:v0;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(JA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class jA extends ki{constructor(e=10,t=10,n=4473924,i=8947848){n=new Ne(n),i=new Ne(i);const s=t/2,l=e/t,c=e/2,u=[],h=[];for(let m=0,_=0,y=-c;m<=t;m++,y+=l){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const E=m===s?n:i;E.toArray(h,_),_+=3,E.toArray(h,_),_+=3,E.toArray(h,_),_+=3,E.toArray(h,_),_+=3}const d=new gt;d.setAttribute("position",new Ve(u,3)),d.setAttribute("color",new Ve(h,3));const p=new Fn({vertexColors:!0,toneMapped:!1});super(d,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class QA extends ki{constructor(e=10,t=16,n=8,i=64,s=4473924,l=8947848){s=new Ne(s),l=new Ne(l);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),_=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(_,0,y);const E=p&1?s:l;u.push(E.r,E.g,E.b),u.push(E.r,E.g,E.b)}for(let p=0;p<n;p++){const m=p&1?s:l,_=e-e/n*p;for(let y=0;y<i;y++){let E=y/i*(Math.PI*2),x=Math.sin(E)*_,v=Math.cos(E)*_;c.push(x,0,v),u.push(m.r,m.g,m.b),E=(y+1)/i*(Math.PI*2),x=Math.sin(E)*_,v=Math.cos(E)*_,c.push(x,0,v),u.push(m.r,m.g,m.b)}}const h=new gt;h.setAttribute("position",new Ve(c,3)),h.setAttribute("color",new Ve(u,3));const d=new Fn({vertexColors:!0,toneMapped:!1});super(h,d),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const y0=new D,Lc=new D,x0=new D;class $A extends At{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new gt;i.setAttribute("position",new Ve([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Fn({fog:!1,toneMapped:!1});this.lightPlane=new Ir(i,s),this.add(this.lightPlane),i=new gt,i.setAttribute("position",new Ve([0,0,0,0,0,1],3)),this.targetLine=new Ir(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),y0.setFromMatrixPosition(this.light.matrixWorld),Lc.setFromMatrixPosition(this.light.target.matrixWorld),x0.subVectors(Lc,y0),this.lightPlane.lookAt(Lc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Lc),this.targetLine.scale.z=x0.length()}}const Ic=new D,qt=new ka;class eb extends ki{constructor(e){const t=new gt,n=new Fn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,E){u(y),u(E)}function u(y){i.push(0,0,0),s.push(0,0,0),l[y]===void 0&&(l[y]=[]),l[y].push(i.length/3-1)}t.setAttribute("position",new Ve(i,3)),t.setAttribute("color",new Ve(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const h=new Ne(16755200),d=new Ne(16711680),p=new Ne(43775),m=new Ne(16777215),_=new Ne(3355443);this.setColors(h,d,p,m,_)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;qt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Kt("c",t,e,qt,0,0,-1),Kt("t",t,e,qt,0,0,1),Kt("n1",t,e,qt,-n,-i,-1),Kt("n2",t,e,qt,n,-i,-1),Kt("n3",t,e,qt,-n,i,-1),Kt("n4",t,e,qt,n,i,-1),Kt("f1",t,e,qt,-n,-i,1),Kt("f2",t,e,qt,n,-i,1),Kt("f3",t,e,qt,-n,i,1),Kt("f4",t,e,qt,n,i,1),Kt("u1",t,e,qt,n*.7,i*1.1,-1),Kt("u2",t,e,qt,-n*.7,i*1.1,-1),Kt("u3",t,e,qt,0,i*2,-1),Kt("cf1",t,e,qt,-n,0,1),Kt("cf2",t,e,qt,n,0,1),Kt("cf3",t,e,qt,0,-i,1),Kt("cf4",t,e,qt,0,i,1),Kt("cn1",t,e,qt,-n,0,-1),Kt("cn2",t,e,qt,n,0,-1),Kt("cn3",t,e,qt,0,-i,-1),Kt("cn4",t,e,qt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Kt(r,e,t,n,i,s,l){Ic.set(i,s,l).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,d=c.length;h<d;h++)u.setXYZ(c[h],Ic.x,Ic.y,Ic.z)}}const Nc=new On;class tb extends ki{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new gt;s.setIndex(new Lt(n,1)),s.setAttribute("position",new Lt(i,3)),super(s,new Fn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Nc.setFromObject(this.object),Nc.isEmpty())return;const t=Nc.min,n=Nc.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class nb extends ki{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new gt;s.setIndex(new Lt(n,1)),s.setAttribute("position",new Ve(i,3)),super(s,new Fn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class ib extends Ir{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new gt;l.setAttribute("position",new Ve(s,3)),l.computeBoundingSphere(),super(l,new Fn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new gt;u.setAttribute("position",new Ve(c,3)),u.computeBoundingSphere(),this.add(new nn(u,new Dr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const S0=new D;let Dc,yf;class rb extends At{constructor(e=new D(0,0,1),t=new D(0,0,0),n=1,i=16776960,s=n*.2,l=s*.2){super(),this.type="ArrowHelper",Dc===void 0&&(Dc=new gt,Dc.setAttribute("position",new Ve([0,0,0,0,1,0],3)),yf=new Co(0,.5,1,5,1),yf.translate(0,-.5,0)),this.position.copy(t),this.line=new Ir(Dc,new Fn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new nn(yf,new Dr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,l)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{S0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(S0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class sb extends ki{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new gt;i.setAttribute("position",new Ve(t,3)),i.setAttribute("color",new Ve(n,3));const s=new Fn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Ne,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class ob{constructor(){this.type="ShapePath",this.color=new Ne,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Pa,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,l){return this.currentPath.bezierCurveTo(e,t,n,i,s,l),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(v){const w=[];for(let M=0,A=v.length;M<A;M++){const N=v[M],R=new gs;R.curves=N.curves,w.push(R)}return w}function n(v,w){const M=w.length;let A=!1;for(let N=M-1,R=0;R<M;N=R++){let L=w[N],F=w[R],W=F.x-L.x,b=F.y-L.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(L=w[R],W=-W,F=w[N],b=-b),v.y<L.y||v.y>F.y)continue;if(v.y===L.y){if(v.x===L.x)return!0}else{const P=b*(v.x-L.x)-W*(v.y-L.y);if(P===0)return!0;if(P<0)continue;A=!A}}else{if(v.y!==L.y)continue;if(F.x<=v.x&&v.x<=L.x||L.x<=v.x&&v.x<=F.x)return!0}}return A}const i=zi.isClockWise,s=this.subPaths;if(s.length===0)return[];let l,c,u;const h=[];if(s.length===1)return c=s[0],u=new gs,u.curves=c.curves,h.push(u),h;let d=!i(s[0].getPoints());d=e?!d:d;const p=[],m=[];let _=[],y=0,E;m[y]=void 0,_[y]=[];for(let v=0,w=s.length;v<w;v++)c=s[v],E=c.getPoints(),l=i(E),l=e?!l:l,l?(!d&&m[y]&&y++,m[y]={s:new gs,p:E},m[y].s.curves=c.curves,d&&y++,_[y]=[]):_[y].push({h:c,p:E[0]});if(!m[0])return t(s);if(m.length>1){let v=!1,w=0;for(let M=0,A=m.length;M<A;M++)p[M]=[];for(let M=0,A=m.length;M<A;M++){const N=_[M];for(let R=0;R<N.length;R++){const L=N[R];let F=!0;for(let W=0;W<m.length;W++)n(L.p,m[W].p)&&(M!==W&&w++,F?(F=!1,p[W].push(L)):v=!0);F&&p[M].push(L)}}w>0&&v===!1&&(_=p)}let x;for(let v=0,w=m.length;v<w;v++){u=m[v].s,h.push(u),x=_[v];for(let M=0,A=x.length;M<A;M++)u.holes.push(x[M].h)}return h}}class ab extends Si{constructor(e=1,t=1,n=1,i={}){console.warn('THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the "count" parameter to enable MRT.'),super(e,t,{...i,count:n}),this.isWebGLMultipleRenderTargets=!0}get texture(){return this.textures}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:$c}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=$c);const lb=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Md,AddEquation:br,AddOperation:f_,AdditiveAnimationBlendMode:Ld,AdditiveBlending:Pf,AgXToneMapping:__,AlphaFormat:M_,AlwaysCompare:z_,AlwaysDepth:s_,AlwaysStencilFunc:ad,AmbientLight:zv,AnimationAction:Yv,AnimationClip:Oa,AnimationLoader:lA,AnimationMixer:FA,AnimationObjectGroup:UA,AnimationUtils:rA,ArcCurve:uv,ArrayCamera:ev,ArrowHelper:rb,AttachedBindMode:Uf,Audio:Xv,AudioAnalyser:TA,AudioContext:op,AudioListener:MA,AudioLoader:yA,AxesHelper:sb,BackSide:Un,BasicDepthPacking:P_,BasicShadowMap:H0,BatchedMesh:av,Bone:qd,BooleanKeyframeTrack:Ss,Box2:WA,Box3:On,Box3Helper:nb,BoxGeometry:xs,BoxHelper:tb,BufferAttribute:Lt,BufferGeometry:gt,BufferGeometryLoader:Wv,ByteType:x_,Cache:nr,Camera:ka,CameraHelper:eb,CanvasTexture:CT,CapsuleGeometry:du,CatmullRomCurve3:hv,CineonToneMapping:m_,CircleGeometry:pu,ClampToEdgeWrapping:An,Clock:ap,Color:Ne,ColorKeyframeTrack:ip,ColorManagement:Ct,CompressedArrayTexture:AT,CompressedCubeTexture:bT,CompressedTexture:hu,CompressedTextureLoader:cA,ConeGeometry:mu,ConstantAlphaFactor:n_,ConstantColorFactor:e_,CubeCamera:Bd,CubeReflectionMapping:sr,CubeRefractionMapping:Lr,CubeTexture:Ha,CubeTextureLoader:uA,CubeUVReflectionMapping:wo,CubicBezierCurve:Jd,CubicBezierCurve3:fv,CubicInterpolant:Lv,CullFaceBack:Rf,CullFaceFront:k0,CullFaceFrontBack:fx,CullFaceNone:z0,Curve:Ei,CurvePath:pv,CustomBlending:V0,CustomToneMapping:g_,CylinderGeometry:Co,Cylindrical:GA,Data3DTexture:Ud,DataArrayTexture:su,DataTexture:Pr,DataTextureLoader:hA,DataUtils:xS,DecrementStencilOp:Ex,DecrementWrapStencilOp:Tx,DefaultLoadingManager:Dv,DepthFormat:Rr,DepthStencilFormat:_s,DepthTexture:Hd,DetachedBindMode:y_,DirectionalLight:Bv,DirectionalLightHelper:$A,DiscreteInterpolant:Iv,DisplayP3ColorSpace:ru,DodecahedronGeometry:gu,DoubleSide:Di,DstAlphaFactor:J0,DstColorFactor:j0,DynamicCopyUsage:kx,DynamicDrawUsage:Dx,DynamicReadUsage:Fx,EdgesGeometry:mv,EllipseCurve:fu,EqualCompare:U_,EqualDepth:a_,EqualStencilFunc:Rx,EquirectangularReflectionMapping:_a,EquirectangularRefractionMapping:va,Euler:ei,EventDispatcher:lr,ExtrudeGeometry:vu,FileLoader:or,Float16BufferAttribute:AS,Float32BufferAttribute:Ve,FloatType:jn,Fog:lu,FogExp2:au,FramebufferTexture:TT,FrontSide:rr,Frustum:Va,GLBufferAttribute:HA,GLSL1:Vx,GLSL3:ld,GreaterCompare:O_,GreaterDepth:c_,GreaterEqualCompare:B_,GreaterEqualDepth:l_,GreaterEqualStencilFunc:Nx,GreaterStencilFunc:Lx,GridHelper:jA,Group:mo,HalfFloatType:yo,HemisphereLight:Uv,HemisphereLightHelper:KA,IcosahedronGeometry:yu,ImageBitmapLoader:vA,ImageLoader:Fa,ImageUtils:Dd,IncrementStencilOp:Mx,IncrementWrapStencilOp:wx,InstancedBufferAttribute:Mo,InstancedBufferGeometry:Gv,InstancedInterleavedBuffer:kA,InstancedMesh:ov,Int16BufferAttribute:wS,Int32BufferAttribute:TS,Int8BufferAttribute:SS,IntType:Ed,InterleavedBuffer:cu,InterleavedBufferAttribute:vs,Interpolant:Ya,InterpolateDiscrete:Sa,InterpolateLinear:Ma,InterpolateSmooth:Vc,InvertStencilOp:Ax,KeepStencilOp:rs,KeyframeTrack:wi,LOD:rv,LatheGeometry:Wa,Layers:ms,LessCompare:D_,LessDepth:o_,LessEqualCompare:Id,LessEqualDepth:ga,LessEqualStencilFunc:Px,LessStencilFunc:Cx,Light:Or,LightProbe:Vv,Line:Ir,Line3:XA,LineBasicMaterial:Fn,LineCurve:Kd,LineCurve3:dv,LineDashedMaterial:Cv,LineLoop:lv,LineSegments:ki,LinearDisplayP3ColorSpace:za,LinearFilter:kt,LinearInterpolant:np,LinearMipMapLinearFilter:gx,LinearMipMapNearestFilter:mx,LinearMipmapLinearFilter:Ui,LinearMipmapNearestFilter:fa,LinearSRGBColorSpace:ar,LinearToneMapping:d_,LinearTransfer:wa,Loader:Gn,LoaderUtils:gd,LoadingManager:rp,LoopOnce:b_,LoopPingPong:R_,LoopRepeat:C_,LuminanceAlphaFormat:w_,LuminanceFormat:E_,MOUSE:ux,Material:vn,MaterialLoader:Au,MathUtils:iS,Matrix3:ft,Matrix4:$e,MaxEquation:Df,Mesh:nn,MeshBasicMaterial:Dr,MeshDepthMaterial:Vd,MeshDistanceMaterial:Gd,MeshLambertMaterial:Av,MeshMatcapMaterial:bv,MeshNormalMaterial:Tv,MeshPhongMaterial:Ev,MeshPhysicalMaterial:Mv,MeshStandardMaterial:ep,MeshToonMaterial:wv,MinEquation:Nf,MirroredRepeatWrapping:xa,MixOperation:h_,MultiplyBlending:If,MultiplyOperation:Ba,NearestFilter:jt,NearestMipMapLinearFilter:px,NearestMipMapNearestFilter:dx,NearestMipmapLinearFilter:os,NearestMipmapNearestFilter:Yc,NeutralToneMapping:v_,NeverCompare:N_,NeverDepth:r_,NeverStencilFunc:bx,NoBlending:ir,NoColorSpace:$i,NoToneMapping:Fi,NormalAnimationBlendMode:iu,NormalBlending:ds,NotEqualCompare:F_,NotEqualDepth:u_,NotEqualStencilFunc:Ix,NumberKeyframeTrack:Da,Object3D:At,ObjectLoader:gA,ObjectSpaceNormalMap:I_,OctahedronGeometry:Xa,OneFactor:q0,OneMinusConstantAlphaFactor:i_,OneMinusConstantColorFactor:t_,OneMinusDstAlphaFactor:K0,OneMinusDstColorFactor:Q0,OneMinusSrcAlphaFactor:qc,OneMinusSrcColorFactor:Z0,OrthographicCamera:Ga,P3Primaries:Aa,PCFShadowMap:eu,PCFSoftShadowMap:ha,PMREMGenerator:ud,Path:Pa,PerspectiveCamera:dn,Plane:Ar,PlaneGeometry:Ao,PlaneHelper:ib,PointLight:Fv,PointLightHelper:ZA,Points:cv,PointsMaterial:Yd,PolarGridHelper:QA,PolyhedronGeometry:Ur,PositionalAudio:wA,PropertyBinding:Mt,PropertyMixer:qv,QuadraticBezierCurve:jd,QuadraticBezierCurve3:Qd,Quaternion:Vn,QuaternionKeyframeTrack:Ro,QuaternionLinearInterpolant:Nv,RED_GREEN_RGTC2_Format:sd,RED_RGTC1_Format:A_,REVISION:$c,RGBADepthPacking:L_,RGBAFormat:Nn,RGBAIntegerFormat:Rd,RGBA_ASTC_10x10_Format:$f,RGBA_ASTC_10x5_Format:Kf,RGBA_ASTC_10x6_Format:jf,RGBA_ASTC_10x8_Format:Qf,RGBA_ASTC_12x10_Format:ed,RGBA_ASTC_12x12_Format:td,RGBA_ASTC_4x4_Format:Vf,RGBA_ASTC_5x4_Format:Gf,RGBA_ASTC_5x5_Format:Wf,RGBA_ASTC_6x5_Format:Xf,RGBA_ASTC_6x6_Format:qf,RGBA_ASTC_8x5_Format:Yf,RGBA_ASTC_8x6_Format:Zf,RGBA_ASTC_8x8_Format:Jf,RGBA_BPTC_Format:Hc,RGBA_ETC2_EAC_Format:Hf,RGBA_PVRTC_2BPPV1_Format:zf,RGBA_PVRTC_4BPPV1_Format:Bf,RGBA_S3TC_DXT1_Format:Bc,RGBA_S3TC_DXT3_Format:zc,RGBA_S3TC_DXT5_Format:kc,RGB_BPTC_SIGNED_Format:nd,RGB_BPTC_UNSIGNED_Format:id,RGB_ETC1_Format:Pd,RGB_ETC2_Format:kf,RGB_PVRTC_2BPPV1_Format:Ff,RGB_PVRTC_4BPPV1_Format:Of,RGB_S3TC_DXT1_Format:Fc,RGFormat:T_,RGIntegerFormat:Cd,RawShaderMaterial:Sv,Ray:To,Raycaster:Zv,Rec709Primaries:Ta,RectAreaLight:kv,RedFormat:Ad,RedIntegerFormat:bd,ReinhardToneMapping:p_,RenderTarget:G_,RepeatWrapping:ya,ReplaceStencilOp:Sx,ReverseSubtractEquation:W0,RingGeometry:xu,SIGNED_RED_GREEN_RGTC2_Format:od,SIGNED_RED_RGTC1_Format:rd,SRGBColorSpace:di,SRGBTransfer:Dt,Scene:Kc,ShaderChunk:mt,ShaderLib:xi,ShaderMaterial:Mi,ShadowMaterial:xv,Shape:gs,ShapeGeometry:Su,ShapePath:ob,ShapeUtils:zi,ShortType:S_,Skeleton:uu,SkeletonHelper:YA,SkinnedMesh:sv,Source:us,Sphere:bn,SphereGeometry:qa,Spherical:VA,SphericalHarmonics3:Hv,SplineCurve:$d,SpotLight:Ov,SpotLightHelper:qA,Sprite:iv,SpriteMaterial:Xd,SrcAlphaFactor:Xc,SrcAlphaSaturateFactor:$0,SrcColorFactor:Y0,StaticCopyUsage:zx,StaticDrawUsage:ba,StaticReadUsage:Ox,StereoCamera:xA,StreamCopyUsage:Hx,StreamDrawUsage:Ux,StreamReadUsage:Bx,StringKeyframeTrack:Ms,SubtractEquation:G0,SubtractiveBlending:Lf,TOUCH:hx,TangentSpaceNormalMap:Nr,TetrahedronGeometry:Mu,Texture:Vt,TextureLoader:fA,TorusGeometry:Eu,TorusKnotGeometry:wu,Triangle:Qn,TriangleFanDrawMode:yx,TriangleStripDrawMode:vx,TrianglesDrawMode:_x,TubeGeometry:Tu,UVMapping:tu,Uint16BufferAttribute:Od,Uint32BufferAttribute:Fd,Uint8BufferAttribute:MS,Uint8ClampedBufferAttribute:ES,Uniform:up,UniformsGroup:zA,UniformsLib:Ee,UniformsUtils:q_,UnsignedByteType:Bi,UnsignedInt248Type:Cr,UnsignedIntType:tr,UnsignedShort4444Type:wd,UnsignedShort5551Type:Td,UnsignedShortType:nu,VSMShadowMap:yi,Vector2:he,Vector3:D,Vector4:Rt,VectorKeyframeTrack:Ua,VideoTexture:wT,WebGL1Renderer:tv,WebGL3DRenderTarget:cS,WebGLArrayRenderTarget:lS,WebGLCoordinateSystem:Oi,WebGLCubeRenderTarget:zd,WebGLMultipleRenderTargets:ab,WebGLRenderTarget:Si,WebGLRenderer:Wd,WebGLUtils:$_,WebGPUCoordinateSystem:Ca,WireframeGeometry:yv,WrapAroundEnding:Ea,ZeroCurvatureEnding:ls,ZeroFactor:X0,ZeroSlopeEnding:cs,ZeroStencilOp:xx,_SRGBAFormat:Zc,createCanvasElement:H_},Symbol.toStringTag,{value:"Module"}));var Kv={exports:{}},Es={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Es.ConcurrentRoot=1;Es.ContinuousEventPriority=4;Es.DefaultEventPriority=16;Es.DiscreteEventPriority=1;Es.IdleEventPriority=536870912;Es.LegacyRoot=0;Kv.exports=Es;var _o=Kv.exports;function cb(r){let e;const t=new Set,n=(h,d)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=d?p:Object.assign({},e,p),t.forEach(_=>_(e,m))}},i=()=>e,s=(h,d=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=d(e);function _(){const y=d(e);if(!p(m,y)){const E=m;h(m=y,E)}}return t.add(_),()=>t.delete(_)},u={setState:n,getState:i,subscribe:(h,d,p)=>d||p?s(h,d,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const ub=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),M0=ub?ze.useEffect:ze.useLayoutEffect;function hb(r){const e=typeof r=="function"?cb(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=ze.useReducer(x=>x+1,0),l=e.getState(),c=ze.useRef(l),u=ze.useRef(n),h=ze.useRef(i),d=ze.useRef(!1),p=ze.useRef();p.current===void 0&&(p.current=n(l));let m,_=!1;(c.current!==l||u.current!==n||h.current!==i||d.current)&&(m=n(l),_=!i(p.current,m)),M0(()=>{_&&(p.current=m),c.current=l,u.current=n,h.current=i,d.current=!1});const y=ze.useRef(l);M0(()=>{const x=()=>{try{const w=e.getState(),M=u.current(w);h.current(p.current,M)||(c.current=w,p.current=M,s())}catch{d.current=!0,s()}},v=e.subscribe(x);return e.getState()!==y.current&&x(),v},[]);const E=_?m:p.current;return ze.useDebugValue(E),E};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}var jv={exports:{}},Qv={exports:{}},$v={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(r){function e(k,X){var J=k.length;k.push(X);e:for(;0<J;){var re=J-1>>>1,me=k[re];if(0<i(me,X))k[re]=X,k[J]=me,J=re;else break e}}function t(k){return k.length===0?null:k[0]}function n(k){if(k.length===0)return null;var X=k[0],J=k.pop();if(J!==X){k[0]=J;e:for(var re=0,me=k.length,Re=me>>>1;re<Re;){var j=2*(re+1)-1,de=k[j],we=j+1,He=k[we];if(0>i(de,J))we<me&&0>i(He,de)?(k[re]=He,k[we]=J,re=we):(k[re]=de,k[j]=J,re=j);else if(we<me&&0>i(He,J))k[re]=He,k[we]=J,re=we;else break e}}return X}function i(k,X){var J=k.sortIndex-X.sortIndex;return J!==0?J:k.id-X.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var l=Date,c=l.now();r.unstable_now=function(){return l.now()-c}}var u=[],h=[],d=1,p=null,m=3,_=!1,y=!1,E=!1,x=typeof setTimeout=="function"?setTimeout:null,v=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function M(k){for(var X=t(h);X!==null;){if(X.callback===null)n(h);else if(X.startTime<=k)n(h),X.sortIndex=X.expirationTime,e(u,X);else break;X=t(h)}}function A(k){if(E=!1,M(k),!y)if(t(u)!==null)y=!0,Z(N);else{var X=t(h);X!==null&&ce(A,X.startTime-k)}}function N(k,X){y=!1,E&&(E=!1,v(F),F=-1),_=!0;var J=m;try{for(M(X),p=t(u);p!==null&&(!(p.expirationTime>X)||k&&!P());){var re=p.callback;if(typeof re=="function"){p.callback=null,m=p.priorityLevel;var me=re(p.expirationTime<=X);X=r.unstable_now(),typeof me=="function"?p.callback=me:p===t(u)&&n(u),M(X)}else n(u);p=t(u)}if(p!==null)var Re=!0;else{var j=t(h);j!==null&&ce(A,j.startTime-X),Re=!1}return Re}finally{p=null,m=J,_=!1}}var R=!1,L=null,F=-1,W=5,b=-1;function P(){return!(r.unstable_now()-b<W)}function $(){if(L!==null){var k=r.unstable_now();b=k;var X=!0;try{X=L(!0,k)}finally{X?ae():(R=!1,L=null)}}else R=!1}var ae;if(typeof w=="function")ae=function(){w($)};else if(typeof MessageChannel<"u"){var z=new MessageChannel,ie=z.port2;z.port1.onmessage=$,ae=function(){ie.postMessage(null)}}else ae=function(){x($,0)};function Z(k){L=k,R||(R=!0,ae())}function ce(k,X){F=x(function(){k(r.unstable_now())},X)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(k){k.callback=null},r.unstable_continueExecution=function(){y||_||(y=!0,Z(N))},r.unstable_forceFrameRate=function(k){0>k||125<k?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):W=0<k?Math.floor(1e3/k):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(k){switch(m){case 1:case 2:case 3:var X=3;break;default:X=m}var J=m;m=X;try{return k()}finally{m=J}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(k,X){switch(k){case 1:case 2:case 3:case 4:case 5:break;default:k=3}var J=m;m=k;try{return X()}finally{m=J}},r.unstable_scheduleCallback=function(k,X,J){var re=r.unstable_now();switch(typeof J=="object"&&J!==null?(J=J.delay,J=typeof J=="number"&&0<J?re+J:re):J=re,k){case 1:var me=-1;break;case 2:me=250;break;case 5:me=1073741823;break;case 4:me=1e4;break;default:me=5e3}return me=J+me,k={id:d++,callback:X,priorityLevel:k,startTime:J,expirationTime:me,sortIndex:-1},J>re?(k.sortIndex=J,e(h,k),t(u)===null&&k===t(h)&&(E?(v(F),F=-1):E=!0,ce(A,J-re))):(k.sortIndex=me,e(u,k),y||_||(y=!0,Z(N))),k},r.unstable_shouldYield=P,r.unstable_wrapCallback=function(k){var X=m;return function(){var J=m;m=X;try{return k.apply(this,arguments)}finally{m=J}}}})($v);Qv.exports=$v;var vd=Qv.exports;/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var fb=function(e){var t={},n=ze,i=vd,s=Object.assign;function l(o){for(var a="https://reactjs.org/docs/error-decoder.html?invariant="+o,f=1;f<arguments.length;f++)a+="&args[]="+encodeURIComponent(arguments[f]);return"Minified React error #"+o+"; visit "+a+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),_=Symbol.for("react.provider"),y=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),x=Symbol.for("react.suspense"),v=Symbol.for("react.suspense_list"),w=Symbol.for("react.memo"),M=Symbol.for("react.lazy"),A=Symbol.for("react.offscreen"),N=Symbol.iterator;function R(o){return o===null||typeof o!="object"?null:(o=N&&o[N]||o["@@iterator"],typeof o=="function"?o:null)}function L(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case d:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case x:return"Suspense";case v:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case _:return(o._context.displayName||"Context")+".Provider";case E:var a=o.render;return o=o.displayName,o||(o=a.displayName||a.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case w:return a=o.displayName||null,a!==null?a:L(o.type)||"Memo";case M:a=o._payload,o=o._init;try{return L(o(a))}catch{}}return null}function F(o){var a=o.type;switch(o.tag){case 24:return"Cache";case 9:return(a.displayName||"Context")+".Consumer";case 10:return(a._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=a.render,o=o.displayName||o.name||"",a.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return a;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return L(a);case 8:return a===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a}return null}function W(o){var a=o,f=o;if(o.alternate)for(;a.return;)a=a.return;else{o=a;do a=o,a.flags&4098&&(f=a.return),o=a.return;while(o)}return a.tag===3?f:null}function b(o){if(W(o)!==o)throw Error(l(188))}function P(o){var a=o.alternate;if(!a){if(a=W(o),a===null)throw Error(l(188));return a!==o?null:o}for(var f=o,g=a;;){var S=f.return;if(S===null)break;var T=S.alternate;if(T===null){if(g=S.return,g!==null){f=g;continue}break}if(S.child===T.child){for(T=S.child;T;){if(T===f)return b(S),o;if(T===g)return b(S),a;T=T.sibling}throw Error(l(188))}if(f.return!==g.return)f=S,g=T;else{for(var O=!1,H=S.child;H;){if(H===f){O=!0,f=S,g=T;break}if(H===g){O=!0,g=S,f=T;break}H=H.sibling}if(!O){for(H=T.child;H;){if(H===f){O=!0,f=T,g=S;break}if(H===g){O=!0,g=T,f=S;break}H=H.sibling}if(!O)throw Error(l(189))}}if(f.alternate!==g)throw Error(l(190))}if(f.tag!==3)throw Error(l(188));return f.stateNode.current===f?o:a}function $(o){return o=P(o),o!==null?ae(o):null}function ae(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var a=ae(o);if(a!==null)return a;o=o.sibling}return null}function z(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var a=z(o);if(a!==null)return a}o=o.sibling}return null}var ie=Array.isArray,Z=e.getPublicInstance,ce=e.getRootHostContext,k=e.getChildHostContext,X=e.prepareForCommit,J=e.resetAfterCommit,re=e.createInstance,me=e.appendInitialChild,Re=e.finalizeInitialChildren,j=e.prepareUpdate,de=e.shouldSetTextContent,we=e.createTextInstance,He=e.scheduleTimeout,Ge=e.cancelTimeout,Oe=e.noTimeout,at=e.isPrimaryRenderer,Fe=e.supportsMutation,B=e.supportsPersistence,ge=e.supportsHydration,ue=e.getInstanceFromNode,ye=e.preparePortalMount,fe=e.getCurrentEventPriority,De=e.detachDeletedInstance,Le=e.supportsMicrotasks,ke=e.scheduleMicrotask,lt=e.supportsTestSelectors,U=e.findFiberRoot,C=e.getBoundingRect,se=e.getTextContent,le=e.isHiddenSubtree,_e=e.matchAccessibilityRole,pe=e.setFocusIfFocusable,it=e.setupIntersectionObserver,je=e.appendChild,Me=e.appendChildToContainer,Te=e.commitTextUpdate,rt=e.commitMount,xe=e.commitUpdate,Gt=e.insertBefore,vt=e.insertInContainerBefore,Je=e.removeChild,We=e.removeChildFromContainer,Xe=e.resetTextContent,St=e.hideInstance,ct=e.hideTextInstance,Nt=e.unhideInstance,V=e.unhideTextInstance,Ae=e.clearContainer,Q=e.cloneInstance,Se=e.createContainerChildSet,be=e.appendChildToContainerChildSet,xt=e.finalizeContainerChildren,bt=e.replaceContainerChildren,Qt=e.cloneHiddenInstance,Cn=e.cloneHiddenTextInstance,Pt=e.canHydrateInstance,pn=e.canHydrateTextInstance,ti=e.canHydrateSuspenseInstance,Po=e.isSuspenseInstancePending,Lo=e.isSuspenseInstanceFallback,ws=e.registerSuspenseInstanceRetry,cr=e.getNextHydratableSibling,Ts=e.getFirstHydratableChild,Ja=e.getFirstHydratableChildWithinContainer,Ka=e.getFirstHydratableChildWithinSuspenseInstance,bu=e.hydrateInstance,Cu=e.hydrateTextInstance,Ru=e.hydrateSuspenseInstance,I=e.getNextHydratableInstanceAfterSuspenseInstance,q=e.commitHydratedContainer,ee=e.commitHydratedSuspenseInstance,te=e.clearSuspenseBoundary,K=e.clearSuspenseBoundaryFromContainer,Ie=e.shouldDeleteUnhydratedTailInstances,Ye=e.didNotMatchHydratedContainerTextInstance,Qe=e.didNotMatchHydratedTextInstance,et;function st(o){if(et===void 0)try{throw Error()}catch(f){var a=f.stack.trim().match(/\n( *(at )?)/);et=a&&a[1]||""}return`
`+et+o}var nt=!1;function ot(o,a){if(!o||nt)return"";nt=!0;var f=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(a)if(a=function(){throw Error()},Object.defineProperty(a.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(a,[])}catch(ve){var g=ve}Reflect.construct(o,[],a)}else{try{a.call()}catch(ve){g=ve}o.call(a.prototype)}else{try{throw Error()}catch(ve){g=ve}o()}}catch(ve){if(ve&&g&&typeof ve.stack=="string"){for(var S=ve.stack.split(`
`),T=g.stack.split(`
`),O=S.length-1,H=T.length-1;1<=O&&0<=H&&S[O]!==T[H];)H--;for(;1<=O&&0<=H;O--,H--)if(S[O]!==T[H]){if(O!==1||H!==1)do if(O--,H--,0>H||S[O]!==T[H]){var oe=`
`+S[O].replace(" at new "," at ");return o.displayName&&oe.includes("<anonymous>")&&(oe=oe.replace("<anonymous>",o.displayName)),oe}while(1<=O&&0<=H);break}}}finally{nt=!1,Error.prepareStackTrace=f}return(o=o?o.displayName||o.name:"")?st(o):""}var Bt=Object.prototype.hasOwnProperty,mn=[],Ut=-1;function an(o){return{current:o}}function tt(o){0>Ut||(o.current=mn[Ut],mn[Ut]=null,Ut--)}function Ue(o,a){Ut++,mn[Ut]=o.current,o.current=a}var ni={},pt=an(ni),Wt=an(!1),Ti=ni;function ii(o,a){var f=o.type.contextTypes;if(!f)return ni;var g=o.stateNode;if(g&&g.__reactInternalMemoizedUnmaskedChildContext===a)return g.__reactInternalMemoizedMaskedChildContext;var S={},T;for(T in f)S[T]=a[T];return g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=a,o.__reactInternalMemoizedMaskedChildContext=S),S}function ln(o){return o=o.childContextTypes,o!=null}function Zt(){tt(Wt),tt(pt)}function Ai(o,a,f){if(pt.current!==ni)throw Error(l(168));Ue(pt,a),Ue(Wt,f)}function As(o,a,f){var g=o.stateNode;if(a=a.childContextTypes,typeof g.getChildContext!="function")return f;g=g.getChildContext();for(var S in g)if(!(S in a))throw Error(l(108,F(o)||"Unknown",S));return s({},f,g)}function gn(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||ni,Ti=pt.current,Ue(pt,o),Ue(Wt,Wt.current),!0}function bs(o,a,f){var g=o.stateNode;if(!g)throw Error(l(169));f?(o=As(o,a,Ti),g.__reactInternalMemoizedMergedChildContext=o,tt(Wt),tt(pt),Ue(pt,o)):tt(Wt),Ue(Wt,f)}var Wn=Math.clz32?Math.clz32:Sy,ja=Math.log,xy=Math.LN2;function Sy(o){return o>>>=0,o===0?32:31-(ja(o)/xy|0)|0}var Qa=64,$a=4194304;function Io(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function el(o,a){var f=o.pendingLanes;if(f===0)return 0;var g=0,S=o.suspendedLanes,T=o.pingedLanes,O=f&268435455;if(O!==0){var H=O&~S;H!==0?g=Io(H):(T&=O,T!==0&&(g=Io(T)))}else O=f&~S,O!==0?g=Io(O):T!==0&&(g=Io(T));if(g===0)return 0;if(a!==0&&a!==g&&!(a&S)&&(S=g&-g,T=a&-a,S>=T||S===16&&(T&4194240)!==0))return a;if(g&4&&(g|=f&16),a=o.entangledLanes,a!==0)for(o=o.entanglements,a&=g;0<a;)f=31-Wn(a),S=1<<f,g|=o[f],a&=~S;return g}function My(o,a){switch(o){case 1:case 2:case 4:return a+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Ey(o,a){for(var f=o.suspendedLanes,g=o.pingedLanes,S=o.expirationTimes,T=o.pendingLanes;0<T;){var O=31-Wn(T),H=1<<O,oe=S[O];oe===-1?(!(H&f)||H&g)&&(S[O]=My(H,a)):oe<=a&&(o.expiredLanes|=H),T&=~H}}function Pu(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function Lu(o){for(var a=[],f=0;31>f;f++)a.push(o);return a}function No(o,a,f){o.pendingLanes|=a,a!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,a=31-Wn(a),o[a]=f}function wy(o,a){var f=o.pendingLanes&~a;o.pendingLanes=a,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=a,o.mutableReadLanes&=a,o.entangledLanes&=a,a=o.entanglements;var g=o.eventTimes;for(o=o.expirationTimes;0<f;){var S=31-Wn(f),T=1<<S;a[S]=0,g[S]=-1,o[S]=-1,f&=~T}}function Iu(o,a){var f=o.entangledLanes|=a;for(o=o.entanglements;f;){var g=31-Wn(f),S=1<<g;S&a|o[g]&a&&(o[g]|=a),f&=~S}}var Et=0;function dp(o){return o&=-o,1<o?4<o?o&268435455?16:536870912:4:1}var Nu=i.unstable_scheduleCallback,pp=i.unstable_cancelCallback,Ty=i.unstable_shouldYield,Ay=i.unstable_requestPaint,cn=i.unstable_now,Du=i.unstable_ImmediatePriority,by=i.unstable_UserBlockingPriority,Uu=i.unstable_NormalPriority,Cy=i.unstable_IdlePriority,tl=null,bi=null;function Ry(o){if(bi&&typeof bi.onCommitFiberRoot=="function")try{bi.onCommitFiberRoot(tl,o,void 0,(o.current.flags&128)===128)}catch{}}function Py(o,a){return o===a&&(o!==0||1/o===1/a)||o!==o&&a!==a}var Ci=typeof Object.is=="function"?Object.is:Py,Hi=null,nl=!1,Ou=!1;function mp(o){Hi===null?Hi=[o]:Hi.push(o)}function Ly(o){nl=!0,mp(o)}function Ri(){if(!Ou&&Hi!==null){Ou=!0;var o=0,a=Et;try{var f=Hi;for(Et=1;o<f.length;o++){var g=f[o];do g=g(!0);while(g!==null)}Hi=null,nl=!1}catch(S){throw Hi!==null&&(Hi=Hi.slice(o+1)),Nu(Du,Ri),S}finally{Et=a,Ou=!1}}return null}var Iy=c.ReactCurrentBatchConfig;function il(o,a){if(Ci(o,a))return!0;if(typeof o!="object"||o===null||typeof a!="object"||a===null)return!1;var f=Object.keys(o),g=Object.keys(a);if(f.length!==g.length)return!1;for(g=0;g<f.length;g++){var S=f[g];if(!Bt.call(a,S)||!Ci(o[S],a[S]))return!1}return!0}function Ny(o){switch(o.tag){case 5:return st(o.type);case 16:return st("Lazy");case 13:return st("Suspense");case 19:return st("SuspenseList");case 0:case 2:case 15:return o=ot(o.type,!1),o;case 11:return o=ot(o.type.render,!1),o;case 1:return o=ot(o.type,!0),o;default:return""}}function pi(o,a){if(o&&o.defaultProps){a=s({},a),o=o.defaultProps;for(var f in o)a[f]===void 0&&(a[f]=o[f]);return a}return a}var rl=an(null),sl=null,Cs=null,Fu=null;function Bu(){Fu=Cs=sl=null}function gp(o,a,f){at?(Ue(rl,a._currentValue),a._currentValue=f):(Ue(rl,a._currentValue2),a._currentValue2=f)}function zu(o){var a=rl.current;tt(rl),at?o._currentValue=a:o._currentValue2=a}function ku(o,a,f){for(;o!==null;){var g=o.alternate;if((o.childLanes&a)!==a?(o.childLanes|=a,g!==null&&(g.childLanes|=a)):g!==null&&(g.childLanes&a)!==a&&(g.childLanes|=a),o===f)break;o=o.return}}function Rs(o,a){sl=o,Fu=Cs=null,o=o.dependencies,o!==null&&o.firstContext!==null&&(o.lanes&a&&(Yn=!0),o.firstContext=null)}function ri(o){var a=at?o._currentValue:o._currentValue2;if(Fu!==o)if(o={context:o,memoizedValue:a,next:null},Cs===null){if(sl===null)throw Error(l(308));Cs=o,sl.dependencies={lanes:0,firstContext:o}}else Cs=Cs.next=o;return a}var Pi=null,ur=!1;function Hu(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function _p(o,a){o=o.updateQueue,a.updateQueue===o&&(a.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function Vi(o,a){return{eventTime:o,lane:a,tag:0,payload:null,callback:null,next:null}}function hr(o,a){var f=o.updateQueue;f!==null&&(f=f.shared,$t!==null&&o.mode&1&&!(yt&2)?(o=f.interleaved,o===null?(a.next=a,Pi===null?Pi=[f]:Pi.push(f)):(a.next=o.next,o.next=a),f.interleaved=a):(o=f.pending,o===null?a.next=a:(a.next=o.next,o.next=a),f.pending=a))}function ol(o,a,f){if(a=a.updateQueue,a!==null&&(a=a.shared,(f&4194240)!==0)){var g=a.lanes;g&=o.pendingLanes,f|=g,a.lanes=f,Iu(o,f)}}function vp(o,a){var f=o.updateQueue,g=o.alternate;if(g!==null&&(g=g.updateQueue,f===g)){var S=null,T=null;if(f=f.firstBaseUpdate,f!==null){do{var O={eventTime:f.eventTime,lane:f.lane,tag:f.tag,payload:f.payload,callback:f.callback,next:null};T===null?S=T=O:T=T.next=O,f=f.next}while(f!==null);T===null?S=T=a:T=T.next=a}else S=T=a;f={baseState:g.baseState,firstBaseUpdate:S,lastBaseUpdate:T,shared:g.shared,effects:g.effects},o.updateQueue=f;return}o=f.lastBaseUpdate,o===null?f.firstBaseUpdate=a:o.next=a,f.lastBaseUpdate=a}function al(o,a,f,g){var S=o.updateQueue;ur=!1;var T=S.firstBaseUpdate,O=S.lastBaseUpdate,H=S.shared.pending;if(H!==null){S.shared.pending=null;var oe=H,ve=oe.next;oe.next=null,O===null?T=ve:O.next=ve,O=oe;var Be=o.alternate;Be!==null&&(Be=Be.updateQueue,H=Be.lastBaseUpdate,H!==O&&(H===null?Be.firstBaseUpdate=ve:H.next=ve,Be.lastBaseUpdate=oe))}if(T!==null){var ut=S.baseState;O=0,Be=ve=oe=null,H=T;do{var Ke=H.lane,It=H.eventTime;if((g&Ke)===Ke){Be!==null&&(Be=Be.next={eventTime:It,lane:0,tag:H.tag,payload:H.payload,callback:H.callback,next:null});e:{var Ze=o,Mn=H;switch(Ke=a,It=f,Mn.tag){case 1:if(Ze=Mn.payload,typeof Ze=="function"){ut=Ze.call(It,ut,Ke);break e}ut=Ze;break e;case 3:Ze.flags=Ze.flags&-65537|128;case 0:if(Ze=Mn.payload,Ke=typeof Ze=="function"?Ze.call(It,ut,Ke):Ze,Ke==null)break e;ut=s({},ut,Ke);break e;case 2:ur=!0}}H.callback!==null&&H.lane!==0&&(o.flags|=64,Ke=S.effects,Ke===null?S.effects=[H]:Ke.push(H))}else It={eventTime:It,lane:Ke,tag:H.tag,payload:H.payload,callback:H.callback,next:null},Be===null?(ve=Be=It,oe=ut):Be=Be.next=It,O|=Ke;if(H=H.next,H===null){if(H=S.shared.pending,H===null)break;Ke=H,H=Ke.next,Ke.next=null,S.lastBaseUpdate=Ke,S.shared.pending=null}}while(!0);if(Be===null&&(oe=ut),S.baseState=oe,S.firstBaseUpdate=ve,S.lastBaseUpdate=Be,a=S.shared.interleaved,a!==null){S=a;do O|=S.lane,S=S.next;while(S!==a)}else T===null&&(S.shared.lanes=0);Bs|=O,o.lanes=O,o.memoizedState=ut}}function yp(o,a,f){if(o=a.effects,a.effects=null,o!==null)for(a=0;a<o.length;a++){var g=o[a],S=g.callback;if(S!==null){if(g.callback=null,g=f,typeof S!="function")throw Error(l(191,S));S.call(g)}}}var xp=new n.Component().refs;function Vu(o,a,f,g){a=o.memoizedState,f=f(g,a),f=f==null?a:s({},a,f),o.memoizedState=f,o.lanes===0&&(o.updateQueue.baseState=f)}var ll={isMounted:function(o){return(o=o._reactInternals)?W(o)===o:!1},enqueueSetState:function(o,a,f){o=o._reactInternals;var g=Pn(),S=pr(o),T=Vi(g,S);T.payload=a,f!=null&&(T.callback=f),hr(o,T),a=ci(o,S,g),a!==null&&ol(a,o,S)},enqueueReplaceState:function(o,a,f){o=o._reactInternals;var g=Pn(),S=pr(o),T=Vi(g,S);T.tag=1,T.payload=a,f!=null&&(T.callback=f),hr(o,T),a=ci(o,S,g),a!==null&&ol(a,o,S)},enqueueForceUpdate:function(o,a){o=o._reactInternals;var f=Pn(),g=pr(o),S=Vi(f,g);S.tag=2,a!=null&&(S.callback=a),hr(o,S),a=ci(o,g,f),a!==null&&ol(a,o,g)}};function Sp(o,a,f,g,S,T,O){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(g,T,O):a.prototype&&a.prototype.isPureReactComponent?!il(f,g)||!il(S,T):!0}function Mp(o,a,f){var g=!1,S=ni,T=a.contextType;return typeof T=="object"&&T!==null?T=ri(T):(S=ln(a)?Ti:pt.current,g=a.contextTypes,T=(g=g!=null)?ii(o,S):ni),a=new a(f,T),o.memoizedState=a.state!==null&&a.state!==void 0?a.state:null,a.updater=ll,o.stateNode=a,a._reactInternals=o,g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=S,o.__reactInternalMemoizedMaskedChildContext=T),a}function Ep(o,a,f,g){o=a.state,typeof a.componentWillReceiveProps=="function"&&a.componentWillReceiveProps(f,g),typeof a.UNSAFE_componentWillReceiveProps=="function"&&a.UNSAFE_componentWillReceiveProps(f,g),a.state!==o&&ll.enqueueReplaceState(a,a.state,null)}function Gu(o,a,f,g){var S=o.stateNode;S.props=f,S.state=o.memoizedState,S.refs=xp,Hu(o);var T=a.contextType;typeof T=="object"&&T!==null?S.context=ri(T):(T=ln(a)?Ti:pt.current,S.context=ii(o,T)),S.state=o.memoizedState,T=a.getDerivedStateFromProps,typeof T=="function"&&(Vu(o,a,T,f),S.state=o.memoizedState),typeof a.getDerivedStateFromProps=="function"||typeof S.getSnapshotBeforeUpdate=="function"||typeof S.UNSAFE_componentWillMount!="function"&&typeof S.componentWillMount!="function"||(a=S.state,typeof S.componentWillMount=="function"&&S.componentWillMount(),typeof S.UNSAFE_componentWillMount=="function"&&S.UNSAFE_componentWillMount(),a!==S.state&&ll.enqueueReplaceState(S,S.state,null),al(o,f,S,g),S.state=o.memoizedState),typeof S.componentDidMount=="function"&&(o.flags|=4194308)}var Ps=[],Ls=0,cl=null,ul=0,si=[],oi=0,Fr=null,Gi=1,Wi="";function Br(o,a){Ps[Ls++]=ul,Ps[Ls++]=cl,cl=o,ul=a}function wp(o,a,f){si[oi++]=Gi,si[oi++]=Wi,si[oi++]=Fr,Fr=o;var g=Gi;o=Wi;var S=32-Wn(g)-1;g&=~(1<<S),f+=1;var T=32-Wn(a)+S;if(30<T){var O=S-S%5;T=(g&(1<<O)-1).toString(32),g>>=O,S-=O,Gi=1<<32-Wn(a)+S|f<<S|g,Wi=T+o}else Gi=1<<T|f<<S|g,Wi=o}function Wu(o){o.return!==null&&(Br(o,1),wp(o,1,0))}function Xu(o){for(;o===cl;)cl=Ps[--Ls],Ps[Ls]=null,ul=Ps[--Ls],Ps[Ls]=null;for(;o===Fr;)Fr=si[--oi],si[oi]=null,Wi=si[--oi],si[oi]=null,Gi=si[--oi],si[oi]=null}var Xn=null,qn=null,Ft=!1,Do=!1,mi=null;function Tp(o,a){var f=ui(5,null,null,0);f.elementType="DELETED",f.stateNode=a,f.return=o,a=o.deletions,a===null?(o.deletions=[f],o.flags|=16):a.push(f)}function Ap(o,a){switch(o.tag){case 5:return a=Pt(a,o.type,o.pendingProps),a!==null?(o.stateNode=a,Xn=o,qn=Ts(a),!0):!1;case 6:return a=pn(a,o.pendingProps),a!==null?(o.stateNode=a,Xn=o,qn=null,!0):!1;case 13:if(a=ti(a),a!==null){var f=Fr!==null?{id:Gi,overflow:Wi}:null;return o.memoizedState={dehydrated:a,treeContext:f,retryLane:1073741824},f=ui(18,null,null,0),f.stateNode=a,f.return=o,o.child=f,Xn=o,qn=null,!0}return!1;default:return!1}}function qu(o){return(o.mode&1)!==0&&(o.flags&128)===0}function Yu(o){if(Ft){var a=qn;if(a){var f=a;if(!Ap(o,a)){if(qu(o))throw Error(l(418));a=cr(f);var g=Xn;a&&Ap(o,a)?Tp(g,f):(o.flags=o.flags&-4097|2,Ft=!1,Xn=o)}}else{if(qu(o))throw Error(l(418));o.flags=o.flags&-4097|2,Ft=!1,Xn=o}}}function bp(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;Xn=o}function Uo(o){if(!ge||o!==Xn)return!1;if(!Ft)return bp(o),Ft=!0,!1;if(o.tag!==3&&(o.tag!==5||Ie(o.type)&&!de(o.type,o.memoizedProps))){var a=qn;if(a){if(qu(o)){for(o=qn;o;)o=cr(o);throw Error(l(418))}for(;a;)Tp(o,a),a=cr(a)}}if(bp(o),o.tag===13){if(!ge)throw Error(l(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));qn=I(o)}else qn=Xn?cr(o.stateNode):null;return!0}function Is(){ge&&(qn=Xn=null,Do=Ft=!1)}function Zu(o){mi===null?mi=[o]:mi.push(o)}function Oo(o,a,f){if(o=f.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(f._owner){if(f=f._owner,f){if(f.tag!==1)throw Error(l(309));var g=f.stateNode}if(!g)throw Error(l(147,o));var S=g,T=""+o;return a!==null&&a.ref!==null&&typeof a.ref=="function"&&a.ref._stringRef===T?a.ref:(a=function(O){var H=S.refs;H===xp&&(H=S.refs={}),O===null?delete H[T]:H[T]=O},a._stringRef=T,a)}if(typeof o!="string")throw Error(l(284));if(!f._owner)throw Error(l(290,o))}return o}function hl(o,a){throw o=Object.prototype.toString.call(a),Error(l(31,o==="[object Object]"?"object with keys {"+Object.keys(a).join(", ")+"}":o))}function Cp(o){var a=o._init;return a(o._payload)}function Rp(o){function a(Y,G){if(o){var ne=Y.deletions;ne===null?(Y.deletions=[G],Y.flags|=16):ne.push(G)}}function f(Y,G){if(!o)return null;for(;G!==null;)a(Y,G),G=G.sibling;return null}function g(Y,G){for(Y=new Map;G!==null;)G.key!==null?Y.set(G.key,G):Y.set(G.index,G),G=G.sibling;return Y}function S(Y,G){return Y=gr(Y,G),Y.index=0,Y.sibling=null,Y}function T(Y,G,ne){return Y.index=ne,o?(ne=Y.alternate,ne!==null?(ne=ne.index,ne<G?(Y.flags|=2,G):ne):(Y.flags|=2,G)):(Y.flags|=1048576,G)}function O(Y){return o&&Y.alternate===null&&(Y.flags|=2),Y}function H(Y,G,ne,Pe){return G===null||G.tag!==6?(G=Lh(ne,Y.mode,Pe),G.return=Y,G):(G=S(G,ne),G.return=Y,G)}function oe(Y,G,ne,Pe){var qe=ne.type;return qe===d?Be(Y,G,ne.props.children,Pe,ne.key):G!==null&&(G.elementType===qe||typeof qe=="object"&&qe!==null&&qe.$$typeof===M&&Cp(qe)===G.type)?(Pe=S(G,ne.props),Pe.ref=Oo(Y,G,ne),Pe.return=Y,Pe):(Pe=Vl(ne.type,ne.key,ne.props,null,Y.mode,Pe),Pe.ref=Oo(Y,G,ne),Pe.return=Y,Pe)}function ve(Y,G,ne,Pe){return G===null||G.tag!==4||G.stateNode.containerInfo!==ne.containerInfo||G.stateNode.implementation!==ne.implementation?(G=Ih(ne,Y.mode,Pe),G.return=Y,G):(G=S(G,ne.children||[]),G.return=Y,G)}function Be(Y,G,ne,Pe,qe){return G===null||G.tag!==7?(G=Xr(ne,Y.mode,Pe,qe),G.return=Y,G):(G=S(G,ne),G.return=Y,G)}function ut(Y,G,ne){if(typeof G=="string"&&G!==""||typeof G=="number")return G=Lh(""+G,Y.mode,ne),G.return=Y,G;if(typeof G=="object"&&G!==null){switch(G.$$typeof){case u:return ne=Vl(G.type,G.key,G.props,null,Y.mode,ne),ne.ref=Oo(Y,null,G),ne.return=Y,ne;case h:return G=Ih(G,Y.mode,ne),G.return=Y,G;case M:var Pe=G._init;return ut(Y,Pe(G._payload),ne)}if(ie(G)||R(G))return G=Xr(G,Y.mode,ne,null),G.return=Y,G;hl(Y,G)}return null}function Ke(Y,G,ne,Pe){var qe=G!==null?G.key:null;if(typeof ne=="string"&&ne!==""||typeof ne=="number")return qe!==null?null:H(Y,G,""+ne,Pe);if(typeof ne=="object"&&ne!==null){switch(ne.$$typeof){case u:return ne.key===qe?oe(Y,G,ne,Pe):null;case h:return ne.key===qe?ve(Y,G,ne,Pe):null;case M:return qe=ne._init,Ke(Y,G,qe(ne._payload),Pe)}if(ie(ne)||R(ne))return qe!==null?null:Be(Y,G,ne,Pe,null);hl(Y,ne)}return null}function It(Y,G,ne,Pe,qe){if(typeof Pe=="string"&&Pe!==""||typeof Pe=="number")return Y=Y.get(ne)||null,H(G,Y,""+Pe,qe);if(typeof Pe=="object"&&Pe!==null){switch(Pe.$$typeof){case u:return Y=Y.get(Pe.key===null?ne:Pe.key)||null,oe(G,Y,Pe,qe);case h:return Y=Y.get(Pe.key===null?ne:Pe.key)||null,ve(G,Y,Pe,qe);case M:var _t=Pe._init;return It(Y,G,ne,_t(Pe._payload),qe)}if(ie(Pe)||R(Pe))return Y=Y.get(ne)||null,Be(G,Y,Pe,qe,null);hl(G,Pe)}return null}function Ze(Y,G,ne,Pe){for(var qe=null,_t=null,ht=G,wt=G=0,hn=null;ht!==null&&wt<ne.length;wt++){ht.index>wt?(hn=ht,ht=null):hn=ht.sibling;var Tt=Ke(Y,ht,ne[wt],Pe);if(Tt===null){ht===null&&(ht=hn);break}o&&ht&&Tt.alternate===null&&a(Y,ht),G=T(Tt,G,wt),_t===null?qe=Tt:_t.sibling=Tt,_t=Tt,ht=hn}if(wt===ne.length)return f(Y,ht),Ft&&Br(Y,wt),qe;if(ht===null){for(;wt<ne.length;wt++)ht=ut(Y,ne[wt],Pe),ht!==null&&(G=T(ht,G,wt),_t===null?qe=ht:_t.sibling=ht,_t=ht);return Ft&&Br(Y,wt),qe}for(ht=g(Y,ht);wt<ne.length;wt++)hn=It(ht,Y,wt,ne[wt],Pe),hn!==null&&(o&&hn.alternate!==null&&ht.delete(hn.key===null?wt:hn.key),G=T(hn,G,wt),_t===null?qe=hn:_t.sibling=hn,_t=hn);return o&&ht.forEach(function(_r){return a(Y,_r)}),Ft&&Br(Y,wt),qe}function Mn(Y,G,ne,Pe){var qe=R(ne);if(typeof qe!="function")throw Error(l(150));if(ne=qe.call(ne),ne==null)throw Error(l(151));for(var _t=qe=null,ht=G,wt=G=0,hn=null,Tt=ne.next();ht!==null&&!Tt.done;wt++,Tt=ne.next()){ht.index>wt?(hn=ht,ht=null):hn=ht.sibling;var _r=Ke(Y,ht,Tt.value,Pe);if(_r===null){ht===null&&(ht=hn);break}o&&ht&&_r.alternate===null&&a(Y,ht),G=T(_r,G,wt),_t===null?qe=_r:_t.sibling=_r,_t=_r,ht=hn}if(Tt.done)return f(Y,ht),Ft&&Br(Y,wt),qe;if(ht===null){for(;!Tt.done;wt++,Tt=ne.next())Tt=ut(Y,Tt.value,Pe),Tt!==null&&(G=T(Tt,G,wt),_t===null?qe=Tt:_t.sibling=Tt,_t=Tt);return Ft&&Br(Y,wt),qe}for(ht=g(Y,ht);!Tt.done;wt++,Tt=ne.next())Tt=It(ht,Y,wt,Tt.value,Pe),Tt!==null&&(o&&Tt.alternate!==null&&ht.delete(Tt.key===null?wt:Tt.key),G=T(Tt,G,wt),_t===null?qe=Tt:_t.sibling=Tt,_t=Tt);return o&&ht.forEach(function(cx){return a(Y,cx)}),Ft&&Br(Y,wt),qe}function hi(Y,G,ne,Pe){if(typeof ne=="object"&&ne!==null&&ne.type===d&&ne.key===null&&(ne=ne.props.children),typeof ne=="object"&&ne!==null){switch(ne.$$typeof){case u:e:{for(var qe=ne.key,_t=G;_t!==null;){if(_t.key===qe){if(qe=ne.type,qe===d){if(_t.tag===7){f(Y,_t.sibling),G=S(_t,ne.props.children),G.return=Y,Y=G;break e}}else if(_t.elementType===qe||typeof qe=="object"&&qe!==null&&qe.$$typeof===M&&Cp(qe)===_t.type){f(Y,_t.sibling),G=S(_t,ne.props),G.ref=Oo(Y,_t,ne),G.return=Y,Y=G;break e}f(Y,_t);break}else a(Y,_t);_t=_t.sibling}ne.type===d?(G=Xr(ne.props.children,Y.mode,Pe,ne.key),G.return=Y,Y=G):(Pe=Vl(ne.type,ne.key,ne.props,null,Y.mode,Pe),Pe.ref=Oo(Y,G,ne),Pe.return=Y,Y=Pe)}return O(Y);case h:e:{for(_t=ne.key;G!==null;){if(G.key===_t)if(G.tag===4&&G.stateNode.containerInfo===ne.containerInfo&&G.stateNode.implementation===ne.implementation){f(Y,G.sibling),G=S(G,ne.children||[]),G.return=Y,Y=G;break e}else{f(Y,G);break}else a(Y,G);G=G.sibling}G=Ih(ne,Y.mode,Pe),G.return=Y,Y=G}return O(Y);case M:return _t=ne._init,hi(Y,G,_t(ne._payload),Pe)}if(ie(ne))return Ze(Y,G,ne,Pe);if(R(ne))return Mn(Y,G,ne,Pe);hl(Y,ne)}return typeof ne=="string"&&ne!==""||typeof ne=="number"?(ne=""+ne,G!==null&&G.tag===6?(f(Y,G.sibling),G=S(G,ne),G.return=Y,Y=G):(f(Y,G),G=Lh(ne,Y.mode,Pe),G.return=Y,Y=G),O(Y)):f(Y,G)}return hi}var Ns=Rp(!0),Pp=Rp(!1),Fo={},ai=an(Fo),Bo=an(Fo),Ds=an(Fo);function Li(o){if(o===Fo)throw Error(l(174));return o}function Ju(o,a){Ue(Ds,a),Ue(Bo,o),Ue(ai,Fo),o=ce(a),tt(ai),Ue(ai,o)}function Us(){tt(ai),tt(Bo),tt(Ds)}function Lp(o){var a=Li(Ds.current),f=Li(ai.current);a=k(f,o.type,a),f!==a&&(Ue(Bo,o),Ue(ai,a))}function Ku(o){Bo.current===o&&(tt(ai),tt(Bo))}var zt=an(0);function fl(o){for(var a=o;a!==null;){if(a.tag===13){var f=a.memoizedState;if(f!==null&&(f=f.dehydrated,f===null||Po(f)||Lo(f)))return a}else if(a.tag===19&&a.memoizedProps.revealOrder!==void 0){if(a.flags&128)return a}else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return null;a=a.return}a.sibling.return=a.return,a=a.sibling}return null}var ju=[];function Qu(){for(var o=0;o<ju.length;o++){var a=ju[o];at?a._workInProgressVersionPrimary=null:a._workInProgressVersionSecondary=null}ju.length=0}var dl=c.ReactCurrentDispatcher,li=c.ReactCurrentBatchConfig,Os=0,Xt=null,yn=null,un=null,pl=!1,zo=!1,ko=0,Dy=0;function xn(){throw Error(l(321))}function $u(o,a){if(a===null)return!1;for(var f=0;f<a.length&&f<o.length;f++)if(!Ci(o[f],a[f]))return!1;return!0}function eh(o,a,f,g,S,T){if(Os=T,Xt=a,a.memoizedState=null,a.updateQueue=null,a.lanes=0,dl.current=o===null||o.memoizedState===null?By:zy,o=f(g,S),zo){T=0;do{if(zo=!1,ko=0,25<=T)throw Error(l(301));T+=1,un=yn=null,a.updateQueue=null,dl.current=ky,o=f(g,S)}while(zo)}if(dl.current=yl,a=yn!==null&&yn.next!==null,Os=0,un=yn=Xt=null,pl=!1,a)throw Error(l(300));return o}function th(){var o=ko!==0;return ko=0,o}function Xi(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return un===null?Xt.memoizedState=un=o:un=un.next=o,un}function Ii(){if(yn===null){var o=Xt.alternate;o=o!==null?o.memoizedState:null}else o=yn.next;var a=un===null?Xt.memoizedState:un.next;if(a!==null)un=a,yn=o;else{if(o===null)throw Error(l(310));yn=o,o={memoizedState:yn.memoizedState,baseState:yn.baseState,baseQueue:yn.baseQueue,queue:yn.queue,next:null},un===null?Xt.memoizedState=un=o:un=un.next=o}return un}function zr(o,a){return typeof a=="function"?a(o):a}function ml(o){var a=Ii(),f=a.queue;if(f===null)throw Error(l(311));f.lastRenderedReducer=o;var g=yn,S=g.baseQueue,T=f.pending;if(T!==null){if(S!==null){var O=S.next;S.next=T.next,T.next=O}g.baseQueue=S=T,f.pending=null}if(S!==null){T=S.next,g=g.baseState;var H=O=null,oe=null,ve=T;do{var Be=ve.lane;if((Os&Be)===Be)oe!==null&&(oe=oe.next={lane:0,action:ve.action,hasEagerState:ve.hasEagerState,eagerState:ve.eagerState,next:null}),g=ve.hasEagerState?ve.eagerState:o(g,ve.action);else{var ut={lane:Be,action:ve.action,hasEagerState:ve.hasEagerState,eagerState:ve.eagerState,next:null};oe===null?(H=oe=ut,O=g):oe=oe.next=ut,Xt.lanes|=Be,Bs|=Be}ve=ve.next}while(ve!==null&&ve!==T);oe===null?O=g:oe.next=H,Ci(g,a.memoizedState)||(Yn=!0),a.memoizedState=g,a.baseState=O,a.baseQueue=oe,f.lastRenderedState=g}if(o=f.interleaved,o!==null){S=o;do T=S.lane,Xt.lanes|=T,Bs|=T,S=S.next;while(S!==o)}else S===null&&(f.lanes=0);return[a.memoizedState,f.dispatch]}function gl(o){var a=Ii(),f=a.queue;if(f===null)throw Error(l(311));f.lastRenderedReducer=o;var g=f.dispatch,S=f.pending,T=a.memoizedState;if(S!==null){f.pending=null;var O=S=S.next;do T=o(T,O.action),O=O.next;while(O!==S);Ci(T,a.memoizedState)||(Yn=!0),a.memoizedState=T,a.baseQueue===null&&(a.baseState=T),f.lastRenderedState=T}return[T,g]}function Ip(){}function Np(o,a){var f=Xt,g=Ii(),S=a(),T=!Ci(g.memoizedState,S);if(T&&(g.memoizedState=S,Yn=!0),g=g.queue,Vo(Op.bind(null,f,g,o),[o]),g.getSnapshot!==a||T||un!==null&&un.memoizedState.tag&1){if(f.flags|=2048,Ho(9,Up.bind(null,f,g,S,a),void 0,null),$t===null)throw Error(l(349));Os&30||Dp(f,a,S)}return S}function Dp(o,a,f){o.flags|=16384,o={getSnapshot:a,value:f},a=Xt.updateQueue,a===null?(a={lastEffect:null,stores:null},Xt.updateQueue=a,a.stores=[o]):(f=a.stores,f===null?a.stores=[o]:f.push(o))}function Up(o,a,f,g){a.value=f,a.getSnapshot=g,Fp(a)&&ci(o,1,-1)}function Op(o,a,f){return f(function(){Fp(a)&&ci(o,1,-1)})}function Fp(o){var a=o.getSnapshot;o=o.value;try{var f=a();return!Ci(o,f)}catch{return!0}}function nh(o){var a=Xi();return typeof o=="function"&&(o=o()),a.memoizedState=a.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:zr,lastRenderedState:o},a.queue=o,o=o.dispatch=Fy.bind(null,Xt,o),[a.memoizedState,o]}function Ho(o,a,f,g){return o={tag:o,create:a,destroy:f,deps:g,next:null},a=Xt.updateQueue,a===null?(a={lastEffect:null,stores:null},Xt.updateQueue=a,a.lastEffect=o.next=o):(f=a.lastEffect,f===null?a.lastEffect=o.next=o:(g=f.next,f.next=o,o.next=g,a.lastEffect=o)),o}function Bp(){return Ii().memoizedState}function _l(o,a,f,g){var S=Xi();Xt.flags|=o,S.memoizedState=Ho(1|a,f,void 0,g===void 0?null:g)}function vl(o,a,f,g){var S=Ii();g=g===void 0?null:g;var T=void 0;if(yn!==null){var O=yn.memoizedState;if(T=O.destroy,g!==null&&$u(g,O.deps)){S.memoizedState=Ho(a,f,T,g);return}}Xt.flags|=o,S.memoizedState=Ho(1|a,f,T,g)}function ih(o,a){return _l(8390656,8,o,a)}function Vo(o,a){return vl(2048,8,o,a)}function zp(o,a){return vl(4,2,o,a)}function kp(o,a){return vl(4,4,o,a)}function Hp(o,a){if(typeof a=="function")return o=o(),a(o),function(){a(null)};if(a!=null)return o=o(),a.current=o,function(){a.current=null}}function Vp(o,a,f){return f=f!=null?f.concat([o]):null,vl(4,4,Hp.bind(null,a,o),f)}function rh(){}function Gp(o,a){var f=Ii();a=a===void 0?null:a;var g=f.memoizedState;return g!==null&&a!==null&&$u(a,g[1])?g[0]:(f.memoizedState=[o,a],o)}function Wp(o,a){var f=Ii();a=a===void 0?null:a;var g=f.memoizedState;return g!==null&&a!==null&&$u(a,g[1])?g[0]:(o=o(),f.memoizedState=[o,a],o)}function Uy(o,a){var f=Et;Et=f!==0&&4>f?f:4,o(!0);var g=li.transition;li.transition={};try{o(!1),a()}finally{Et=f,li.transition=g}}function Xp(){return Ii().memoizedState}function Oy(o,a,f){var g=pr(o);f={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null},qp(o)?Yp(a,f):(Zp(o,a,f),f=Pn(),o=ci(o,g,f),o!==null&&Jp(o,a,g))}function Fy(o,a,f){var g=pr(o),S={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null};if(qp(o))Yp(a,S);else{Zp(o,a,S);var T=o.alternate;if(o.lanes===0&&(T===null||T.lanes===0)&&(T=a.lastRenderedReducer,T!==null))try{var O=a.lastRenderedState,H=T(O,f);if(S.hasEagerState=!0,S.eagerState=H,Ci(H,O))return}catch{}finally{}f=Pn(),o=ci(o,g,f),o!==null&&Jp(o,a,g)}}function qp(o){var a=o.alternate;return o===Xt||a!==null&&a===Xt}function Yp(o,a){zo=pl=!0;var f=o.pending;f===null?a.next=a:(a.next=f.next,f.next=a),o.pending=a}function Zp(o,a,f){$t!==null&&o.mode&1&&!(yt&2)?(o=a.interleaved,o===null?(f.next=f,Pi===null?Pi=[a]:Pi.push(a)):(f.next=o.next,o.next=f),a.interleaved=f):(o=a.pending,o===null?f.next=f:(f.next=o.next,o.next=f),a.pending=f)}function Jp(o,a,f){if(f&4194240){var g=a.lanes;g&=o.pendingLanes,f|=g,a.lanes=f,Iu(o,f)}}var yl={readContext:ri,useCallback:xn,useContext:xn,useEffect:xn,useImperativeHandle:xn,useInsertionEffect:xn,useLayoutEffect:xn,useMemo:xn,useReducer:xn,useRef:xn,useState:xn,useDebugValue:xn,useDeferredValue:xn,useTransition:xn,useMutableSource:xn,useSyncExternalStore:xn,useId:xn,unstable_isNewReconciler:!1},By={readContext:ri,useCallback:function(o,a){return Xi().memoizedState=[o,a===void 0?null:a],o},useContext:ri,useEffect:ih,useImperativeHandle:function(o,a,f){return f=f!=null?f.concat([o]):null,_l(4194308,4,Hp.bind(null,a,o),f)},useLayoutEffect:function(o,a){return _l(4194308,4,o,a)},useInsertionEffect:function(o,a){return _l(4,2,o,a)},useMemo:function(o,a){var f=Xi();return a=a===void 0?null:a,o=o(),f.memoizedState=[o,a],o},useReducer:function(o,a,f){var g=Xi();return a=f!==void 0?f(a):a,g.memoizedState=g.baseState=a,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:a},g.queue=o,o=o.dispatch=Oy.bind(null,Xt,o),[g.memoizedState,o]},useRef:function(o){var a=Xi();return o={current:o},a.memoizedState=o},useState:nh,useDebugValue:rh,useDeferredValue:function(o){var a=nh(o),f=a[0],g=a[1];return ih(function(){var S=li.transition;li.transition={};try{g(o)}finally{li.transition=S}},[o]),f},useTransition:function(){var o=nh(!1),a=o[0];return o=Uy.bind(null,o[1]),Xi().memoizedState=o,[a,o]},useMutableSource:function(){},useSyncExternalStore:function(o,a,f){var g=Xt,S=Xi();if(Ft){if(f===void 0)throw Error(l(407));f=f()}else{if(f=a(),$t===null)throw Error(l(349));Os&30||Dp(g,a,f)}S.memoizedState=f;var T={value:f,getSnapshot:a};return S.queue=T,ih(Op.bind(null,g,T,o),[o]),g.flags|=2048,Ho(9,Up.bind(null,g,T,f,a),void 0,null),f},useId:function(){var o=Xi(),a=$t.identifierPrefix;if(Ft){var f=Wi,g=Gi;f=(g&~(1<<32-Wn(g)-1)).toString(32)+f,a=":"+a+"R"+f,f=ko++,0<f&&(a+="H"+f.toString(32)),a+=":"}else f=Dy++,a=":"+a+"r"+f.toString(32)+":";return o.memoizedState=a},unstable_isNewReconciler:!1},zy={readContext:ri,useCallback:Gp,useContext:ri,useEffect:Vo,useImperativeHandle:Vp,useInsertionEffect:zp,useLayoutEffect:kp,useMemo:Wp,useReducer:ml,useRef:Bp,useState:function(){return ml(zr)},useDebugValue:rh,useDeferredValue:function(o){var a=ml(zr),f=a[0],g=a[1];return Vo(function(){var S=li.transition;li.transition={};try{g(o)}finally{li.transition=S}},[o]),f},useTransition:function(){var o=ml(zr)[0],a=Ii().memoizedState;return[o,a]},useMutableSource:Ip,useSyncExternalStore:Np,useId:Xp,unstable_isNewReconciler:!1},ky={readContext:ri,useCallback:Gp,useContext:ri,useEffect:Vo,useImperativeHandle:Vp,useInsertionEffect:zp,useLayoutEffect:kp,useMemo:Wp,useReducer:gl,useRef:Bp,useState:function(){return gl(zr)},useDebugValue:rh,useDeferredValue:function(o){var a=gl(zr),f=a[0],g=a[1];return Vo(function(){var S=li.transition;li.transition={};try{g(o)}finally{li.transition=S}},[o]),f},useTransition:function(){var o=gl(zr)[0],a=Ii().memoizedState;return[o,a]},useMutableSource:Ip,useSyncExternalStore:Np,useId:Xp,unstable_isNewReconciler:!1};function sh(o,a){try{var f="",g=a;do f+=Ny(g),g=g.return;while(g);var S=f}catch(T){S=`
Error generating stack: `+T.message+`
`+T.stack}return{value:o,source:a,stack:S}}function oh(o,a){try{console.error(a.value)}catch(f){setTimeout(function(){throw f})}}var Hy=typeof WeakMap=="function"?WeakMap:Map;function Kp(o,a,f){f=Vi(-1,f),f.tag=3,f.payload={element:null};var g=a.value;return f.callback=function(){Ul||(Ul=!0,wh=g),oh(o,a)},f}function jp(o,a,f){f=Vi(-1,f),f.tag=3;var g=o.type.getDerivedStateFromError;if(typeof g=="function"){var S=a.value;f.payload=function(){return g(S)},f.callback=function(){oh(o,a)}}var T=o.stateNode;return T!==null&&typeof T.componentDidCatch=="function"&&(f.callback=function(){oh(o,a),typeof g!="function"&&(fr===null?fr=new Set([this]):fr.add(this));var O=a.stack;this.componentDidCatch(a.value,{componentStack:O!==null?O:""})}),f}function Qp(o,a,f){var g=o.pingCache;if(g===null){g=o.pingCache=new Hy;var S=new Set;g.set(a,S)}else S=g.get(a),S===void 0&&(S=new Set,g.set(a,S));S.has(f)||(S.add(f),o=tx.bind(null,o,a,f),a.then(o,o))}function $p(o){do{var a;if((a=o.tag===13)&&(a=o.memoizedState,a=a!==null?a.dehydrated!==null:!0),a)return o;o=o.return}while(o!==null);return null}function em(o,a,f,g,S){return o.mode&1?(o.flags|=65536,o.lanes=S,o):(o===a?o.flags|=65536:(o.flags|=128,f.flags|=131072,f.flags&=-52805,f.tag===1&&(f.alternate===null?f.tag=17:(a=Vi(-1,1),a.tag=2,hr(f,a))),f.lanes|=1),o)}function Ni(o){o.flags|=4}function tm(o,a){if(o!==null&&o.child===a.child)return!0;if(a.flags&16)return!1;for(o=a.child;o!==null;){if(o.flags&12854||o.subtreeFlags&12854)return!1;o=o.sibling}return!0}var Go,Wo,xl,Sl;if(Fe)Go=function(o,a){for(var f=a.child;f!==null;){if(f.tag===5||f.tag===6)me(o,f.stateNode);else if(f.tag!==4&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===a)break;for(;f.sibling===null;){if(f.return===null||f.return===a)return;f=f.return}f.sibling.return=f.return,f=f.sibling}},Wo=function(){},xl=function(o,a,f,g,S){if(o=o.memoizedProps,o!==g){var T=a.stateNode,O=Li(ai.current);f=j(T,f,o,g,S,O),(a.updateQueue=f)&&Ni(a)}},Sl=function(o,a,f,g){f!==g&&Ni(a)};else if(B){Go=function(o,a,f,g){for(var S=a.child;S!==null;){if(S.tag===5){var T=S.stateNode;f&&g&&(T=Qt(T,S.type,S.memoizedProps,S)),me(o,T)}else if(S.tag===6)T=S.stateNode,f&&g&&(T=Cn(T,S.memoizedProps,S)),me(o,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),Go(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};var nm=function(o,a,f,g){for(var S=a.child;S!==null;){if(S.tag===5){var T=S.stateNode;f&&g&&(T=Qt(T,S.type,S.memoizedProps,S)),be(o,T)}else if(S.tag===6)T=S.stateNode,f&&g&&(T=Cn(T,S.memoizedProps,S)),be(o,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),nm(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};Wo=function(o,a){var f=a.stateNode;if(!tm(o,a)){o=f.containerInfo;var g=Se(o);nm(g,a,!1,!1),f.pendingChildren=g,Ni(a),xt(o,g)}},xl=function(o,a,f,g,S){var T=o.stateNode,O=o.memoizedProps;if((o=tm(o,a))&&O===g)a.stateNode=T;else{var H=a.stateNode,oe=Li(ai.current),ve=null;O!==g&&(ve=j(H,f,O,g,S,oe)),o&&ve===null?a.stateNode=T:(T=Q(T,ve,f,O,g,a,o,H),Re(T,f,g,S,oe)&&Ni(a),a.stateNode=T,o?Ni(a):Go(T,a,!1,!1))}},Sl=function(o,a,f,g){f!==g?(o=Li(Ds.current),f=Li(ai.current),a.stateNode=we(g,o,f,a),Ni(a)):a.stateNode=o.stateNode}}else Wo=function(){},xl=function(){},Sl=function(){};function Xo(o,a){if(!Ft)switch(o.tailMode){case"hidden":a=o.tail;for(var f=null;a!==null;)a.alternate!==null&&(f=a),a=a.sibling;f===null?o.tail=null:f.sibling=null;break;case"collapsed":f=o.tail;for(var g=null;f!==null;)f.alternate!==null&&(g=f),f=f.sibling;g===null?a||o.tail===null?o.tail=null:o.tail.sibling=null:g.sibling=null}}function Sn(o){var a=o.alternate!==null&&o.alternate.child===o.child,f=0,g=0;if(a)for(var S=o.child;S!==null;)f|=S.lanes|S.childLanes,g|=S.subtreeFlags&14680064,g|=S.flags&14680064,S.return=o,S=S.sibling;else for(S=o.child;S!==null;)f|=S.lanes|S.childLanes,g|=S.subtreeFlags,g|=S.flags,S.return=o,S=S.sibling;return o.subtreeFlags|=g,o.childLanes=f,a}function Vy(o,a,f){var g=a.pendingProps;switch(Xu(a),a.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Sn(a),null;case 1:return ln(a.type)&&Zt(),Sn(a),null;case 3:return g=a.stateNode,Us(),tt(Wt),tt(pt),Qu(),g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null),(o===null||o.child===null)&&(Uo(a)?Ni(a):o===null||o.memoizedState.isDehydrated&&!(a.flags&256)||(a.flags|=1024,mi!==null&&(bh(mi),mi=null))),Wo(o,a),Sn(a),null;case 5:Ku(a),f=Li(Ds.current);var S=a.type;if(o!==null&&a.stateNode!=null)xl(o,a,S,g,f),o.ref!==a.ref&&(a.flags|=512,a.flags|=2097152);else{if(!g){if(a.stateNode===null)throw Error(l(166));return Sn(a),null}if(o=Li(ai.current),Uo(a)){if(!ge)throw Error(l(175));o=bu(a.stateNode,a.type,a.memoizedProps,f,o,a,!Do),a.updateQueue=o,o!==null&&Ni(a)}else{var T=re(S,g,f,o,a);Go(T,a,!1,!1),a.stateNode=T,Re(T,S,g,f,o)&&Ni(a)}a.ref!==null&&(a.flags|=512,a.flags|=2097152)}return Sn(a),null;case 6:if(o&&a.stateNode!=null)Sl(o,a,o.memoizedProps,g);else{if(typeof g!="string"&&a.stateNode===null)throw Error(l(166));if(o=Li(Ds.current),f=Li(ai.current),Uo(a)){if(!ge)throw Error(l(176));if(o=a.stateNode,g=a.memoizedProps,(f=Cu(o,g,a,!Do))&&(S=Xn,S!==null))switch(T=(S.mode&1)!==0,S.tag){case 3:Ye(S.stateNode.containerInfo,o,g,T);break;case 5:Qe(S.type,S.memoizedProps,S.stateNode,o,g,T)}f&&Ni(a)}else a.stateNode=we(g,o,f,a)}return Sn(a),null;case 13:if(tt(zt),g=a.memoizedState,Ft&&qn!==null&&a.mode&1&&!(a.flags&128)){for(o=qn;o;)o=cr(o);return Is(),a.flags|=98560,a}if(g!==null&&g.dehydrated!==null){if(g=Uo(a),o===null){if(!g)throw Error(l(318));if(!ge)throw Error(l(344));if(o=a.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));Ru(o,a)}else Is(),!(a.flags&128)&&(a.memoizedState=null),a.flags|=4;return Sn(a),null}return mi!==null&&(bh(mi),mi=null),a.flags&128?(a.lanes=f,a):(g=g!==null,f=!1,o===null?Uo(a):f=o.memoizedState!==null,g&&!f&&(a.child.flags|=8192,a.mode&1&&(o===null||zt.current&1?rn===0&&(rn=3):Rh())),a.updateQueue!==null&&(a.flags|=4),Sn(a),null);case 4:return Us(),Wo(o,a),o===null&&ye(a.stateNode.containerInfo),Sn(a),null;case 10:return zu(a.type._context),Sn(a),null;case 17:return ln(a.type)&&Zt(),Sn(a),null;case 19:if(tt(zt),S=a.memoizedState,S===null)return Sn(a),null;if(g=(a.flags&128)!==0,T=S.rendering,T===null)if(g)Xo(S,!1);else{if(rn!==0||o!==null&&o.flags&128)for(o=a.child;o!==null;){if(T=fl(o),T!==null){for(a.flags|=128,Xo(S,!1),o=T.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),a.subtreeFlags=0,o=f,g=a.child;g!==null;)f=g,S=o,f.flags&=14680066,T=f.alternate,T===null?(f.childLanes=0,f.lanes=S,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=T.childLanes,f.lanes=T.lanes,f.child=T.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=T.memoizedProps,f.memoizedState=T.memoizedState,f.updateQueue=T.updateQueue,f.type=T.type,S=T.dependencies,f.dependencies=S===null?null:{lanes:S.lanes,firstContext:S.firstContext}),g=g.sibling;return Ue(zt,zt.current&1|2),a.child}o=o.sibling}S.tail!==null&&cn()>Eh&&(a.flags|=128,g=!0,Xo(S,!1),a.lanes=4194304)}else{if(!g)if(o=fl(T),o!==null){if(a.flags|=128,g=!0,o=o.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),Xo(S,!0),S.tail===null&&S.tailMode==="hidden"&&!T.alternate&&!Ft)return Sn(a),null}else 2*cn()-S.renderingStartTime>Eh&&f!==1073741824&&(a.flags|=128,g=!0,Xo(S,!1),a.lanes=4194304);S.isBackwards?(T.sibling=a.child,a.child=T):(o=S.last,o!==null?o.sibling=T:a.child=T,S.last=T)}return S.tail!==null?(a=S.tail,S.rendering=a,S.tail=a.sibling,S.renderingStartTime=cn(),a.sibling=null,o=zt.current,Ue(zt,g?o&1|2:o&1),a):(Sn(a),null);case 22:case 23:return Ch(),g=a.memoizedState!==null,o!==null&&o.memoizedState!==null!==g&&(a.flags|=8192),g&&a.mode&1?Zn&1073741824&&(Sn(a),Fe&&a.subtreeFlags&6&&(a.flags|=8192)):Sn(a),null;case 24:return null;case 25:return null}throw Error(l(156,a.tag))}var Gy=c.ReactCurrentOwner,Yn=!1;function Rn(o,a,f,g){a.child=o===null?Pp(a,null,f,g):Ns(a,o.child,f,g)}function im(o,a,f,g,S){f=f.render;var T=a.ref;return Rs(a,S),g=eh(o,a,f,g,T,S),f=th(),o!==null&&!Yn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,qi(o,a,S)):(Ft&&f&&Wu(a),a.flags|=1,Rn(o,a,g,S),a.child)}function rm(o,a,f,g,S){if(o===null){var T=f.type;return typeof T=="function"&&!Ph(T)&&T.defaultProps===void 0&&f.compare===null&&f.defaultProps===void 0?(a.tag=15,a.type=T,sm(o,a,T,g,S)):(o=Vl(f.type,null,g,a,a.mode,S),o.ref=a.ref,o.return=a,a.child=o)}if(T=o.child,!(o.lanes&S)){var O=T.memoizedProps;if(f=f.compare,f=f!==null?f:il,f(O,g)&&o.ref===a.ref)return qi(o,a,S)}return a.flags|=1,o=gr(T,g),o.ref=a.ref,o.return=a,a.child=o}function sm(o,a,f,g,S){if(o!==null&&il(o.memoizedProps,g)&&o.ref===a.ref)if(Yn=!1,(o.lanes&S)!==0)o.flags&131072&&(Yn=!0);else return a.lanes=o.lanes,qi(o,a,S);return ah(o,a,f,g,S)}function om(o,a,f){var g=a.pendingProps,S=g.children,T=o!==null?o.memoizedState:null;if(g.mode==="hidden")if(!(a.mode&1))a.memoizedState={baseLanes:0,cachePool:null},Ue(Fs,Zn),Zn|=f;else if(f&1073741824)a.memoizedState={baseLanes:0,cachePool:null},g=T!==null?T.baseLanes:f,Ue(Fs,Zn),Zn|=g;else return o=T!==null?T.baseLanes|f:f,a.lanes=a.childLanes=1073741824,a.memoizedState={baseLanes:o,cachePool:null},a.updateQueue=null,Ue(Fs,Zn),Zn|=o,null;else T!==null?(g=T.baseLanes|f,a.memoizedState=null):g=f,Ue(Fs,Zn),Zn|=g;return Rn(o,a,S,f),a.child}function am(o,a){var f=a.ref;(o===null&&f!==null||o!==null&&o.ref!==f)&&(a.flags|=512,a.flags|=2097152)}function ah(o,a,f,g,S){var T=ln(f)?Ti:pt.current;return T=ii(a,T),Rs(a,S),f=eh(o,a,f,g,T,S),g=th(),o!==null&&!Yn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,qi(o,a,S)):(Ft&&g&&Wu(a),a.flags|=1,Rn(o,a,f,S),a.child)}function lm(o,a,f,g,S){if(ln(f)){var T=!0;gn(a)}else T=!1;if(Rs(a,S),a.stateNode===null)o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),Mp(a,f,g),Gu(a,f,g,S),g=!0;else if(o===null){var O=a.stateNode,H=a.memoizedProps;O.props=H;var oe=O.context,ve=f.contextType;typeof ve=="object"&&ve!==null?ve=ri(ve):(ve=ln(f)?Ti:pt.current,ve=ii(a,ve));var Be=f.getDerivedStateFromProps,ut=typeof Be=="function"||typeof O.getSnapshotBeforeUpdate=="function";ut||typeof O.UNSAFE_componentWillReceiveProps!="function"&&typeof O.componentWillReceiveProps!="function"||(H!==g||oe!==ve)&&Ep(a,O,g,ve),ur=!1;var Ke=a.memoizedState;O.state=Ke,al(a,g,O,S),oe=a.memoizedState,H!==g||Ke!==oe||Wt.current||ur?(typeof Be=="function"&&(Vu(a,f,Be,g),oe=a.memoizedState),(H=ur||Sp(a,f,H,g,Ke,oe,ve))?(ut||typeof O.UNSAFE_componentWillMount!="function"&&typeof O.componentWillMount!="function"||(typeof O.componentWillMount=="function"&&O.componentWillMount(),typeof O.UNSAFE_componentWillMount=="function"&&O.UNSAFE_componentWillMount()),typeof O.componentDidMount=="function"&&(a.flags|=4194308)):(typeof O.componentDidMount=="function"&&(a.flags|=4194308),a.memoizedProps=g,a.memoizedState=oe),O.props=g,O.state=oe,O.context=ve,g=H):(typeof O.componentDidMount=="function"&&(a.flags|=4194308),g=!1)}else{O=a.stateNode,_p(o,a),H=a.memoizedProps,ve=a.type===a.elementType?H:pi(a.type,H),O.props=ve,ut=a.pendingProps,Ke=O.context,oe=f.contextType,typeof oe=="object"&&oe!==null?oe=ri(oe):(oe=ln(f)?Ti:pt.current,oe=ii(a,oe));var It=f.getDerivedStateFromProps;(Be=typeof It=="function"||typeof O.getSnapshotBeforeUpdate=="function")||typeof O.UNSAFE_componentWillReceiveProps!="function"&&typeof O.componentWillReceiveProps!="function"||(H!==ut||Ke!==oe)&&Ep(a,O,g,oe),ur=!1,Ke=a.memoizedState,O.state=Ke,al(a,g,O,S);var Ze=a.memoizedState;H!==ut||Ke!==Ze||Wt.current||ur?(typeof It=="function"&&(Vu(a,f,It,g),Ze=a.memoizedState),(ve=ur||Sp(a,f,ve,g,Ke,Ze,oe)||!1)?(Be||typeof O.UNSAFE_componentWillUpdate!="function"&&typeof O.componentWillUpdate!="function"||(typeof O.componentWillUpdate=="function"&&O.componentWillUpdate(g,Ze,oe),typeof O.UNSAFE_componentWillUpdate=="function"&&O.UNSAFE_componentWillUpdate(g,Ze,oe)),typeof O.componentDidUpdate=="function"&&(a.flags|=4),typeof O.getSnapshotBeforeUpdate=="function"&&(a.flags|=1024)):(typeof O.componentDidUpdate!="function"||H===o.memoizedProps&&Ke===o.memoizedState||(a.flags|=4),typeof O.getSnapshotBeforeUpdate!="function"||H===o.memoizedProps&&Ke===o.memoizedState||(a.flags|=1024),a.memoizedProps=g,a.memoizedState=Ze),O.props=g,O.state=Ze,O.context=oe,g=ve):(typeof O.componentDidUpdate!="function"||H===o.memoizedProps&&Ke===o.memoizedState||(a.flags|=4),typeof O.getSnapshotBeforeUpdate!="function"||H===o.memoizedProps&&Ke===o.memoizedState||(a.flags|=1024),g=!1)}return lh(o,a,f,g,T,S)}function lh(o,a,f,g,S,T){am(o,a);var O=(a.flags&128)!==0;if(!g&&!O)return S&&bs(a,f,!1),qi(o,a,T);g=a.stateNode,Gy.current=a;var H=O&&typeof f.getDerivedStateFromError!="function"?null:g.render();return a.flags|=1,o!==null&&O?(a.child=Ns(a,o.child,null,T),a.child=Ns(a,null,H,T)):Rn(o,a,H,T),a.memoizedState=g.state,S&&bs(a,f,!0),a.child}function cm(o){var a=o.stateNode;a.pendingContext?Ai(o,a.pendingContext,a.pendingContext!==a.context):a.context&&Ai(o,a.context,!1),Ju(o,a.containerInfo)}function um(o,a,f,g,S){return Is(),Zu(S),a.flags|=256,Rn(o,a,f,g),a.child}var Ml={dehydrated:null,treeContext:null,retryLane:0};function El(o){return{baseLanes:o,cachePool:null}}function hm(o,a,f){var g=a.pendingProps,S=zt.current,T=!1,O=(a.flags&128)!==0,H;if((H=O)||(H=o!==null&&o.memoizedState===null?!1:(S&2)!==0),H?(T=!0,a.flags&=-129):(o===null||o.memoizedState!==null)&&(S|=1),Ue(zt,S&1),o===null)return Yu(a),o=a.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?(a.mode&1?Lo(o)?a.lanes=8:a.lanes=1073741824:a.lanes=1,null):(S=g.children,o=g.fallback,T?(g=a.mode,T=a.child,S={mode:"hidden",children:S},!(g&1)&&T!==null?(T.childLanes=0,T.pendingProps=S):T=Gl(S,g,0,null),o=Xr(o,g,f,null),T.return=a,o.return=a,T.sibling=o,a.child=T,a.child.memoizedState=El(f),a.memoizedState=Ml,o):ch(a,S));if(S=o.memoizedState,S!==null){if(H=S.dehydrated,H!==null){if(O)return a.flags&256?(a.flags&=-257,wl(o,a,f,Error(l(422)))):a.memoizedState!==null?(a.child=o.child,a.flags|=128,null):(T=g.fallback,S=a.mode,g=Gl({mode:"visible",children:g.children},S,0,null),T=Xr(T,S,f,null),T.flags|=2,g.return=a,T.return=a,g.sibling=T,a.child=g,a.mode&1&&Ns(a,o.child,null,f),a.child.memoizedState=El(f),a.memoizedState=Ml,T);if(!(a.mode&1))a=wl(o,a,f,null);else if(Lo(H))a=wl(o,a,f,Error(l(419)));else if(g=(f&o.childLanes)!==0,Yn||g){if(g=$t,g!==null){switch(f&-f){case 4:T=2;break;case 16:T=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:T=32;break;case 536870912:T=268435456;break;default:T=0}g=T&(g.suspendedLanes|f)?0:T,g!==0&&g!==S.retryLane&&(S.retryLane=g,ci(o,g,-1))}Rh(),a=wl(o,a,f,Error(l(421)))}else Po(H)?(a.flags|=128,a.child=o.child,a=nx.bind(null,o),ws(H,a),a=null):(f=S.treeContext,ge&&(qn=Ka(H),Xn=a,Ft=!0,mi=null,Do=!1,f!==null&&(si[oi++]=Gi,si[oi++]=Wi,si[oi++]=Fr,Gi=f.id,Wi=f.overflow,Fr=a)),a=ch(a,a.pendingProps.children),a.flags|=4096);return a}return T?(g=dm(o,a,g.children,g.fallback,f),T=a.child,S=o.child.memoizedState,T.memoizedState=S===null?El(f):{baseLanes:S.baseLanes|f,cachePool:null},T.childLanes=o.childLanes&~f,a.memoizedState=Ml,g):(f=fm(o,a,g.children,f),a.memoizedState=null,f)}return T?(g=dm(o,a,g.children,g.fallback,f),T=a.child,S=o.child.memoizedState,T.memoizedState=S===null?El(f):{baseLanes:S.baseLanes|f,cachePool:null},T.childLanes=o.childLanes&~f,a.memoizedState=Ml,g):(f=fm(o,a,g.children,f),a.memoizedState=null,f)}function ch(o,a){return a=Gl({mode:"visible",children:a},o.mode,0,null),a.return=o,o.child=a}function fm(o,a,f,g){var S=o.child;return o=S.sibling,f=gr(S,{mode:"visible",children:f}),!(a.mode&1)&&(f.lanes=g),f.return=a,f.sibling=null,o!==null&&(g=a.deletions,g===null?(a.deletions=[o],a.flags|=16):g.push(o)),a.child=f}function dm(o,a,f,g,S){var T=a.mode;o=o.child;var O=o.sibling,H={mode:"hidden",children:f};return!(T&1)&&a.child!==o?(f=a.child,f.childLanes=0,f.pendingProps=H,a.deletions=null):(f=gr(o,H),f.subtreeFlags=o.subtreeFlags&14680064),O!==null?g=gr(O,g):(g=Xr(g,T,S,null),g.flags|=2),g.return=a,f.return=a,f.sibling=g,a.child=f,g}function wl(o,a,f,g){return g!==null&&Zu(g),Ns(a,o.child,null,f),o=ch(a,a.pendingProps.children),o.flags|=2,a.memoizedState=null,o}function pm(o,a,f){o.lanes|=a;var g=o.alternate;g!==null&&(g.lanes|=a),ku(o.return,a,f)}function uh(o,a,f,g,S){var T=o.memoizedState;T===null?o.memoizedState={isBackwards:a,rendering:null,renderingStartTime:0,last:g,tail:f,tailMode:S}:(T.isBackwards=a,T.rendering=null,T.renderingStartTime=0,T.last=g,T.tail=f,T.tailMode=S)}function mm(o,a,f){var g=a.pendingProps,S=g.revealOrder,T=g.tail;if(Rn(o,a,g.children,f),g=zt.current,g&2)g=g&1|2,a.flags|=128;else{if(o!==null&&o.flags&128)e:for(o=a.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&pm(o,f,a);else if(o.tag===19)pm(o,f,a);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break e;for(;o.sibling===null;){if(o.return===null||o.return===a)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}g&=1}if(Ue(zt,g),!(a.mode&1))a.memoizedState=null;else switch(S){case"forwards":for(f=a.child,S=null;f!==null;)o=f.alternate,o!==null&&fl(o)===null&&(S=f),f=f.sibling;f=S,f===null?(S=a.child,a.child=null):(S=f.sibling,f.sibling=null),uh(a,!1,S,f,T);break;case"backwards":for(f=null,S=a.child,a.child=null;S!==null;){if(o=S.alternate,o!==null&&fl(o)===null){a.child=S;break}o=S.sibling,S.sibling=f,f=S,S=o}uh(a,!0,f,null,T);break;case"together":uh(a,!1,null,null,void 0);break;default:a.memoizedState=null}return a.child}function qi(o,a,f){if(o!==null&&(a.dependencies=o.dependencies),Bs|=a.lanes,!(f&a.childLanes))return null;if(o!==null&&a.child!==o.child)throw Error(l(153));if(a.child!==null){for(o=a.child,f=gr(o,o.pendingProps),a.child=f,f.return=a;o.sibling!==null;)o=o.sibling,f=f.sibling=gr(o,o.pendingProps),f.return=a;f.sibling=null}return a.child}function Wy(o,a,f){switch(a.tag){case 3:cm(a),Is();break;case 5:Lp(a);break;case 1:ln(a.type)&&gn(a);break;case 4:Ju(a,a.stateNode.containerInfo);break;case 10:gp(a,a.type._context,a.memoizedProps.value);break;case 13:var g=a.memoizedState;if(g!==null)return g.dehydrated!==null?(Ue(zt,zt.current&1),a.flags|=128,null):f&a.child.childLanes?hm(o,a,f):(Ue(zt,zt.current&1),o=qi(o,a,f),o!==null?o.sibling:null);Ue(zt,zt.current&1);break;case 19:if(g=(f&a.childLanes)!==0,o.flags&128){if(g)return mm(o,a,f);a.flags|=128}var S=a.memoizedState;if(S!==null&&(S.rendering=null,S.tail=null,S.lastEffect=null),Ue(zt,zt.current),g)break;return null;case 22:case 23:return a.lanes=0,om(o,a,f)}return qi(o,a,f)}function Xy(o,a){switch(Xu(a),a.tag){case 1:return ln(a.type)&&Zt(),o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 3:return Us(),tt(Wt),tt(pt),Qu(),o=a.flags,o&65536&&!(o&128)?(a.flags=o&-65537|128,a):null;case 5:return Ku(a),null;case 13:if(tt(zt),o=a.memoizedState,o!==null&&o.dehydrated!==null){if(a.alternate===null)throw Error(l(340));Is()}return o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 19:return tt(zt),null;case 4:return Us(),null;case 10:return zu(a.type._context),null;case 22:case 23:return Ch(),null;case 24:return null;default:return null}}var Tl=!1,kr=!1,qy=typeof WeakSet=="function"?WeakSet:Set,Ce=null;function Al(o,a){var f=o.ref;if(f!==null)if(typeof f=="function")try{f(null)}catch(g){kn(o,a,g)}else f.current=null}function hh(o,a,f){try{f()}catch(g){kn(o,a,g)}}var gm=!1;function Yy(o,a){for(X(o.containerInfo),Ce=a;Ce!==null;)if(o=Ce,a=o.child,(o.subtreeFlags&1028)!==0&&a!==null)a.return=o,Ce=a;else for(;Ce!==null;){o=Ce;try{var f=o.alternate;if(o.flags&1024)switch(o.tag){case 0:case 11:case 15:break;case 1:if(f!==null){var g=f.memoizedProps,S=f.memoizedState,T=o.stateNode,O=T.getSnapshotBeforeUpdate(o.elementType===o.type?g:pi(o.type,g),S);T.__reactInternalSnapshotBeforeUpdate=O}break;case 3:Fe&&Ae(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(l(163))}}catch(H){kn(o,o.return,H)}if(a=o.sibling,a!==null){a.return=o.return,Ce=a;break}Ce=o.return}return f=gm,gm=!1,f}function Hr(o,a,f){var g=a.updateQueue;if(g=g!==null?g.lastEffect:null,g!==null){var S=g=g.next;do{if((S.tag&o)===o){var T=S.destroy;S.destroy=void 0,T!==void 0&&hh(a,f,T)}S=S.next}while(S!==g)}}function qo(o,a){if(a=a.updateQueue,a=a!==null?a.lastEffect:null,a!==null){var f=a=a.next;do{if((f.tag&o)===o){var g=f.create;f.destroy=g()}f=f.next}while(f!==a)}}function fh(o){var a=o.ref;if(a!==null){var f=o.stateNode;switch(o.tag){case 5:o=Z(f);break;default:o=f}typeof a=="function"?a(o):a.current=o}}function _m(o,a,f){if(bi&&typeof bi.onCommitFiberUnmount=="function")try{bi.onCommitFiberUnmount(tl,a)}catch{}switch(a.tag){case 0:case 11:case 14:case 15:if(o=a.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var g=o=o.next;do{var S=g,T=S.destroy;S=S.tag,T!==void 0&&(S&2||S&4)&&hh(a,f,T),g=g.next}while(g!==o)}break;case 1:if(Al(a,f),o=a.stateNode,typeof o.componentWillUnmount=="function")try{o.props=a.memoizedProps,o.state=a.memoizedState,o.componentWillUnmount()}catch(O){kn(a,f,O)}break;case 5:Al(a,f);break;case 4:Fe?Em(o,a,f):B&&B&&(a=a.stateNode.containerInfo,f=Se(a),bt(a,f))}}function vm(o,a,f){for(var g=a;;)if(_m(o,g,f),g.child===null||Fe&&g.tag===4){if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return}g.sibling.return=g.return,g=g.sibling}else g.child.return=g,g=g.child}function ym(o){var a=o.alternate;a!==null&&(o.alternate=null,ym(a)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(a=o.stateNode,a!==null&&De(a)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function xm(o){return o.tag===5||o.tag===3||o.tag===4}function Sm(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||xm(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function Mm(o){if(Fe){e:{for(var a=o.return;a!==null;){if(xm(a))break e;a=a.return}throw Error(l(160))}var f=a;switch(f.tag){case 5:a=f.stateNode,f.flags&32&&(Xe(a),f.flags&=-33),f=Sm(o),ph(o,f,a);break;case 3:case 4:a=f.stateNode.containerInfo,f=Sm(o),dh(o,f,a);break;default:throw Error(l(161))}}}function dh(o,a,f){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?vt(f,o,a):Me(f,o);else if(g!==4&&(o=o.child,o!==null))for(dh(o,a,f),o=o.sibling;o!==null;)dh(o,a,f),o=o.sibling}function ph(o,a,f){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?Gt(f,o,a):je(f,o);else if(g!==4&&(o=o.child,o!==null))for(ph(o,a,f),o=o.sibling;o!==null;)ph(o,a,f),o=o.sibling}function Em(o,a,f){for(var g=a,S=!1,T,O;;){if(!S){S=g.return;e:for(;;){if(S===null)throw Error(l(160));switch(T=S.stateNode,S.tag){case 5:O=!1;break e;case 3:T=T.containerInfo,O=!0;break e;case 4:T=T.containerInfo,O=!0;break e}S=S.return}S=!0}if(g.tag===5||g.tag===6)vm(o,g,f),O?We(T,g.stateNode):Je(T,g.stateNode);else if(g.tag===18)O?K(T,g.stateNode):te(T,g.stateNode);else if(g.tag===4){if(g.child!==null){T=g.stateNode.containerInfo,O=!0,g.child.return=g,g=g.child;continue}}else if(_m(o,g,f),g.child!==null){g.child.return=g,g=g.child;continue}if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return,g.tag===4&&(S=!1)}g.sibling.return=g.return,g=g.sibling}}function mh(o,a){if(Fe){switch(a.tag){case 0:case 11:case 14:case 15:Hr(3,a,a.return),qo(3,a),Hr(5,a,a.return);return;case 1:return;case 5:var f=a.stateNode;if(f!=null){var g=a.memoizedProps;o=o!==null?o.memoizedProps:g;var S=a.type,T=a.updateQueue;a.updateQueue=null,T!==null&&xe(f,T,S,o,g,a)}return;case 6:if(a.stateNode===null)throw Error(l(162));f=a.memoizedProps,Te(a.stateNode,o!==null?o.memoizedProps:f,f);return;case 3:ge&&o!==null&&o.memoizedState.isDehydrated&&q(a.stateNode.containerInfo);return;case 12:return;case 13:bl(a);return;case 19:bl(a);return;case 17:return}throw Error(l(163))}switch(a.tag){case 0:case 11:case 14:case 15:Hr(3,a,a.return),qo(3,a),Hr(5,a,a.return);return;case 12:return;case 13:bl(a);return;case 19:bl(a);return;case 3:ge&&o!==null&&o.memoizedState.isDehydrated&&q(a.stateNode.containerInfo);break;case 22:case 23:return}e:if(B){switch(a.tag){case 1:case 5:case 6:break e;case 3:case 4:a=a.stateNode,bt(a.containerInfo,a.pendingChildren);break e}throw Error(l(163))}}function bl(o){var a=o.updateQueue;if(a!==null){o.updateQueue=null;var f=o.stateNode;f===null&&(f=o.stateNode=new qy),a.forEach(function(g){var S=ix.bind(null,o,g);f.has(g)||(f.add(g),g.then(S,S))})}}function Zy(o,a){for(Ce=a;Ce!==null;){a=Ce;var f=a.deletions;if(f!==null)for(var g=0;g<f.length;g++){var S=f[g];try{var T=o;Fe?Em(T,S,a):vm(T,S,a);var O=S.alternate;O!==null&&(O.return=null),S.return=null}catch(qe){kn(S,a,qe)}}if(f=a.child,a.subtreeFlags&12854&&f!==null)f.return=a,Ce=f;else for(;Ce!==null;){a=Ce;try{var H=a.flags;if(H&32&&Fe&&Xe(a.stateNode),H&512){var oe=a.alternate;if(oe!==null){var ve=oe.ref;ve!==null&&(typeof ve=="function"?ve(null):ve.current=null)}}if(H&8192)switch(a.tag){case 13:if(a.memoizedState!==null){var Be=a.alternate;(Be===null||Be.memoizedState===null)&&(Mh=cn())}break;case 22:var ut=a.memoizedState!==null,Ke=a.alternate,It=Ke!==null&&Ke.memoizedState!==null;if(f=a,Fe){e:if(g=f,S=ut,T=null,Fe)for(var Ze=g;;){if(Ze.tag===5){if(T===null){T=Ze;var Mn=Ze.stateNode;S?St(Mn):Nt(Ze.stateNode,Ze.memoizedProps)}}else if(Ze.tag===6){if(T===null){var hi=Ze.stateNode;S?ct(hi):V(hi,Ze.memoizedProps)}}else if((Ze.tag!==22&&Ze.tag!==23||Ze.memoizedState===null||Ze===g)&&Ze.child!==null){Ze.child.return=Ze,Ze=Ze.child;continue}if(Ze===g)break;for(;Ze.sibling===null;){if(Ze.return===null||Ze.return===g)break e;T===Ze&&(T=null),Ze=Ze.return}T===Ze&&(T=null),Ze.sibling.return=Ze.return,Ze=Ze.sibling}}if(ut&&!It&&f.mode&1){Ce=f;for(var Y=f.child;Y!==null;){for(f=Ce=Y;Ce!==null;){g=Ce;var G=g.child;switch(g.tag){case 0:case 11:case 14:case 15:Hr(4,g,g.return);break;case 1:Al(g,g.return);var ne=g.stateNode;if(typeof ne.componentWillUnmount=="function"){var Pe=g.return;try{ne.props=g.memoizedProps,ne.state=g.memoizedState,ne.componentWillUnmount()}catch(qe){kn(g,Pe,qe)}}break;case 5:Al(g,g.return);break;case 22:if(g.memoizedState!==null){Am(f);continue}}G!==null?(G.return=g,Ce=G):Am(f)}Y=Y.sibling}}}switch(H&4102){case 2:Mm(a),a.flags&=-3;break;case 6:Mm(a),a.flags&=-3,mh(a.alternate,a);break;case 4096:a.flags&=-4097;break;case 4100:a.flags&=-4097,mh(a.alternate,a);break;case 4:mh(a.alternate,a)}}catch(qe){kn(a,a.return,qe)}if(f=a.sibling,f!==null){f.return=a.return,Ce=f;break}Ce=a.return}}}function Jy(o,a,f){Ce=o,wm(o)}function wm(o,a,f){for(var g=(o.mode&1)!==0;Ce!==null;){var S=Ce,T=S.child;if(S.tag===22&&g){var O=S.memoizedState!==null||Tl;if(!O){var H=S.alternate,oe=H!==null&&H.memoizedState!==null||kr;H=Tl;var ve=kr;if(Tl=O,(kr=oe)&&!ve)for(Ce=S;Ce!==null;)O=Ce,oe=O.child,O.tag===22&&O.memoizedState!==null?bm(S):oe!==null?(oe.return=O,Ce=oe):bm(S);for(;T!==null;)Ce=T,wm(T),T=T.sibling;Ce=S,Tl=H,kr=ve}Tm(o)}else S.subtreeFlags&8772&&T!==null?(T.return=S,Ce=T):Tm(o)}}function Tm(o){for(;Ce!==null;){var a=Ce;if(a.flags&8772){var f=a.alternate;try{if(a.flags&8772)switch(a.tag){case 0:case 11:case 15:kr||qo(5,a);break;case 1:var g=a.stateNode;if(a.flags&4&&!kr)if(f===null)g.componentDidMount();else{var S=a.elementType===a.type?f.memoizedProps:pi(a.type,f.memoizedProps);g.componentDidUpdate(S,f.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}var T=a.updateQueue;T!==null&&yp(a,T,g);break;case 3:var O=a.updateQueue;if(O!==null){if(f=null,a.child!==null)switch(a.child.tag){case 5:f=Z(a.child.stateNode);break;case 1:f=a.child.stateNode}yp(a,O,f)}break;case 5:var H=a.stateNode;f===null&&a.flags&4&&rt(H,a.type,a.memoizedProps,a);break;case 6:break;case 4:break;case 12:break;case 13:if(ge&&a.memoizedState===null){var oe=a.alternate;if(oe!==null){var ve=oe.memoizedState;if(ve!==null){var Be=ve.dehydrated;Be!==null&&ee(Be)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(l(163))}kr||a.flags&512&&fh(a)}catch(ut){kn(a,a.return,ut)}}if(a===o){Ce=null;break}if(f=a.sibling,f!==null){f.return=a.return,Ce=f;break}Ce=a.return}}function Am(o){for(;Ce!==null;){var a=Ce;if(a===o){Ce=null;break}var f=a.sibling;if(f!==null){f.return=a.return,Ce=f;break}Ce=a.return}}function bm(o){for(;Ce!==null;){var a=Ce;try{switch(a.tag){case 0:case 11:case 15:var f=a.return;try{qo(4,a)}catch(oe){kn(a,f,oe)}break;case 1:var g=a.stateNode;if(typeof g.componentDidMount=="function"){var S=a.return;try{g.componentDidMount()}catch(oe){kn(a,S,oe)}}var T=a.return;try{fh(a)}catch(oe){kn(a,T,oe)}break;case 5:var O=a.return;try{fh(a)}catch(oe){kn(a,O,oe)}}}catch(oe){kn(a,a.return,oe)}if(a===o){Ce=null;break}var H=a.sibling;if(H!==null){H.return=a.return,Ce=H;break}Ce=a.return}}var Cl=0,Rl=1,Pl=2,Ll=3,Il=4;if(typeof Symbol=="function"&&Symbol.for){var Yo=Symbol.for;Cl=Yo("selector.component"),Rl=Yo("selector.has_pseudo_class"),Pl=Yo("selector.role"),Ll=Yo("selector.test_id"),Il=Yo("selector.text")}function gh(o){var a=ue(o);if(a!=null){if(typeof a.memoizedProps["data-testname"]!="string")throw Error(l(364));return a}if(o=U(o),o===null)throw Error(l(362));return o.stateNode.current}function _h(o,a){switch(a.$$typeof){case Cl:if(o.type===a.value)return!0;break;case Rl:e:{a=a.value,o=[o,0];for(var f=0;f<o.length;){var g=o[f++],S=o[f++],T=a[S];if(g.tag!==5||!le(g)){for(;T!=null&&_h(g,T);)S++,T=a[S];if(S===a.length){a=!0;break e}else for(g=g.child;g!==null;)o.push(g,S),g=g.sibling}}a=!1}return a;case Pl:if(o.tag===5&&_e(o.stateNode,a.value))return!0;break;case Il:if((o.tag===5||o.tag===6)&&(o=se(o),o!==null&&0<=o.indexOf(a.value)))return!0;break;case Ll:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===a.value.toLowerCase()))return!0;break;default:throw Error(l(365))}return!1}function vh(o){switch(o.$$typeof){case Cl:return"<"+(L(o.value)||"Unknown")+">";case Rl:return":has("+(vh(o)||"")+")";case Pl:return'[role="'+o.value+'"]';case Il:return'"'+o.value+'"';case Ll:return'[data-testname="'+o.value+'"]';default:throw Error(l(365))}}function Cm(o,a){var f=[];o=[o,0];for(var g=0;g<o.length;){var S=o[g++],T=o[g++],O=a[T];if(S.tag!==5||!le(S)){for(;O!=null&&_h(S,O);)T++,O=a[T];if(T===a.length)f.push(S);else for(S=S.child;S!==null;)o.push(S,T),S=S.sibling}}return f}function yh(o,a){if(!lt)throw Error(l(363));o=gh(o),o=Cm(o,a),a=[],o=Array.from(o);for(var f=0;f<o.length;){var g=o[f++];if(g.tag===5)le(g)||a.push(g.stateNode);else for(g=g.child;g!==null;)o.push(g),g=g.sibling}return a}var Ky=Math.ceil,Nl=c.ReactCurrentDispatcher,xh=c.ReactCurrentOwner,Jt=c.ReactCurrentBatchConfig,yt=0,$t=null,en=null,_n=0,Zn=0,Fs=an(0),rn=0,Zo=null,Bs=0,Dl=0,Sh=0,Jo=null,Bn=null,Mh=0,Eh=1/0;function zs(){Eh=cn()+500}var Ul=!1,wh=null,fr=null,Ol=!1,dr=null,Fl=0,Ko=0,Th=null,Bl=-1,zl=0;function Pn(){return yt&6?cn():Bl!==-1?Bl:Bl=cn()}function pr(o){return o.mode&1?yt&2&&_n!==0?_n&-_n:Iy.transition!==null?(zl===0&&(o=Qa,Qa<<=1,!(Qa&4194240)&&(Qa=64),zl=o),zl):(o=Et,o!==0?o:fe()):1}function ci(o,a,f){if(50<Ko)throw Ko=0,Th=null,Error(l(185));var g=kl(o,a);return g===null?null:(No(g,a,f),(!(yt&2)||g!==$t)&&(g===$t&&(!(yt&2)&&(Dl|=a),rn===4&&mr(g,_n)),zn(g,f),a===1&&yt===0&&!(o.mode&1)&&(zs(),nl&&Ri())),g)}function kl(o,a){o.lanes|=a;var f=o.alternate;for(f!==null&&(f.lanes|=a),f=o,o=o.return;o!==null;)o.childLanes|=a,f=o.alternate,f!==null&&(f.childLanes|=a),f=o,o=o.return;return f.tag===3?f.stateNode:null}function zn(o,a){var f=o.callbackNode;Ey(o,a);var g=el(o,o===$t?_n:0);if(g===0)f!==null&&pp(f),o.callbackNode=null,o.callbackPriority=0;else if(a=g&-g,o.callbackPriority!==a){if(f!=null&&pp(f),a===1)o.tag===0?Ly(Pm.bind(null,o)):mp(Pm.bind(null,o)),Le?ke(function(){yt===0&&Ri()}):Nu(Du,Ri),f=null;else{switch(dp(g)){case 1:f=Du;break;case 4:f=by;break;case 16:f=Uu;break;case 536870912:f=Cy;break;default:f=Uu}f=zm(f,Rm.bind(null,o))}o.callbackPriority=a,o.callbackNode=f}}function Rm(o,a){if(Bl=-1,zl=0,yt&6)throw Error(l(327));var f=o.callbackNode;if(Wr()&&o.callbackNode!==f)return null;var g=el(o,o===$t?_n:0);if(g===0)return null;if(g&30||g&o.expiredLanes||a)a=Hl(o,g);else{a=g;var S=yt;yt|=2;var T=Nm();($t!==o||_n!==a)&&(zs(),Vr(o,a));do try{$y();break}catch(H){Im(o,H)}while(!0);Bu(),Nl.current=T,yt=S,en!==null?a=0:($t=null,_n=0,a=rn)}if(a!==0){if(a===2&&(S=Pu(o),S!==0&&(g=S,a=Ah(o,S))),a===1)throw f=Zo,Vr(o,0),mr(o,g),zn(o,cn()),f;if(a===6)mr(o,g);else{if(S=o.current.alternate,!(g&30)&&!jy(S)&&(a=Hl(o,g),a===2&&(T=Pu(o),T!==0&&(g=T,a=Ah(o,T))),a===1))throw f=Zo,Vr(o,0),mr(o,g),zn(o,cn()),f;switch(o.finishedWork=S,o.finishedLanes=g,a){case 0:case 1:throw Error(l(345));case 2:Gr(o,Bn);break;case 3:if(mr(o,g),(g&130023424)===g&&(a=Mh+500-cn(),10<a)){if(el(o,0)!==0)break;if(S=o.suspendedLanes,(S&g)!==g){Pn(),o.pingedLanes|=o.suspendedLanes&S;break}o.timeoutHandle=He(Gr.bind(null,o,Bn),a);break}Gr(o,Bn);break;case 4:if(mr(o,g),(g&4194240)===g)break;for(a=o.eventTimes,S=-1;0<g;){var O=31-Wn(g);T=1<<O,O=a[O],O>S&&(S=O),g&=~T}if(g=S,g=cn()-g,g=(120>g?120:480>g?480:1080>g?1080:1920>g?1920:3e3>g?3e3:4320>g?4320:1960*Ky(g/1960))-g,10<g){o.timeoutHandle=He(Gr.bind(null,o,Bn),g);break}Gr(o,Bn);break;case 5:Gr(o,Bn);break;default:throw Error(l(329))}}}return zn(o,cn()),o.callbackNode===f?Rm.bind(null,o):null}function Ah(o,a){var f=Jo;return o.current.memoizedState.isDehydrated&&(Vr(o,a).flags|=256),o=Hl(o,a),o!==2&&(a=Bn,Bn=f,a!==null&&bh(a)),o}function bh(o){Bn===null?Bn=o:Bn.push.apply(Bn,o)}function jy(o){for(var a=o;;){if(a.flags&16384){var f=a.updateQueue;if(f!==null&&(f=f.stores,f!==null))for(var g=0;g<f.length;g++){var S=f[g],T=S.getSnapshot;S=S.value;try{if(!Ci(T(),S))return!1}catch{return!1}}}if(f=a.child,a.subtreeFlags&16384&&f!==null)f.return=a,a=f;else{if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return!0;a=a.return}a.sibling.return=a.return,a=a.sibling}}return!0}function mr(o,a){for(a&=~Sh,a&=~Dl,o.suspendedLanes|=a,o.pingedLanes&=~a,o=o.expirationTimes;0<a;){var f=31-Wn(a),g=1<<f;o[f]=-1,a&=~g}}function Pm(o){if(yt&6)throw Error(l(327));Wr();var a=el(o,0);if(!(a&1))return zn(o,cn()),null;var f=Hl(o,a);if(o.tag!==0&&f===2){var g=Pu(o);g!==0&&(a=g,f=Ah(o,g))}if(f===1)throw f=Zo,Vr(o,0),mr(o,a),zn(o,cn()),f;if(f===6)throw Error(l(345));return o.finishedWork=o.current.alternate,o.finishedLanes=a,Gr(o,Bn),zn(o,cn()),null}function Lm(o){dr!==null&&dr.tag===0&&!(yt&6)&&Wr();var a=yt;yt|=1;var f=Jt.transition,g=Et;try{if(Jt.transition=null,Et=1,o)return o()}finally{Et=g,Jt.transition=f,yt=a,!(yt&6)&&Ri()}}function Ch(){Zn=Fs.current,tt(Fs)}function Vr(o,a){o.finishedWork=null,o.finishedLanes=0;var f=o.timeoutHandle;if(f!==Oe&&(o.timeoutHandle=Oe,Ge(f)),en!==null)for(f=en.return;f!==null;){var g=f;switch(Xu(g),g.tag){case 1:g=g.type.childContextTypes,g!=null&&Zt();break;case 3:Us(),tt(Wt),tt(pt),Qu();break;case 5:Ku(g);break;case 4:Us();break;case 13:tt(zt);break;case 19:tt(zt);break;case 10:zu(g.type._context);break;case 22:case 23:Ch()}f=f.return}if($t=o,en=o=gr(o.current,null),_n=Zn=a,rn=0,Zo=null,Sh=Dl=Bs=0,Bn=Jo=null,Pi!==null){for(a=0;a<Pi.length;a++)if(f=Pi[a],g=f.interleaved,g!==null){f.interleaved=null;var S=g.next,T=f.pending;if(T!==null){var O=T.next;T.next=S,g.next=O}f.pending=g}Pi=null}return o}function Im(o,a){do{var f=en;try{if(Bu(),dl.current=yl,pl){for(var g=Xt.memoizedState;g!==null;){var S=g.queue;S!==null&&(S.pending=null),g=g.next}pl=!1}if(Os=0,un=yn=Xt=null,zo=!1,ko=0,xh.current=null,f===null||f.return===null){rn=1,Zo=a,en=null;break}e:{var T=o,O=f.return,H=f,oe=a;if(a=_n,H.flags|=32768,oe!==null&&typeof oe=="object"&&typeof oe.then=="function"){var ve=oe,Be=H,ut=Be.tag;if(!(Be.mode&1)&&(ut===0||ut===11||ut===15)){var Ke=Be.alternate;Ke?(Be.updateQueue=Ke.updateQueue,Be.memoizedState=Ke.memoizedState,Be.lanes=Ke.lanes):(Be.updateQueue=null,Be.memoizedState=null)}var It=$p(O);if(It!==null){It.flags&=-257,em(It,O,H,T,a),It.mode&1&&Qp(T,ve,a),a=It,oe=ve;var Ze=a.updateQueue;if(Ze===null){var Mn=new Set;Mn.add(oe),a.updateQueue=Mn}else Ze.add(oe);break e}else{if(!(a&1)){Qp(T,ve,a),Rh();break e}oe=Error(l(426))}}else if(Ft&&H.mode&1){var hi=$p(O);if(hi!==null){!(hi.flags&65536)&&(hi.flags|=256),em(hi,O,H,T,a),Zu(oe);break e}}T=oe,rn!==4&&(rn=2),Jo===null?Jo=[T]:Jo.push(T),oe=sh(oe,H),H=O;do{switch(H.tag){case 3:H.flags|=65536,a&=-a,H.lanes|=a;var Y=Kp(H,oe,a);vp(H,Y);break e;case 1:T=oe;var G=H.type,ne=H.stateNode;if(!(H.flags&128)&&(typeof G.getDerivedStateFromError=="function"||ne!==null&&typeof ne.componentDidCatch=="function"&&(fr===null||!fr.has(ne)))){H.flags|=65536,a&=-a,H.lanes|=a;var Pe=jp(H,T,a);vp(H,Pe);break e}}H=H.return}while(H!==null)}Um(f)}catch(qe){a=qe,en===f&&f!==null&&(en=f=f.return);continue}break}while(!0)}function Nm(){var o=Nl.current;return Nl.current=yl,o===null?yl:o}function Rh(){(rn===0||rn===3||rn===2)&&(rn=4),$t===null||!(Bs&268435455)&&!(Dl&268435455)||mr($t,_n)}function Hl(o,a){var f=yt;yt|=2;var g=Nm();$t===o&&_n===a||Vr(o,a);do try{Qy();break}catch(S){Im(o,S)}while(!0);if(Bu(),yt=f,Nl.current=g,en!==null)throw Error(l(261));return $t=null,_n=0,rn}function Qy(){for(;en!==null;)Dm(en)}function $y(){for(;en!==null&&!Ty();)Dm(en)}function Dm(o){var a=Bm(o.alternate,o,Zn);o.memoizedProps=o.pendingProps,a===null?Um(o):en=a,xh.current=null}function Um(o){var a=o;do{var f=a.alternate;if(o=a.return,a.flags&32768){if(f=Xy(f,a),f!==null){f.flags&=32767,en=f;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{rn=6,en=null;return}}else if(f=Vy(f,a,Zn),f!==null){en=f;return}if(a=a.sibling,a!==null){en=a;return}en=a=o}while(a!==null);rn===0&&(rn=5)}function Gr(o,a){var f=Et,g=Jt.transition;try{Jt.transition=null,Et=1,ex(o,a,f)}finally{Jt.transition=g,Et=f}return null}function ex(o,a,f){do Wr();while(dr!==null);if(yt&6)throw Error(l(327));var g=o.finishedWork,S=o.finishedLanes;if(g===null)return null;if(o.finishedWork=null,o.finishedLanes=0,g===o.current)throw Error(l(177));o.callbackNode=null,o.callbackPriority=0;var T=g.lanes|g.childLanes;if(wy(o,T),o===$t&&(en=$t=null,_n=0),!(g.subtreeFlags&2064)&&!(g.flags&2064)||Ol||(Ol=!0,zm(Uu,function(){return Wr(),null})),T=(g.flags&15990)!==0,g.subtreeFlags&15990||T){T=Jt.transition,Jt.transition=null;var O=Et;Et=1;var H=yt;yt|=4,xh.current=null,Yy(o,g),Zy(o,g),J(o.containerInfo),o.current=g,Jy(g),Ay(),yt=H,Et=O,Jt.transition=T}else o.current=g;if(Ol&&(Ol=!1,dr=o,Fl=S),T=o.pendingLanes,T===0&&(fr=null),Ry(g.stateNode),zn(o,cn()),a!==null)for(f=o.onRecoverableError,g=0;g<a.length;g++)f(a[g]);if(Ul)throw Ul=!1,o=wh,wh=null,o;return Fl&1&&o.tag!==0&&Wr(),T=o.pendingLanes,T&1?o===Th?Ko++:(Ko=0,Th=o):Ko=0,Ri(),null}function Wr(){if(dr!==null){var o=dp(Fl),a=Jt.transition,f=Et;try{if(Jt.transition=null,Et=16>o?16:o,dr===null)var g=!1;else{if(o=dr,dr=null,Fl=0,yt&6)throw Error(l(331));var S=yt;for(yt|=4,Ce=o.current;Ce!==null;){var T=Ce,O=T.child;if(Ce.flags&16){var H=T.deletions;if(H!==null){for(var oe=0;oe<H.length;oe++){var ve=H[oe];for(Ce=ve;Ce!==null;){var Be=Ce;switch(Be.tag){case 0:case 11:case 15:Hr(8,Be,T)}var ut=Be.child;if(ut!==null)ut.return=Be,Ce=ut;else for(;Ce!==null;){Be=Ce;var Ke=Be.sibling,It=Be.return;if(ym(Be),Be===ve){Ce=null;break}if(Ke!==null){Ke.return=It,Ce=Ke;break}Ce=It}}}var Ze=T.alternate;if(Ze!==null){var Mn=Ze.child;if(Mn!==null){Ze.child=null;do{var hi=Mn.sibling;Mn.sibling=null,Mn=hi}while(Mn!==null)}}Ce=T}}if(T.subtreeFlags&2064&&O!==null)O.return=T,Ce=O;else e:for(;Ce!==null;){if(T=Ce,T.flags&2048)switch(T.tag){case 0:case 11:case 15:Hr(9,T,T.return)}var Y=T.sibling;if(Y!==null){Y.return=T.return,Ce=Y;break e}Ce=T.return}}var G=o.current;for(Ce=G;Ce!==null;){O=Ce;var ne=O.child;if(O.subtreeFlags&2064&&ne!==null)ne.return=O,Ce=ne;else e:for(O=G;Ce!==null;){if(H=Ce,H.flags&2048)try{switch(H.tag){case 0:case 11:case 15:qo(9,H)}}catch(qe){kn(H,H.return,qe)}if(H===O){Ce=null;break e}var Pe=H.sibling;if(Pe!==null){Pe.return=H.return,Ce=Pe;break e}Ce=H.return}}if(yt=S,Ri(),bi&&typeof bi.onPostCommitFiberRoot=="function")try{bi.onPostCommitFiberRoot(tl,o)}catch{}g=!0}return g}finally{Et=f,Jt.transition=a}}return!1}function Om(o,a,f){a=sh(f,a),a=Kp(o,a,1),hr(o,a),a=Pn(),o=kl(o,1),o!==null&&(No(o,1,a),zn(o,a))}function kn(o,a,f){if(o.tag===3)Om(o,o,f);else for(;a!==null;){if(a.tag===3){Om(a,o,f);break}else if(a.tag===1){var g=a.stateNode;if(typeof a.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(fr===null||!fr.has(g))){o=sh(f,o),o=jp(a,o,1),hr(a,o),o=Pn(),a=kl(a,1),a!==null&&(No(a,1,o),zn(a,o));break}}a=a.return}}function tx(o,a,f){var g=o.pingCache;g!==null&&g.delete(a),a=Pn(),o.pingedLanes|=o.suspendedLanes&f,$t===o&&(_n&f)===f&&(rn===4||rn===3&&(_n&130023424)===_n&&500>cn()-Mh?Vr(o,0):Sh|=f),zn(o,a)}function Fm(o,a){a===0&&(o.mode&1?(a=$a,$a<<=1,!($a&130023424)&&($a=4194304)):a=1);var f=Pn();o=kl(o,a),o!==null&&(No(o,a,f),zn(o,f))}function nx(o){var a=o.memoizedState,f=0;a!==null&&(f=a.retryLane),Fm(o,f)}function ix(o,a){var f=0;switch(o.tag){case 13:var g=o.stateNode,S=o.memoizedState;S!==null&&(f=S.retryLane);break;case 19:g=o.stateNode;break;default:throw Error(l(314))}g!==null&&g.delete(a),Fm(o,f)}var Bm;Bm=function(o,a,f){if(o!==null)if(o.memoizedProps!==a.pendingProps||Wt.current)Yn=!0;else{if(!(o.lanes&f)&&!(a.flags&128))return Yn=!1,Wy(o,a,f);Yn=!!(o.flags&131072)}else Yn=!1,Ft&&a.flags&1048576&&wp(a,ul,a.index);switch(a.lanes=0,a.tag){case 2:var g=a.type;o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps;var S=ii(a,pt.current);Rs(a,f),S=eh(null,a,g,o,S,f);var T=th();return a.flags|=1,typeof S=="object"&&S!==null&&typeof S.render=="function"&&S.$$typeof===void 0?(a.tag=1,a.memoizedState=null,a.updateQueue=null,ln(g)?(T=!0,gn(a)):T=!1,a.memoizedState=S.state!==null&&S.state!==void 0?S.state:null,Hu(a),S.updater=ll,a.stateNode=S,S._reactInternals=a,Gu(a,g,o,f),a=lh(null,a,g,!0,T,f)):(a.tag=0,Ft&&T&&Wu(a),Rn(null,a,S,f),a=a.child),a;case 16:g=a.elementType;e:{switch(o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps,S=g._init,g=S(g._payload),a.type=g,S=a.tag=sx(g),o=pi(g,o),S){case 0:a=ah(null,a,g,o,f);break e;case 1:a=lm(null,a,g,o,f);break e;case 11:a=im(null,a,g,o,f);break e;case 14:a=rm(null,a,g,pi(g.type,o),f);break e}throw Error(l(306,g,""))}return a;case 0:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:pi(g,S),ah(o,a,g,S,f);case 1:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:pi(g,S),lm(o,a,g,S,f);case 3:e:{if(cm(a),o===null)throw Error(l(387));g=a.pendingProps,T=a.memoizedState,S=T.element,_p(o,a),al(a,g,null,f);var O=a.memoizedState;if(g=O.element,ge&&T.isDehydrated)if(T={element:g,isDehydrated:!1,cache:O.cache,transitions:O.transitions},a.updateQueue.baseState=T,a.memoizedState=T,a.flags&256){S=Error(l(423)),a=um(o,a,g,f,S);break e}else if(g!==S){S=Error(l(424)),a=um(o,a,g,f,S);break e}else for(ge&&(qn=Ja(a.stateNode.containerInfo),Xn=a,Ft=!0,mi=null,Do=!1),f=Pp(a,null,g,f),a.child=f;f;)f.flags=f.flags&-3|4096,f=f.sibling;else{if(Is(),g===S){a=qi(o,a,f);break e}Rn(o,a,g,f)}a=a.child}return a;case 5:return Lp(a),o===null&&Yu(a),g=a.type,S=a.pendingProps,T=o!==null?o.memoizedProps:null,O=S.children,de(g,S)?O=null:T!==null&&de(g,T)&&(a.flags|=32),am(o,a),Rn(o,a,O,f),a.child;case 6:return o===null&&Yu(a),null;case 13:return hm(o,a,f);case 4:return Ju(a,a.stateNode.containerInfo),g=a.pendingProps,o===null?a.child=Ns(a,null,g,f):Rn(o,a,g,f),a.child;case 11:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:pi(g,S),im(o,a,g,S,f);case 7:return Rn(o,a,a.pendingProps,f),a.child;case 8:return Rn(o,a,a.pendingProps.children,f),a.child;case 12:return Rn(o,a,a.pendingProps.children,f),a.child;case 10:e:{if(g=a.type._context,S=a.pendingProps,T=a.memoizedProps,O=S.value,gp(a,g,O),T!==null)if(Ci(T.value,O)){if(T.children===S.children&&!Wt.current){a=qi(o,a,f);break e}}else for(T=a.child,T!==null&&(T.return=a);T!==null;){var H=T.dependencies;if(H!==null){O=T.child;for(var oe=H.firstContext;oe!==null;){if(oe.context===g){if(T.tag===1){oe=Vi(-1,f&-f),oe.tag=2;var ve=T.updateQueue;if(ve!==null){ve=ve.shared;var Be=ve.pending;Be===null?oe.next=oe:(oe.next=Be.next,Be.next=oe),ve.pending=oe}}T.lanes|=f,oe=T.alternate,oe!==null&&(oe.lanes|=f),ku(T.return,f,a),H.lanes|=f;break}oe=oe.next}}else if(T.tag===10)O=T.type===a.type?null:T.child;else if(T.tag===18){if(O=T.return,O===null)throw Error(l(341));O.lanes|=f,H=O.alternate,H!==null&&(H.lanes|=f),ku(O,f,a),O=T.sibling}else O=T.child;if(O!==null)O.return=T;else for(O=T;O!==null;){if(O===a){O=null;break}if(T=O.sibling,T!==null){T.return=O.return,O=T;break}O=O.return}T=O}Rn(o,a,S.children,f),a=a.child}return a;case 9:return S=a.type,g=a.pendingProps.children,Rs(a,f),S=ri(S),g=g(S),a.flags|=1,Rn(o,a,g,f),a.child;case 14:return g=a.type,S=pi(g,a.pendingProps),S=pi(g.type,S),rm(o,a,g,S,f);case 15:return sm(o,a,a.type,a.pendingProps,f);case 17:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:pi(g,S),o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),a.tag=1,ln(g)?(o=!0,gn(a)):o=!1,Rs(a,f),Mp(a,g,S),Gu(a,g,S,f),lh(null,a,g,!0,o,f);case 19:return mm(o,a,f);case 22:return om(o,a,f)}throw Error(l(156,a.tag))};function zm(o,a){return Nu(o,a)}function rx(o,a,f,g){this.tag=o,this.key=f,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=a,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function ui(o,a,f,g){return new rx(o,a,f,g)}function Ph(o){return o=o.prototype,!(!o||!o.isReactComponent)}function sx(o){if(typeof o=="function")return Ph(o)?1:0;if(o!=null){if(o=o.$$typeof,o===E)return 11;if(o===w)return 14}return 2}function gr(o,a){var f=o.alternate;return f===null?(f=ui(o.tag,a,o.key,o.mode),f.elementType=o.elementType,f.type=o.type,f.stateNode=o.stateNode,f.alternate=o,o.alternate=f):(f.pendingProps=a,f.type=o.type,f.flags=0,f.subtreeFlags=0,f.deletions=null),f.flags=o.flags&14680064,f.childLanes=o.childLanes,f.lanes=o.lanes,f.child=o.child,f.memoizedProps=o.memoizedProps,f.memoizedState=o.memoizedState,f.updateQueue=o.updateQueue,a=o.dependencies,f.dependencies=a===null?null:{lanes:a.lanes,firstContext:a.firstContext},f.sibling=o.sibling,f.index=o.index,f.ref=o.ref,f}function Vl(o,a,f,g,S,T){var O=2;if(g=o,typeof o=="function")Ph(o)&&(O=1);else if(typeof o=="string")O=5;else e:switch(o){case d:return Xr(f.children,S,T,a);case p:O=8,S|=8;break;case m:return o=ui(12,f,a,S|2),o.elementType=m,o.lanes=T,o;case x:return o=ui(13,f,a,S),o.elementType=x,o.lanes=T,o;case v:return o=ui(19,f,a,S),o.elementType=v,o.lanes=T,o;case A:return Gl(f,S,T,a);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case _:O=10;break e;case y:O=9;break e;case E:O=11;break e;case w:O=14;break e;case M:O=16,g=null;break e}throw Error(l(130,o==null?o:typeof o,""))}return a=ui(O,f,a,S),a.elementType=o,a.type=g,a.lanes=T,a}function Xr(o,a,f,g){return o=ui(7,o,g,a),o.lanes=f,o}function Gl(o,a,f,g){return o=ui(22,o,g,a),o.elementType=A,o.lanes=f,o.stateNode={},o}function Lh(o,a,f){return o=ui(6,o,null,a),o.lanes=f,o}function Ih(o,a,f){return a=ui(4,o.children!==null?o.children:[],o.key,a),a.lanes=f,a.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},a}function ox(o,a,f,g,S){this.tag=a,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=Oe,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Lu(0),this.expirationTimes=Lu(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Lu(0),this.identifierPrefix=g,this.onRecoverableError=S,ge&&(this.mutableSourceEagerHydrationData=null)}function km(o,a,f,g,S,T,O,H,oe){return o=new ox(o,a,f,H,oe),a===1?(a=1,T===!0&&(a|=8)):a=0,T=ui(3,null,null,a),o.current=T,T.stateNode=o,T.memoizedState={element:g,isDehydrated:f,cache:null,transitions:null},Hu(T),o}function Hm(o){if(!o)return ni;o=o._reactInternals;e:{if(W(o)!==o||o.tag!==1)throw Error(l(170));var a=o;do{switch(a.tag){case 3:a=a.stateNode.context;break e;case 1:if(ln(a.type)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break e}}a=a.return}while(a!==null);throw Error(l(171))}if(o.tag===1){var f=o.type;if(ln(f))return As(o,f,a)}return a}function Vm(o){var a=o._reactInternals;if(a===void 0)throw typeof o.render=="function"?Error(l(188)):(o=Object.keys(o).join(","),Error(l(268,o)));return o=$(a),o===null?null:o.stateNode}function Gm(o,a){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var f=o.retryLane;o.retryLane=f!==0&&f<a?f:a}}function Nh(o,a){Gm(o,a),(o=o.alternate)&&Gm(o,a)}function ax(o){return o=$(o),o===null?null:o.stateNode}function lx(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var a=Pn();ci(o,134217728,a),Nh(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var a=Pn(),f=pr(o);ci(o,f,a),Nh(o,f)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var a=o.stateNode;if(a.current.memoizedState.isDehydrated){var f=Io(a.pendingLanes);f!==0&&(Iu(a,f|1),zn(a,cn()),!(yt&6)&&(zs(),Ri()))}break;case 13:var g=Pn();Lm(function(){return ci(o,1,g)}),Nh(o,1)}},t.batchedUpdates=function(o,a){var f=yt;yt|=1;try{return o(a)}finally{yt=f,yt===0&&(zs(),nl&&Ri())}},t.createComponentSelector=function(o){return{$$typeof:Cl,value:o}},t.createContainer=function(o,a,f,g,S,T,O){return km(o,a,!1,null,f,g,S,T,O)},t.createHasPseudoClassSelector=function(o){return{$$typeof:Rl,value:o}},t.createHydrationContainer=function(o,a,f,g,S,T,O,H,oe){return o=km(f,g,!0,o,S,T,O,H,oe),o.context=Hm(null),f=o.current,g=Pn(),S=pr(f),T=Vi(g,S),T.callback=a??null,hr(f,T),o.current.lanes=S,No(o,S,g),zn(o,g),o},t.createPortal=function(o,a,f){var g=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:g==null?null:""+g,children:o,containerInfo:a,implementation:f}},t.createRoleSelector=function(o){return{$$typeof:Pl,value:o}},t.createTestNameSelector=function(o){return{$$typeof:Ll,value:o}},t.createTextSelector=function(o){return{$$typeof:Il,value:o}},t.deferredUpdates=function(o){var a=Et,f=Jt.transition;try{return Jt.transition=null,Et=16,o()}finally{Et=a,Jt.transition=f}},t.discreteUpdates=function(o,a,f,g,S){var T=Et,O=Jt.transition;try{return Jt.transition=null,Et=1,o(a,f,g,S)}finally{Et=T,Jt.transition=O,yt===0&&zs()}},t.findAllNodes=yh,t.findBoundingRects=function(o,a){if(!lt)throw Error(l(363));a=yh(o,a),o=[];for(var f=0;f<a.length;f++)o.push(C(a[f]));for(a=o.length-1;0<a;a--){f=o[a];for(var g=f.x,S=g+f.width,T=f.y,O=T+f.height,H=a-1;0<=H;H--)if(a!==H){var oe=o[H],ve=oe.x,Be=ve+oe.width,ut=oe.y,Ke=ut+oe.height;if(g>=ve&&T>=ut&&S<=Be&&O<=Ke){o.splice(a,1);break}else if(g!==ve||f.width!==oe.width||Ke<T||ut>O){if(!(T!==ut||f.height!==oe.height||Be<g||ve>S)){ve>g&&(oe.width+=ve-g,oe.x=g),Be<S&&(oe.width=S-ve),o.splice(a,1);break}}else{ut>T&&(oe.height+=ut-T,oe.y=T),Ke<O&&(oe.height=O-ut),o.splice(a,1);break}}}return o},t.findHostInstance=Vm,t.findHostInstanceWithNoPortals=function(o){return o=P(o),o=o!==null?z(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return Vm(o)},t.flushControlled=function(o){var a=yt;yt|=1;var f=Jt.transition,g=Et;try{Jt.transition=null,Et=1,o()}finally{Et=g,Jt.transition=f,yt=a,yt===0&&(zs(),Ri())}},t.flushPassiveEffects=Wr,t.flushSync=Lm,t.focusWithin=function(o,a){if(!lt)throw Error(l(363));for(o=gh(o),a=Cm(o,a),a=Array.from(a),o=0;o<a.length;){var f=a[o++];if(!le(f)){if(f.tag===5&&pe(f.stateNode))return!0;for(f=f.child;f!==null;)a.push(f),f=f.sibling}}return!1},t.getCurrentUpdatePriority=function(){return Et},t.getFindAllNodesFailureDescription=function(o,a){if(!lt)throw Error(l(363));var f=0,g=[];o=[gh(o),0];for(var S=0;S<o.length;){var T=o[S++],O=o[S++],H=a[O];if((T.tag!==5||!le(T))&&(_h(T,H)&&(g.push(vh(H)),O++,O>f&&(f=O)),O<a.length))for(T=T.child;T!==null;)o.push(T,O),T=T.sibling}if(f<a.length){for(o=[];f<a.length;f++)o.push(vh(a[f]));return`findAllNodes was able to match part of the selector:
  `+(g.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return Z(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:ax,findFiberByHostInstance:o.findFiberByHostInstance||lx,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var a=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(a.isDisabled||!a.supportsFiber)o=!0;else{try{tl=a.inject(o),bi=a}catch{}o=!!a.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,a,f,g){if(!lt)throw Error(l(363));o=yh(o,a);var S=it(o,f,g).disconnect;return{disconnect:function(){S()}}},t.registerMutableSourceForHydration=function(o,a){var f=a._getVersion;f=f(a._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[a,f]:o.mutableSourceEagerHydrationData.push(a,f)},t.runWithPriority=function(o,a){var f=Et;try{return Et=o,a()}finally{Et=f}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,a,f,g){var S=a.current,T=Pn(),O=pr(S);return f=Hm(f),a.context===null?a.context=f:a.pendingContext=f,a=Vi(T,O),a.payload={element:o},g=g===void 0?null:g,g!==null&&(a.callback=g),hr(S,a),o=ci(S,O,T),o!==null&&ol(o,S,O),O},t};jv.exports=fb;var db=jv.exports;const pb=B0(db),mb=r=>typeof r=="object"&&typeof r.then=="function",fs=[];function ey(r,e,t=(n,i)=>n===i){if(r===e)return!0;if(!r||!e)return!1;const n=r.length;if(e.length!==n)return!1;for(let i=0;i<n;i++)if(!t(r[i],e[i]))return!1;return!0}function ty(r,e=null,t=!1,n={}){e===null&&(e=[r]);for(const s of fs)if(ey(e,s.keys,s.equal)){if(t)return;if(Object.prototype.hasOwnProperty.call(s,"error"))throw s.error;if(Object.prototype.hasOwnProperty.call(s,"response"))return n.lifespan&&n.lifespan>0&&(s.timeout&&clearTimeout(s.timeout),s.timeout=setTimeout(s.remove,n.lifespan)),s.response;if(!t)throw s.promise}const i={keys:e,equal:n.equal,remove:()=>{const s=fs.indexOf(i);s!==-1&&fs.splice(s,1)},promise:(mb(r)?r:r(...e)).then(s=>{i.response=s,n.lifespan&&n.lifespan>0&&(i.timeout=setTimeout(i.remove,n.lifespan))}).catch(s=>i.error=s)};if(fs.push(i),!t)throw i.promise}const gb=(r,e,t)=>ty(r,e,!1,t),_b=(r,e,t)=>void ty(r,e,!0,t),vb=r=>{if(r===void 0||r.length===0)fs.splice(0,fs.length);else{const e=fs.find(t=>ey(r,t.keys,t.equal));e&&e.remove()}},hp={},yb=r=>void Object.assign(hp,r);function xb(r,e){function t(d,{args:p=[],attach:m,..._},y){let E=`${d[0].toUpperCase()}${d.slice(1)}`,x;if(d==="primitive"){if(_.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const v=_.object;x=co(v,{type:d,root:y,attach:m,primitive:!0})}else{const v=hp[E];if(!v)throw new Error(`R3F: ${E} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");x=co(new v(...p),{type:d,root:y,attach:m,memoizedProps:{args:p}})}return x.__r3f.attach===void 0&&(x instanceof gt?x.__r3f.attach="geometry":x instanceof vn&&(x.__r3f.attach="material")),E!=="inject"&&Mf(x,_),x}function n(d,p){let m=!1;if(p){var _,y;(_=p.__r3f)!=null&&_.attach?Sf(d,p,p.__r3f.attach):p.isObject3D&&d.isObject3D&&(d.add(p),m=!0),m||(y=d.__r3f)==null||y.objects.push(p),p.__r3f||co(p,{}),p.__r3f.parent=d,xd(p),uo(p)}}function i(d,p,m){let _=!1;if(p){var y,E;if((y=p.__r3f)!=null&&y.attach)Sf(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){p.parent=d,p.dispatchEvent({type:"added"});const x=d.children.filter(w=>w!==p),v=x.indexOf(m);d.children=[...x.slice(0,v),p,...x.slice(v)],_=!0}_||(E=d.__r3f)==null||E.objects.push(p),p.__r3f||co(p,{}),p.__r3f.parent=d,xd(p),uo(p)}}function s(d,p,m=!1){d&&[...d].forEach(_=>l(p,_,m))}function l(d,p,m){if(p){var _,y,E;if(p.__r3f&&(p.__r3f.parent=null),(_=d.__r3f)!=null&&_.objects&&(d.__r3f.objects=d.__r3f.objects.filter(A=>A!==p)),(y=p.__r3f)!=null&&y.attach)b0(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){var x;d.remove(p),(x=p.__r3f)!=null&&x.root&&Rb(Wc(p),p)}const w=(E=p.__r3f)==null?void 0:E.primitive,M=!w&&(m===void 0?p.dispose!==null:m);if(!w){var v;s((v=p.__r3f)==null?void 0:v.objects,p,M),s(p.children,p,M)}if(delete p.__r3f,M&&p.dispose&&p.type!=="Scene"){const A=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?vd.unstable_scheduleCallback(vd.unstable_IdlePriority,A):A()}uo(d)}}function c(d,p,m,_){var y;const E=(y=d.__r3f)==null?void 0:y.parent;if(!E)return;const x=t(p,m,d.__r3f.root);if(d.children){for(const v of d.children)v.__r3f&&n(x,v);d.children=d.children.filter(v=>!v.__r3f)}d.__r3f.objects.forEach(v=>n(x,v)),d.__r3f.objects=[],d.__r3f.autoRemovedBeforeAppend||l(E,d),x.parent&&(x.__r3f.autoRemovedBeforeAppend=!0),n(E,x),x.raycast&&x.__r3f.eventCount&&Wc(x).getState().internal.interaction.push(x),[_,_.alternate].forEach(v=>{v!==null&&(v.stateNode=x,v.ref&&(typeof v.ref=="function"?v.ref(x):v.ref.current=x))})}const u=()=>console.warn("Text is not allowed in the R3F tree! This could be stray whitespace or characters.");return{reconciler:pb({createInstance:t,removeChild:l,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(d,p)=>{if(!p)return;const m=d.getState().scene;m.__r3f&&(m.__r3f.root=d,n(m,p))},removeChildFromContainer:(d,p)=>{p&&l(d.getState().scene,p)},insertInContainerBefore:(d,p,m)=>{if(!p||!m)return;const _=d.getState().scene;_.__r3f&&i(_,p,m)},getRootHostContext:()=>null,getChildHostContext:d=>d,finalizeInitialChildren(d){var p;return!!((p=d==null?void 0:d.__r3f)!=null?p:{}).handlers},prepareUpdate(d,p,m,_){var y;if(((y=d==null?void 0:d.__r3f)!=null?y:{}).primitive&&_.object&&_.object!==d)return[!0];{const{args:x=[],children:v,...w}=_,{args:M=[],children:A,...N}=m;if(!Array.isArray(x))throw new Error("R3F: the args prop must be an array!");if(x.some((L,F)=>L!==M[F]))return[!0];const R=ly(d,w,N,!0);return R.changes.length?[!1,R]:null}},commitUpdate(d,[p,m],_,y,E,x){p?c(d,_,E,x):Mf(d,m)},commitMount(d,p,m,_){var y;const E=(y=d.__r3f)!=null?y:{};d.raycast&&E.handlers&&E.eventCount&&Wc(d).getState().internal.interaction.push(d)},getPublicInstance:d=>d,prepareForCommit:()=>null,preparePortalMount:d=>co(d.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(d){var p;const{attach:m,parent:_}=(p=d.__r3f)!=null?p:{};m&&_&&b0(_,d,m),d.isObject3D&&(d.visible=!1),uo(d)},unhideInstance(d,p){var m;const{attach:_,parent:y}=(m=d.__r3f)!=null?m:{};_&&y&&Sf(y,d,_),(d.isObject3D&&p.visible==null||p.visible)&&(d.visible=!0),uo(d)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():_o.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&Ot.fun(performance.now)?performance.now:Ot.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Ot.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Ot.fun(clearTimeout)?clearTimeout:void 0}),applyProps:Mf}}var E0,w0;const xf=r=>"colorSpace"in r||"outputColorSpace"in r,ny=()=>{var r;return(r=hp.ColorManagement)!=null?r:null},iy=r=>r&&r.isOrthographicCamera,Sb=r=>r&&r.hasOwnProperty("current"),Za=typeof window<"u"&&((E0=window.document)!=null&&E0.createElement||((w0=window.navigator)==null?void 0:w0.product)==="ReactNative")?ze.useLayoutEffect:ze.useEffect;function ry(r){const e=ze.useRef(r);return Za(()=>void(e.current=r),[r]),e}function Mb({set:r}){return Za(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class sy extends ze.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}sy.getDerivedStateFromError=()=>({error:!0});const oy="__default",T0=new Map,Eb=r=>r&&!!r.memoized&&!!r.changes;function ay(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const la=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function Wc(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const Ot={obj:r=>r===Object(r)&&!Ot.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(Ot.str(r)||Ot.num(r))return r===e;const s=Ot.obj(r);if(s&&n==="reference")return r===e;const l=Ot.arr(r);if(l&&t==="reference")return r===e;if((l||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!Ot.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(Ot.und(c)){if(l&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function wb(r){const e={nodes:{},materials:{}};return r&&r.traverse(t=>{t.name&&(e.nodes[t.name]=t),t.material&&!e.materials[t.material.name]&&(e.materials[t.material.name]=t.material)}),e}function Tb(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function co(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function yd(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,l)=>s[l],r),{target:t,key:i}}else return{target:t,key:e}}const A0=/-\d+$/;function Sf(r,e,t){if(Ot.str(t)){if(A0.test(t)){const s=t.replace(A0,""),{target:l,key:c}=yd(r,s);Array.isArray(l[c])||(l[c]=[])}const{target:n,key:i}=yd(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function b0(r,e,t){var n,i;if(Ot.str(t)){const{target:s,key:l}=yd(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[l]:s[l]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function ly(r,{children:e,key:t,ref:n,...i},{children:s,key:l,ref:c,...u}={},h=!1){var d;const p=(d=r==null?void 0:r.__r3f)!=null?d:{},m=Object.entries(i),_=[];if(h){const E=Object.keys(u);for(let x=0;x<E.length;x++)i.hasOwnProperty(E[x])||m.unshift([E[x],oy+"remove"])}m.forEach(([E,x])=>{var v;if((v=r.__r3f)!=null&&v.primitive&&E==="object"||Ot.equ(x,u[E]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(E))return _.push([E,x,!0,[]]);let w=[];E.includes("-")&&(w=E.split("-")),_.push([E,x,!1,w]);for(const M in i){const A=i[M];M.startsWith(`${E}-`)&&_.push([M,A,!1,M.split("-")])}});const y={...i};return p.memoizedProps&&p.memoizedProps.args&&(y.args=p.memoizedProps.args),p.memoizedProps&&p.memoizedProps.attach&&(y.attach=p.memoizedProps.attach),{memoized:y,changes:_}}const Ab=typeof process<"u"&&!1;function Mf(r,e){var t,n,i;const s=(t=r.__r3f)!=null?t:{},l=s.root,c=(n=l==null||l.getState==null?void 0:l.getState())!=null?n:{},{memoized:u,changes:h}=Eb(e)?e:ly(r,e),d=s.eventCount;r.__r3f&&(r.__r3f.memoizedProps=u);for(let m=0;m<h.length;m++){let[_,y,E,x]=h[m];if(xf(r)){const A="srgb",N="srgb-linear";_==="encoding"?(_="colorSpace",y=y===3001?A:N):_==="outputEncoding"&&(_="outputColorSpace",y=y===3001?A:N)}let v=r,w=v[_];if(x.length&&(w=x.reduce((M,A)=>M[A],r),!(w&&w.set))){const[M,...A]=x.reverse();v=A.reverse().reduce((N,R)=>N[R],r),_=M}if(y===oy+"remove")if(v.constructor){let M=T0.get(v.constructor);M||(M=new v.constructor,T0.set(v.constructor,M)),y=M[_]}else y=0;if(E)y?s.handlers[_]=y:delete s.handlers[_],s.eventCount=Object.keys(s.handlers).length;else if(w&&w.set&&(w.copy||w instanceof ms)){if(Array.isArray(y))w.fromArray?w.fromArray(y):w.set(...y);else if(w.copy&&y&&y.constructor&&(Ab?w.constructor.name===y.constructor.name:w.constructor===y.constructor))w.copy(y);else if(y!==void 0){const M=w instanceof Ne;!M&&w.setScalar?w.setScalar(y):w instanceof ms&&y instanceof ms?w.mask=y.mask:w.set(y),!ny()&&!c.linear&&M&&w.convertSRGBToLinear()}}else if(v[_]=y,v[_]instanceof Vt&&v[_].format===Nn&&v[_].type===Bi){const M=v[_];xf(M)&&xf(c.gl)?M.colorSpace=c.gl.outputColorSpace:M.encoding=c.gl.outputEncoding}uo(r)}if(s.parent&&r.raycast&&d!==s.eventCount){const m=Wc(r).getState().internal,_=m.interaction.indexOf(r);_>-1&&m.interaction.splice(_,1),s.eventCount&&m.interaction.push(r)}return!(h.length===1&&h[0][0]==="onUpdate")&&h.length&&(i=r.__r3f)!=null&&i.parent&&xd(r),r}function uo(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function xd(r){r.onUpdate==null||r.onUpdate(r)}function bb(r,e){r.manual||(iy(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function Uc(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function Cb(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return _o.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return _o.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return _o.ContinuousEventPriority;default:return _o.DefaultEventPriority}}function cy(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function Rb(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{cy(t.capturedMap,e,n,i)})}function Pb(r){function e(u){const{internal:h}=r.getState(),d=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(d*d+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(d=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+d]}))}function n(u,h){const d=r.getState(),p=new Set,m=[],_=h?h(d.internal.interaction):d.internal.interaction;for(let v=0;v<_.length;v++){const w=la(_[v]);w&&(w.raycaster.camera=void 0)}d.previousRoot||d.events.compute==null||d.events.compute(u,d);function y(v){const w=la(v);if(!w||!w.events.enabled||w.raycaster.camera===null)return[];if(w.raycaster.camera===void 0){var M;w.events.compute==null||w.events.compute(u,w,(M=w.previousRoot)==null?void 0:M.getState()),w.raycaster.camera===void 0&&(w.raycaster.camera=null)}return w.raycaster.camera?w.raycaster.intersectObject(v,!0):[]}let E=_.flatMap(y).sort((v,w)=>{const M=la(v.object),A=la(w.object);return!M||!A?v.distance-w.distance:A.events.priority-M.events.priority||v.distance-w.distance}).filter(v=>{const w=Uc(v);return p.has(w)?!1:(p.add(w),!0)});d.events.filter&&(E=d.events.filter(E,d));for(const v of E){let w=v.object;for(;w;){var x;(x=w.__r3f)!=null&&x.eventCount&&m.push({...v,eventObject:w}),w=w.parent}}if("pointerId"in u&&d.internal.capturedMap.has(u.pointerId))for(let v of d.internal.capturedMap.get(u.pointerId).values())p.has(Uc(v.intersection))||m.push(v.intersection);return m}function i(u,h,d,p){const m=r.getState();if(u.length){const _={stopped:!1};for(const y of u){const E=la(y.object)||m,{raycaster:x,pointer:v,camera:w,internal:M}=E,A=new D(v.x,v.y,0).unproject(w),N=b=>{var P,$;return(P=($=M.capturedMap.get(b))==null?void 0:$.has(y.eventObject))!=null?P:!1},R=b=>{const P={intersection:y,target:h.target};M.capturedMap.has(b)?M.capturedMap.get(b).set(y.eventObject,P):M.capturedMap.set(b,new Map([[y.eventObject,P]])),h.target.setPointerCapture(b)},L=b=>{const P=M.capturedMap.get(b);P&&cy(M.capturedMap,y.eventObject,P,b)};let F={};for(let b in h){let P=h[b];typeof P!="function"&&(F[b]=P)}let W={...y,...F,pointer:v,intersections:u,stopped:_.stopped,delta:d,unprojectedPoint:A,ray:x.ray,camera:w,stopPropagation(){const b="pointerId"in h&&M.capturedMap.get(h.pointerId);if((!b||b.has(y.eventObject))&&(W.stopped=_.stopped=!0,M.hovered.size&&Array.from(M.hovered.values()).find(P=>P.eventObject===y.eventObject))){const P=u.slice(0,u.indexOf(y));s([...P,y])}},target:{hasPointerCapture:N,setPointerCapture:R,releasePointerCapture:L},currentTarget:{hasPointerCapture:N,setPointerCapture:R,releasePointerCapture:L},nativeEvent:h};if(p(W),_.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const d of h.hovered.values())if(!u.length||!u.find(p=>p.object===d.object&&p.index===d.index&&p.instanceId===d.instanceId)){const m=d.eventObject.__r3f,_=m==null?void 0:m.handlers;if(h.hovered.delete(Uc(d)),m!=null&&m.eventCount){const y={...d,intersections:u};_.onPointerOut==null||_.onPointerOut(y),_.onPointerLeave==null||_.onPointerLeave(y)}}}function l(u,h){for(let d=0;d<h.length;d++){const p=h[d].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:d}=r.getState();"pointerId"in h&&d.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{d.capturedMap.has(h.pointerId)&&(d.capturedMap.delete(h.pointerId),s([]))})}}return function(d){const{onPointerMissed:p,internal:m}=r.getState();m.lastEvent.current=d;const _=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",x=n(d,_?t:void 0),v=y?e(d):0;u==="onPointerDown"&&(m.initialClick=[d.offsetX,d.offsetY],m.initialHits=x.map(M=>M.eventObject)),y&&!x.length&&v<=2&&(l(d,m.interaction),p&&p(d)),_&&s(x);function w(M){const A=M.eventObject,N=A.__r3f,R=N==null?void 0:N.handlers;if(N!=null&&N.eventCount)if(_){if(R.onPointerOver||R.onPointerEnter||R.onPointerOut||R.onPointerLeave){const L=Uc(M),F=m.hovered.get(L);F?F.stopped&&M.stopPropagation():(m.hovered.set(L,M),R.onPointerOver==null||R.onPointerOver(M),R.onPointerEnter==null||R.onPointerEnter(M))}R.onPointerMove==null||R.onPointerMove(M)}else{const L=R[u];L?(!y||m.initialHits.includes(A))&&(l(d,m.interaction.filter(F=>!m.initialHits.includes(F))),L(M)):y&&m.initialHits.includes(A)&&l(d,m.interaction.filter(F=>!m.initialHits.includes(F)))}}i(x,d,v,w)}}return{handlePointer:c}}const uy=r=>!!(r!=null&&r.render),hy=ze.createContext(null),Lb=(r,e)=>{const t=hb((c,u)=>{const h=new D,d=new D,p=new D;function m(v=u().camera,w=d,M=u().size){const{width:A,height:N,top:R,left:L}=M,F=A/N;w instanceof D?p.copy(w):p.set(...w);const W=v.getWorldPosition(h).distanceTo(p);if(iy(v))return{width:A/v.zoom,height:N/v.zoom,top:R,left:L,factor:1,distance:W,aspect:F};{const b=v.fov*Math.PI/180,P=2*Math.tan(b/2)*W,$=P*(A/N);return{width:$,height:P,top:R,left:L,factor:A/$,distance:W,aspect:F}}}let _;const y=v=>c(w=>({performance:{...w.performance,current:v}})),E=new he;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(v=1)=>r(u(),v),advance:(v,w)=>e(v,w,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new ap,pointer:E,mouse:E,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const v=u();_&&clearTimeout(_),v.performance.current!==v.performance.min&&y(v.performance.min),_=setTimeout(()=>y(u().performance.max),v.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:v=>c(w=>({...w,events:{...w.events,...v}})),setSize:(v,w,M,A,N)=>{const R=u().camera,L={width:v,height:w,top:A||0,left:N||0,updateStyle:M};c(F=>({size:L,viewport:{...F.viewport,...m(R,d,L)}}))},setDpr:v=>c(w=>{const M=ay(v);return{viewport:{...w.viewport,dpr:M,initialDpr:w.viewport.initialDpr||M}}}),setFrameloop:(v="always")=>{const w=u().clock;w.stop(),w.elapsedTime=0,v!=="never"&&(w.start(),w.elapsedTime=0),c(()=>({frameloop:v}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:ze.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(v,w,M)=>{const A=u().internal;return A.priority=A.priority+(w>0?1:0),A.subscribers.push({ref:v,priority:w,store:M}),A.subscribers=A.subscribers.sort((N,R)=>N.priority-R.priority),()=>{const N=u().internal;N!=null&&N.subscribers&&(N.priority=N.priority-(w>0?1:0),N.subscribers=N.subscribers.filter(R=>R.ref!==v))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,l=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:d,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var m;i=u,s=h.dpr,bb(c,u),d.setPixelRatio(h.dpr);const _=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&d.domElement instanceof HTMLCanvasElement;d.setSize(u.width,u.height,_)}c!==l&&(l=c,p(_=>({viewport:{..._.viewport,..._.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let Oc,Ib=new Set,Nb=new Set,Db=new Set;function Ef(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function ca(r,e){switch(r){case"before":return Ef(Ib,e);case"after":return Ef(Nb,e);case"tail":return Ef(Db,e)}}let wf,Tf;function Af(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),wf=e.internal.subscribers,Oc=0;Oc<wf.length;Oc++)Tf=wf[Oc],Tf.ref.current(Tf.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function Ub(r){let e=!1,t,n,i;function s(u){n=requestAnimationFrame(s),e=!0,t=0,ca("before",u);for(const d of r.values()){var h;i=d.store.getState(),i.internal.active&&(i.frameloop==="always"||i.internal.frames>0)&&!((h=i.gl.xr)!=null&&h.isPresenting)&&(t+=Af(u,i))}if(ca("after",u),t===0)return ca("tail",u),e=!1,cancelAnimationFrame(n)}function l(u,h=1){var d;if(!u)return r.forEach(p=>l(p.store.getState(),h));(d=u.gl.xr)!=null&&d.isPresenting||!u.internal.active||u.frameloop==="never"||(u.internal.frames=Math.min(60,u.internal.frames+h),e||(e=!0,requestAnimationFrame(s)))}function c(u,h=!0,d,p){if(h&&ca("before",u),d)Af(u,d,p);else for(const m of r.values())Af(u,m.store.getState());h&&ca("after",u)}return{loop:s,invalidate:l,advance:c}}function fy(){const r=ze.useContext(hy);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function bf(r=t=>t,e){return fy()(r,e)}function sC(r,e=0){const t=fy(),n=t.getState().internal.subscribe,i=ry(r);return Za(()=>n(i,e,t),[e,n,t]),null}const C0=new WeakMap;function dy(r,e){return function(t,...n){let i=C0.get(t);return i||(i=new t,C0.set(t,i)),r&&r(i),Promise.all(n.map(s=>new Promise((l,c)=>i.load(s,u=>{u.scene&&Object.assign(u,wb(u.scene)),l(u)},e,u=>c(new Error(`Could not load ${s}: ${u==null?void 0:u.message}`)))))).finally(()=>i.dispose==null?void 0:i.dispose())}}function py(r,e,t,n){const i=Array.isArray(e)?e:[e],s=gb(dy(t,n),[r,...i],{equal:Ot.equ});return Array.isArray(e)?s:s[0]}py.preload=function(r,e,t){const n=Array.isArray(e)?e:[e];return _b(dy(t),[r,...n])};py.clear=function(r,e){const t=Array.isArray(e)?e:[e];return vb([r,...t])};const Eo=new Map,{invalidate:R0,advance:P0}=Ub(Eo),{reconciler:Qc,applyProps:ao}=xb(Eo,Cb),lo={objects:"shallow",strict:!1},Ob=(r,e)=>{const t=typeof r=="function"?r(e):r;return uy(t)?t:new Wd({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function Fb(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:l,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:l,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:l}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:l,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function Bb(r){const e=Eo.get(r),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,s=n||Lb(R0,P0),l=t||Qc.createContainer(s,_o.ConcurrentRoot,null,!1,null,"",i,null);e||Eo.set(r,{fiber:l,store:s});let c,u=!1,h;return{configure(d={}){let{gl:p,size:m,scene:_,events:y,onCreated:E,shadows:x=!1,linear:v=!1,flat:w=!1,legacy:M=!1,orthographic:A=!1,frameloop:N="always",dpr:R=[1,2],performance:L,raycaster:F,camera:W,onPointerMissed:b}=d,P=s.getState(),$=P.gl;P.gl||P.set({gl:$=Ob(p,r)});let ae=P.raycaster;ae||P.set({raycaster:ae=new Zv});const{params:z,...ie}=F||{};if(Ot.equ(ie,ae,lo)||ao(ae,{...ie}),Ot.equ(z,ae.params,lo)||ao(ae,{params:{...ae.params,...z}}),!P.camera||P.camera===h&&!Ot.equ(h,W,lo)){h=W;const J=W instanceof ka,re=J?W:A?new Ga(0,0,0,0,.1,1e3):new dn(75,0,.1,1e3);J||(re.position.z=5,W&&ao(re,W),!P.camera&&!(W!=null&&W.rotation)&&re.lookAt(0,0,0)),P.set({camera:re}),ae.camera=re}if(!P.scene){let J;_ instanceof Kc?J=_:(J=new Kc,_&&ao(J,_)),P.set({scene:co(J)})}if(!P.xr){var Z;const J=(Re,j)=>{const de=s.getState();de.frameloop!=="never"&&P0(Re,!0,de,j)},re=()=>{const Re=s.getState();Re.gl.xr.enabled=Re.gl.xr.isPresenting,Re.gl.xr.setAnimationLoop(Re.gl.xr.isPresenting?J:null),Re.gl.xr.isPresenting||R0(Re)},me={connect(){const Re=s.getState().gl;Re.xr.addEventListener("sessionstart",re),Re.xr.addEventListener("sessionend",re)},disconnect(){const Re=s.getState().gl;Re.xr.removeEventListener("sessionstart",re),Re.xr.removeEventListener("sessionend",re)}};typeof((Z=$.xr)==null?void 0:Z.addEventListener)=="function"&&me.connect(),P.set({xr:me})}if($.shadowMap){const J=$.shadowMap.enabled,re=$.shadowMap.type;if($.shadowMap.enabled=!!x,Ot.boo(x))$.shadowMap.type=ha;else if(Ot.str(x)){var ce;const me={basic:H0,percentage:eu,soft:ha,variance:yi};$.shadowMap.type=(ce=me[x])!=null?ce:ha}else Ot.obj(x)&&Object.assign($.shadowMap,x);(J!==$.shadowMap.enabled||re!==$.shadowMap.type)&&($.shadowMap.needsUpdate=!0)}const k=ny();k&&("enabled"in k?k.enabled=!M:"legacyMode"in k&&(k.legacyMode=M)),u||ao($,{outputEncoding:v?3e3:3001,toneMapping:w?Fi:Md}),P.legacy!==M&&P.set(()=>({legacy:M})),P.linear!==v&&P.set(()=>({linear:v})),P.flat!==w&&P.set(()=>({flat:w})),p&&!Ot.fun(p)&&!uy(p)&&!Ot.equ(p,$,lo)&&ao($,p),y&&!P.events.handlers&&P.set({events:y(s)});const X=Fb(r,m);return Ot.equ(X,P.size,lo)||P.setSize(X.width,X.height,X.updateStyle,X.top,X.left),R&&P.viewport.dpr!==ay(R)&&P.setDpr(R),P.frameloop!==N&&P.setFrameloop(N),P.onPointerMissed||P.set({onPointerMissed:b}),L&&!Ot.equ(L,P.performance,lo)&&P.set(J=>({performance:{...J.performance,...L}})),c=E,u=!0,this},render(d){return u||this.configure(),Qc.updateContainer(ze.createElement(zb,{store:s,children:d,onCreated:c,rootElement:r}),l,null,()=>{}),s},unmount(){my(r)}}}function zb({store:r,children:e,onCreated:t,rootElement:n}){return Za(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),ze.createElement(hy.Provider,{value:r},e)}function my(r,e){const t=Eo.get(r),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),Qc.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,l,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(l=s.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),Tb(i),Eo.delete(r),e&&e(r)}catch{}},500)})}}Qc.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:ze.version});function Sd(r,e,t){var n,i,s,l,c;e==null&&(e=100);function u(){var d=Date.now()-l;d<e&&d>=0?n=setTimeout(u,e-d):(n=null,t||(c=r.apply(s,i),s=i=null))}var h=function(){s=this,i=arguments,l=Date.now();var d=t&&!n;return n||(n=setTimeout(u,e)),d&&(c=r.apply(s,i),s=i=null),c};return h.clear=function(){n&&(clearTimeout(n),n=null)},h.flush=function(){n&&(c=r.apply(s,i),s=i=null,clearTimeout(n),n=null)},h}Sd.debounce=Sd;var kb=Sd;const L0=B0(kb);function Hb(r){let{debounce:e,scroll:t,polyfill:n,offsetSize:i}=r===void 0?{debounce:0,scroll:!1,offsetSize:!1}:r;const s=n||(typeof window>"u"?class{}:window.ResizeObserver);if(!s)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[l,c]=ze.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),u=ze.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:l}),h=e?typeof e=="number"?e:e.scroll:null,d=e?typeof e=="number"?e:e.resize:null,p=ze.useRef(!1);ze.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,_,y]=ze.useMemo(()=>{const w=()=>{if(!u.current.element)return;const{left:M,top:A,width:N,height:R,bottom:L,right:F,x:W,y:b}=u.current.element.getBoundingClientRect(),P={left:M,top:A,width:N,height:R,bottom:L,right:F,x:W,y:b};u.current.element instanceof HTMLElement&&i&&(P.height=u.current.element.offsetHeight,P.width=u.current.element.offsetWidth),Object.freeze(P),p.current&&!Xb(u.current.lastBounds,P)&&c(u.current.lastBounds=P)};return[w,d?L0(w,d):w,h?L0(w,h):w]},[c,i,h,d]);function E(){u.current.scrollContainers&&(u.current.scrollContainers.forEach(w=>w.removeEventListener("scroll",y,!0)),u.current.scrollContainers=null),u.current.resizeObserver&&(u.current.resizeObserver.disconnect(),u.current.resizeObserver=null)}function x(){u.current.element&&(u.current.resizeObserver=new s(y),u.current.resizeObserver.observe(u.current.element),t&&u.current.scrollContainers&&u.current.scrollContainers.forEach(w=>w.addEventListener("scroll",y,{capture:!0,passive:!0})))}const v=w=>{!w||w===u.current.element||(E(),u.current.element=w,u.current.scrollContainers=gy(w),x())};return Gb(y,!!t),Vb(_),ze.useEffect(()=>{E(),x()},[t,y,_]),ze.useEffect(()=>E,[]),[v,l,m]}function Vb(r){ze.useEffect(()=>{const e=r;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[r])}function Gb(r,e){ze.useEffect(()=>{if(e){const t=r;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[r,e])}function gy(r){const e=[];if(!r||r===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(r);return[t,n,i].some(s=>s==="auto"||s==="scroll")&&e.push(r),[...e,...gy(r.parentElement)]}const Wb=["x","y","top","bottom","left","right","width","height"],Xb=(r,e)=>Wb.every(t=>r[t]===e[t]);var qb=Object.defineProperty,Yb=Object.defineProperties,Zb=Object.getOwnPropertyDescriptors,I0=Object.getOwnPropertySymbols,Jb=Object.prototype.hasOwnProperty,Kb=Object.prototype.propertyIsEnumerable,N0=(r,e,t)=>e in r?qb(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,D0=(r,e)=>{for(var t in e||(e={}))Jb.call(e,t)&&N0(r,t,e[t]);if(I0)for(var t of I0(e))Kb.call(e,t)&&N0(r,t,e[t]);return r},jb=(r,e)=>Yb(r,Zb(e));function _y(r,e,t){if(!r)return;if(t(r)===!0)return r;let n=e?r.return:r.child;for(;n;){const i=_y(n,e,t);if(i)return i;n=e?null:n.sibling}}function vy(r){try{return Object.defineProperties(r,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return r}}const fp=vy(ze.createContext(null));class yy extends ze.Component{render(){return ze.createElement(fp.Provider,{value:this._reactInternals},this.props.children)}}const{ReactCurrentOwner:U0,ReactCurrentDispatcher:O0}=ze.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function Qb(){const r=ze.useContext(fp);if(r===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=ze.useId();return ze.useMemo(()=>{for(const n of[U0==null?void 0:U0.current,r,r==null?void 0:r.alternate]){if(!n)continue;const i=_y(n,!1,s=>{let l=s.memoizedState;for(;l;){if(l.memoizedState===e)return!0;l=l.next}});if(i)return i}},[r,e])}function $b(){var r,e;const t=Qb(),[n]=ze.useState(()=>new Map);n.clear();let i=t;for(;i;){const s=(r=i.type)==null?void 0:r._context;s&&s!==fp&&!n.has(s)&&n.set(s,(e=O0==null?void 0:O0.current)==null?void 0:e.readContext(vy(s))),i=i.return}return n}function eC(){const r=$b();return ze.useMemo(()=>Array.from(r.keys()).reduce((e,t)=>n=>ze.createElement(e,null,ze.createElement(t.Provider,jb(D0({},n),{value:r.get(t)}))),e=>ze.createElement(yy,D0({},e))),[r])}const Cf={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function tC(r){const{handlePointer:e}=Pb(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Cf).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(l=>({events:{...l.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([l,c])=>{const[u,h]=Cf[l];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,l])=>{if(n&&n.connected instanceof HTMLElement){const[c]=Cf[s];n.connected.removeEventListener(c,l)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}const nC=ze.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:s,events:l=tC,eventSource:c,eventPrefix:u,shadows:h,linear:d,flat:p,legacy:m,orthographic:_,frameloop:y,dpr:E,performance:x,raycaster:v,camera:w,scene:M,onPointerMissed:A,onCreated:N,...R},L){ze.useMemo(()=>yb(lb),[]);const F=eC(),[W,b]=Hb({scroll:!0,debounce:{scroll:50,resize:0},...n}),P=ze.useRef(null),$=ze.useRef(null);ze.useImperativeHandle(L,()=>P.current);const ae=ry(A),[z,ie]=ze.useState(!1),[Z,ce]=ze.useState(!1);if(z)throw z;if(Z)throw Z;const k=ze.useRef(null);Za(()=>{const J=P.current;b.width>0&&b.height>0&&J&&(k.current||(k.current=Bb(J)),k.current.configure({gl:s,events:l,shadows:h,linear:d,flat:p,legacy:m,orthographic:_,frameloop:y,dpr:E,performance:x,raycaster:v,camera:w,scene:M,size:b,onPointerMissed:(...re)=>ae.current==null?void 0:ae.current(...re),onCreated:re=>{re.events.connect==null||re.events.connect(c?Sb(c)?c.current:c:$.current),u&&re.setEvents({compute:(me,Re)=>{const j=me[u+"X"],de=me[u+"Y"];Re.pointer.set(j/Re.size.width*2-1,-(de/Re.size.height)*2+1),Re.raycaster.setFromCamera(Re.pointer,Re.camera)}}),N==null||N(re)}}),k.current.render(ze.createElement(F,null,ze.createElement(sy,{set:ce},ze.createElement(ze.Suspense,{fallback:ze.createElement(Mb,{set:ie})},e)))))}),ze.useEffect(()=>{const J=P.current;if(J)return()=>my(J)},[]);const X=c?"none":"auto";return ze.createElement("div",F0({ref:$,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:X,...i}},R),ze.createElement("div",{ref:W,style:{width:"100%",height:"100%"}},ze.createElement("canvas",{ref:P,style:{display:"block"}},t)))}),aC=ze.forwardRef(function(e,t){return ze.createElement(yy,null,ze.createElement(nC,F0({},e,{ref:t})))});function lC({all:r,scene:e,camera:t}){const n=bf(({gl:l})=>l),i=bf(({camera:l})=>l),s=bf(({scene:l})=>l);return ze.useLayoutEffect(()=>{const l=[];r&&(e||s).traverse(h=>{h.visible===!1&&(l.push(h),h.visible=!0)}),n.compile(e||s,t||i);const c=new zd(128);new Bd(.01,1e5,c).update(n,e||s),c.dispose(),l.forEach(h=>h.visible=!1)},[]),null}export{ki as $,vA as A,gt as B,aC as C,Dx as D,ei as E,Ve as F,Lt as G,cu as H,ov as I,kt as J,Ui as K,Gn as L,$e as M,ya as N,At as O,lC as P,Vn as Q,$c as R,VA as S,fA as T,vn as U,D as V,Fn as W,ep as X,Di as Y,Mt as Z,sv as _,py as a,Ir as a0,lv as a1,cv as a2,mo as a3,uu as a4,Ma as a5,Oa as a6,qd as a7,jt as a8,Yc as a9,fa as aa,os as ab,An as ac,xa as ad,Sa as ae,rr as af,vs as ag,Vt as ah,Ua as ai,Ro as aj,Da as ak,On as al,bn as am,Ya as an,hb as ao,Dv as ap,nn as b,ao as c,sC as d,iS as e,Yd as f,he as g,_x as h,yx as i,vx as j,lr as k,dn as l,Ga as m,ux as n,hx as o,To as p,Ar as q,gd as r,or as s,Ne as t,bf as u,Ov as v,Fv as w,Bv as x,Dr as y,Mv as z};
